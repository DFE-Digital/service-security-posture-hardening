[ssphp_use_case_ado_data{{environment}}]

definition = """

`ssphp_metrics_data_index{{environment}}` sourcetype="ADO" SSPHP_DEBUG.type="fn git_repository_list" 
    [| search `ssphp_metrics_data_index{{environment}}` sourcetype="ADO" SSPHP_DEBUG.type="fn git_repository_list" 
    | stats max(SSPHP_RUN) as SSPHP_RUN 
    | return SSPHP_RUN] 

| eval repo_policy_owner=lower(mvindex(split('project.url',"/"),3))."::".lower('project.id') 
| rename id as repo_policy_repos, name as repo_name, project.name as project_name, project.state as project_state, project.visibility as project_visibility, isDisabled as repo_isDisabled, isInMaintenance as repo_isInMaintenance 

| sort 0 - _time 
| dedup repo_policy_owner, repo_policy_repos 
| fields repo_policy_owner, repo_policy_repos, repo_name, project_name, url, webUrl, project_state, project_visibility, repo_isDisabled, repo_isInMaintenance 

``` ***************** JOIN 1 ***************** ```
| join type=outer repo_policy_owner repo_policy_repos max=0
    [| search `ssphp_metrics_data_index{{environment}}` sourcetype="ADO" SSPHP_DEBUG.type="fn policy_configuration_get" isDeleted="false" isEnabled="true" 
        [| search `ssphp_metrics_data_index{{environment}}` sourcetype="ADO" SSPHP_DEBUG.type="fn policy_configuration_get" isDeleted="false" isEnabled="true" 
        | where SSPHP_RUN!=0 
        | stats max(SSPHP_RUN) as SSPHP_RUN 
        | return SSPHP_RUN]

    | rename id as policy_id, revision as policy_type_revision, createdBy.* as policy_createdby_*, is* as policy_is*, settings.* as policy_settings_*, type.* as policy_type_* 
    | eval repo_policy_owner=lower(mvindex(split('url',"/"),3))."::".lower(mvindex(split('url',"/"),4)) 
    | fields - policy_type_url

    | eventstats max(policy_type_revision) as max_policy_type_revision by policy_id, policy_type_id 
    | where 'max_policy_type_revision'='policy_type_revision' 


      ``` ***************** JOIN 2 ***************** ```
    | join type=outer repo_policy_owner 
        [| search `ssphp_metrics_data_index{{environment}}` sourcetype="ADO" SSPHP_DEBUG.type="fn git_repository_list" 
            [| search `ssphp_metrics_data_index{{environment}}` sourcetype="ADO" SSPHP_DEBUG.type="fn git_repository_list" 
            | where SSPHP_RUN!=0 
            | stats max(SSPHP_RUN) as SSPHP_RUN 
            | return SSPHP_RUN]

        | eval repo_policy_owner=lower(mvindex(split('project.url',"/"),3))."::".lower('project.id') 
        | stats values(id) as repo_policy_repos, values(defaultBranch) as repo_policy_defaultBranch by repo_policy_owner 
        | eval repo_policy_repos=mvjoin('repo_policy_repos',",") 
        ]
 
    | eval repo_policy_repos=split('repo_policy_repos',","),
           repo_organisation=mvindex(split('repo_policy_owner',"::"),0)

    | fields policy_id, repo_policy_owner, repo_organisation, repo_policy_repos, policy_type_*, repo_policy_defaultBranch, policy_settings_scope{}.matchKind, policy_settings_scope{}.refName, policy_settings_scope{}.repositoryId, policy_settings_*, policy_is* 

    | mvexpand repo_policy_repos 
    | where lower('policy_settings_scope{}.repositoryId')="null" OR lower('policy_settings_scope{}.repositoryId')=lower('repo_policy_repos') 
    | eval success=case(lower('policy_settings_scope{}.matchKind')="defaultbranch",1, lower('policy_settings_scope{}.matchKind')="exact" AND lower('policy_settings_scope{}.refName')=lower('repo_policy_defaultBranch'),1, lower('policy_settings_scope{}.matchKind')="prefix" AND like(lower('repo_policy_defaultBranch'),lower('policy_settings_scope{}.refName')."%"),1, 1==1,0) 
    | search success=1 

    | fields policy_id, repo_policy_owner, repo_organisation, repo_policy_repos, repo_name, project_name, url, webUrl, policy_type_id, policy_type_displayName, policy_type_revision, repo_policy_defaultBranch, policy_settings_*, policy_is*

    ]


"""
iseval = 0


[ssphp_use_case_ado_001_1-1-3{{environment}}]
definition = """

      | table repo_policy_owner, repo_policy_repos, repo_name, url, webUrl,
              policy_type_id, policy_type_displayName, policy_type_revision, 
              repo_policy_defaultBranch, policy_settings_scope{}.matchKind, policy_settings_scope{}.refName, policy_settings_scope{}.repositoryId, 
              policy_settings_minimumApproverCount, policy_settings_creatorVoteCounts

      | stats max(policy_settings_minimumApproverCount) as policy_settings_minimumApproverCount,
              values(policy_settings_creatorVoteCounts) as policy_settings_creatorVoteCounts,
              values(url) as url, values(webUrl) as webUrl
              by repo_policy_owner, repo_policy_repos

"""
iseval = 0


[ssphp_use_case_ado_001_1-1-4{{environment}}]
definition = """

      | table repo_policy_owner, repo_policy_repos, repo_name,
              policy_type_id, policy_type_displayName, policy_type_revision, 
              repo_policy_defaultBranch, policy_settings_scope{}.matchKind, policy_settings_scope{}.refName, policy_settings_scope{}.repositoryId, 
              policy_settings_requireVoteOnEachIteration,
              policy_settings_requireVoteOnLastIteration,
              policy_settings_resetOnSourcePush,
              policy_settings_resetRejectionsOnSourcePush
              
      | stats values(policy_settings_*) as policy_settings_* by repo_policy_owner, repo_policy_repos

"""
iseval = 0




