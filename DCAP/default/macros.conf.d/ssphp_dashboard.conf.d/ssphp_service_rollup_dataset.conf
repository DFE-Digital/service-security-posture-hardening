[ssphp_service_rollup_dataset{{environment}}(3)]
definition = """


| search ssphp.service.portfolio="$arg_portfolio$" AND ssphp.service.service_line="$arg_service_line$" AND ssphp.service.product="$arg_product$"

| eval ssphp.service.portfolio=trim('ssphp.service.portfolio'),
       ssphp.service.service_line=trim('ssphp.service.service_line'),
       ssphp.service.product=trim('ssphp.service.product')
       
| fields ssphp.service.portfolio, ssphp.service.service_line, ssphp.service.product, ssphp.service.id, ssphp.assessment.source, ssphp.use_case.category, ssphp.use_case.id, ssphp.use_case.title, ssphp.assessment.display_name, ssphp.score.score, ssphp.score.compliance_status, ssphp.score.ciso_priority```, ssphp.assessment.description```, ssphp.score.color, ssphp.resource.id, ssphp.resource.tenant, ssphp.resource.subscription, ssphp.resource.subscription_name, ssphp.resource.resource_group, ssphp.score.remediation_priority, ssphp.exemption.status, SSPHP_UID 

| search ssphp.exemption.status="comply" AND ssphp.service.portfolio!=""
| search (ssphp.use_case.category="POSTURE" OR 
         ssphp.use_case.category="KUBERNETES" OR
         ssphp.use_case.category="REPOS" OR 
         (ssphp.use_case.category="CODE_SCAN" AND ssphp.assessment.source="*") OR
         (ssphp.use_case.category="VULNERABILITY" AND ssphp.resource.id="*/virtualmachines/*"))
| search ssphp.resource.id="***"  AND ssphp.resource.id!=""
| eval type="base"

| appendpipe 
    [| stats count as total_controls by ssphp.service.portfolio, ssphp.service.service_line, ssphp.service.product, ssphp.service.id, ssphp.use_case.category, ssphp.resource.id
     | stats count as resources_total by ssphp.service.portfolio, ssphp.service.service_line, ssphp.service.product, ssphp.service.id, ssphp.use_case.category
     | eval type="all"]
     
| appendpipe
    [| stats sum(eval(if('ssphp.score.ciso_priority'="DfE Mandated" AND match('ssphp.score.compliance_status',"^Non-Compliant.*"),1,0))) as non_compliant_mandated_controls by ssphp.service.portfolio, ssphp.service.service_line, ssphp.service.product, ssphp.service.id, ssphp.use_case.category, ssphp.resource.id
     | stats sum(eval(if('non_compliant_mandated_controls'>0,1,0))) as resources_bad by ssphp.service.portfolio, ssphp.service.service_line, ssphp.service.product, ssphp.service.id, ssphp.use_case.category
     | eval type="non_compliant_mandated"]

| where type!="base"

| stats values(*) as * by ssphp.service.portfolio, ssphp.service.service_line, ssphp.service.product, ssphp.service.id, ssphp.use_case.category

| eval resources_good='resources_total'-'resources_bad'
| eval number_total_resources='resources_total',
       number_passed_resources='resources_good',
       perc_passed_resources=floor(('number_passed_resources'*100)/'number_total_resources'),
       abs='number_passed_resources'." / ".'number_total_resources',
       abs=if(isnull('abs'),"-",'abs')

| fields ssphp.service.portfolio, ssphp.service.service_line, ssphp.service.product, ssphp.service.id, ssphp.use_case.category, number_total_resources, number_passed_resources, perc_passed_resources, abs


"""

args = arg_portfolio,arg_service_line,arg_product
iseval = 0

