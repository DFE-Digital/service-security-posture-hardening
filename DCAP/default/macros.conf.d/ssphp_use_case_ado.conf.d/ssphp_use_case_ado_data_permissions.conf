[ssphp_use_case_ado_data_permissions_1{{environment}}]

definition = """

`ssphp_metrics_data_index{{environment}}` sourcetype="ADO" source="*:https://*/_apis/accesscontrollists/*" "acesVec"
        [| search `ssphp_metrics_data_index{{environment}}` sourcetype="ADO" source="*:https://*/_apis/accesscontrollists/*" "acesVec"
         | stats max(SSPHP_RUN) as SSPHP_RUN
         | return SSPHP_RUN
        ]
          
| rex field=source "accesscontrollists/(?<namespaceId>[^/?]+)\?" 

| rename metadata.organization as organization, acesVec{}.descriptor as descriptor, acesVec{}.allow as allow, acesVec{}.deny as deny, acesVec{}.extendedInfo.effectiveAllow as effectiveAllow, acesVec{}.extendedInfo.effectiveDeny as effectiveDeny 
| fields organization, token, namespaceId, descriptor, allow, deny, effectiveAllow, effectiveDeny

| eval mashed=mvzip(mvzip(mvzip(mvzip('descriptor','allow',"~~"),'deny',"~~"), 'effectiveAllow', "~~"), 'effectiveDeny', "~~") 
| fields organization, token, namespaceId, mashed 
| fields - _*

| mvexpand mashed 
| eval descriptor=mvindex(split('mashed',"~~"),0),
       allow=mvindex(split('mashed',"~~"),1),
       deny=mvindex(split('mashed',"~~"),2),
       effectiveAllow=mvindex(split('mashed',"~~"), 3),
       effectiveDeny=mvindex(split('mashed',"~~"), 4) 
| fields - mashed

| lookup local=true ado_namespaces_actions.csv organization, namespaceId
| lookup local=true ado_identities.csv organization, descriptor

| foreach mode=multivalue bit 
    [ eval effectiveAllow_bit=bit_and(<<ITEM>>, 'effectiveAllow'),
           effectiveDeny_bit=bit_and(<<ITEM>>, 'effectiveDeny'),
           effectiveAllow_actions=mvappend('effectiveAllow_actions', if('effectiveAllow_bit'>0, mvindex('actionName', <<ITER>>), null())),
           effectiveDeny_actions=mvappend('effectiveDeny_actions', if('effectiveDeny_bit'>0, mvindex('actionName', <<ITER>>), null()))
    ] 
| fields - allow_bit, deny_bit, effectiveAllow_bit, effectiveDeny_bit, effectiveAllow, effectiveDeny, descriptor


```| eval project_id=mvindex(split('token',"/"),1),
       repo_id=mvindex(split('token',"/"),2)```
| eval project_id=case(namespaceName="Git Repositories",mvindex(split('token',"/"),1),
                       namespaceName="Identity",mvindex(split('token',"\\"),0),
                       1==1,mvindex(split('token',"\\"),0)),
       repo_id=case(namespaceName="Git Repositories",mvindex(split('token',"/"),2),
                    namespaceName="Identity","-",
                    1==1,mvindex(split('token',"\\"),1))


| eval effectiveAllow_actions_actors=if('isPersonalIdentity'="true",'effectiveAllow_actions',null()),
       actors_with_effectiveAllow_actions=if('isPersonalIdentity'="true" AND isnotnull('effectiveAllow_actions_actors'),'displayName',null()),
       effectiveDeny_actions_actors=if('isPersonalIdentity'="true",'effectiveDeny_actions',null()),
       actors_with_effectiveDeny_actions=if('isPersonalIdentity'="true" AND isnotnull('effectiveDeny_actions_actors'),'displayName',null())



"""

iseval = 0




[ssphp_use_case_ado_data_permissions_2{{environment}}(1)]

definition = """

| eval target_isPersonalIdentity=case("$target_action$"=="Create repository","true",
                                      "$target_action$"=="Manage group membership","true",
                                      1==1,".*")
| eval effectiveAllow_actions_actors=if(match('isPersonalIdentity','target_isPersonalIdentity'),mvfilter(match('effectiveAllow_actions',"$target_action$")),null()), 
       effectiveDeny_actions_actors=if(match('isPersonalIdentity','target_isPersonalIdentity'),mvfilter(match('effectiveDeny_actions',"$target_action$")),null())
       
| eval actors_with_effectiveAllow_actions=if(match('isPersonalIdentity','target_isPersonalIdentity') AND isnotnull('effectiveAllow_actions_actors') AND mvcount(mvfilter(match('effectiveAllow_actions_actors',"$target_action$")))>0,'displayName',null()), 
       actors_with_effectiveDeny_actions=if(match('isPersonalIdentity','target_isPersonalIdentity') AND isnotnull('effectiveDeny_actions_actors') AND mvcount(mvfilter(match('effectiveDeny_actions_actors',"$target_action$")))>0,'displayName',null())


"""

args = target_action
iseval = 0




[ssphp_use_case_ado_data_permissions_3{{environment}}(1)]

definition = """

| fields - isPersonalIdentity

| stats values(*) as * by token

| eval target_namespace_regex_string=case("$target_namespace$"=="Git Repositories","^repoV2/[0-9a-f-]{36}/[0-9a-f-]{36}$",
                                          "$target_namespace$"=="Identity","^[0-9a-f-]{36}(\\\[0-9a-f-]{36})*$",
                                          1==1,".*")
| where mvcount(mvfilter(match('namespaceName',"$target_namespace$")))>0 AND match('token','target_namespace_regex_string')


| rename displayName as Actors
| fields organization, project_id, repo_id, Actors, effective*_actions, effective*_actions_actors, actors_with_effective*

| join type=outer organization, project_id, repo_id
    [| search `ssphp_metrics_data_index{{environment}}` sourcetype="ADO" source="*:https://dev.azure.com/*/*/_apis/git/repositories?api-version=*"
        [| search `ssphp_metrics_data_index{{environment}}` sourcetype="ADO" source="*:https://dev.azure.com/*/*/_apis/git/repositories?api-version=*"
         | stats max(SSPHP_RUN) as SSPHP_RUN
         | return SSPHP_RUN]

     | spath metadata.type
     | search metadata.type="fn git_repository_list"
 
     | rename metadata.organization as organization, id as repo_id, name as repo_name, defaultBranch as repo_default_branch, isDisabled as repo_isdisabled, isInMaintenance as repo_ismaintenance, project.* as project_*, metadata.organization as organization, metadata.tenant as tenant, url as repo_url, daysSinceLastCommit as repo_daysSinceLastCommit, mostRecentCommitDate as repo_mostRecentCommitDate
     | fields tenant, organization, project_id, project_name, project_revision, project_state, project_url, project_visibility, repo_id, repo_name, repo_default_branch, repo_isdisabled, repo_ismaintenance, repo_url, repo_daysSinceLastCommit, repo_mostRecentCommitDate
    ]


| rename organization as ssphp.resource.organization,
         project_id as ssphp.resource.project_id,
         project_name as ssphp.resource.project_name,
         repo_id as ssphp.resource.repo_id,
         repo_name as ssphp.resource.repo_name

`ssphp_use_case_add_service_metadata_ado{{environment}}`

```| lookup ssphp_ado_repo_owner.csv organization, project_id, repo_id OUTPUT portfolio as ssphp.service.portfolio, service_line as ssphp.service.service_line, product as ssphp.service.product 
| fillnull value="Unassigned" ssphp.service.portfolio, ssphp.service.service_line, ssphp.service.product ```


| where NOT (isnull('ssphp.resource.project_name') OR 'ssphp.resource.project_name'="")  ``` we think that events here without a porject name are remnants of projects that were previousy deleted but the ACL records were not tidied up in ADO ```

```====================================== MACRO ENDS HERE ======================================================================================```

"""

args = target_namespace
iseval = 0



