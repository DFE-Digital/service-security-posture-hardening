[ssphp_use_case_ado_001{{environment}}]
definition = """

index="main" sourcetype="ADO" SSPHP_DEBUG.type="fn git_repository_list"
      [| search index="main" sourcetype="ADO" SSPHP_DEBUG.type="fn git_repository_list"
       | stats max(SSPHP_RUN) as SSPHP_RUN
       | return SSPHP_RUN]

| eval repo_policy_owner=lower(mvindex(split('project.url',"/"),3))."::".lower('project.id')
| rename id as repo_policy_repos, name as repo_name, 
         project.name as project_name, project.state as project_state, project.visibility as project_visibility,
         isDisabled as repo_isDisabled, isInMaintenance as repo_isInMaintenance

| sort 0 - _time
| dedup repo_policy_owner, repo_policy_repos

| table repo_policy_owner, repo_policy_repos, repo_name, project_name, project_state, project_visibility, repo_isDisabled, repo_isInMaintenance

| join type=outer repo_policy_owner, repo_policy_repos
    [| search index="main" sourcetype="ADO" SSPHP_DEBUG.type="fn policy_configuration_get" 
         [| search index="main" sourcetype="ADO" SSPHP_DEBUG.type="fn policy_configuration_get"
          | where SSPHP_RUN!=0
          | stats max(SSPHP_RUN) as SSPHP_RUN
          | return SSPHP_RUN]
          
| rename id as policy_type_id,
         revision as policy_type_revision,
         createdBy.* as policy_createdby_*,
         is* as policy_settings_is*,
         settings.* as policy_settings_*,
         type.* as policy_type_*
         
| eval repo_policy_owner=lower(mvindex(split('url',"/"),3))."::".lower(mvindex(split('url',"/"),4))

| fields - policy_type_url

| join type=outer repo_policy_owner
    [| search index="main" sourcetype="ADO" SSPHP_DEBUG.type="fn git_repository_list"
      [| search index="main" sourcetype="ADO" SSPHP_DEBUG.type="fn git_repository_list"
       | where SSPHP_RUN!=0
       | stats max(SSPHP_RUN) as SSPHP_RUN
       | return SSPHP_RUN]

     | eval repo_policy_owner=lower(mvindex(split('project.url',"/"),3))."::".lower('project.id')

     | stats values(id) as repo_policy_repos, values(defaultBranch) as repo_policy_defaultBranch by repo_policy_owner
     | eval repo_policy_repos=mvjoin('repo_policy_repos',",")]
     
| eval repo_policy_repos=split('repo_policy_repos',",")
| fields repo_policy_owner, repo_policy_repos, policy_type_*, repo_policy_defaultBranch, policy_settings_scope{}.matchKind, policy_settings_scope{}.refName, policy_settings_scope{}.repositoryId, policy_settings_*
| mvexpand repo_policy_repos
| where lower('policy_settings_scope{}.repositoryId')="null" OR lower('policy_settings_scope{}.repositoryId')=lower('repo_policy_repos')

| eval success=case(lower('policy_settings_scope{}.matchKind')="defaultbranch",1,
                    lower('policy_settings_scope{}.matchKind')="exact" AND lower('policy_settings_scope{}.refName')=lower('repo_policy_defaultBranch'),1,
                    lower('policy_settings_scope{}.matchKind')="prefix" AND like(lower('repo_policy_defaultBranch'),lower('policy_settings_scope{}.refName')."%"),1,
                    1==1,0)
| search success=1
| table repo_policy_owner, repo_policy_repos, repo_name,
        policy_type_id, policy_type_displayName, policy_type_revision, 
        repo_policy_defaultBranch, policy_settings_scope{}.matchKind, policy_settings_scope{}.refName, policy_settings_scope{}.repositoryId, 
        policy_settings_*

``` ===================== vvvv USE CASE SPECIFIC vvvv ===================== ```
| search policy_type_id="fa4e907d-c16b-4a4c-9dfa-4906e5d171dd"
| table repo_policy_owner, repo_policy_repos, repo_name,
        policy_type_id, policy_type_displayName, policy_type_revision, 
        repo_policy_defaultBranch, policy_settings_scope{}.matchKind, policy_settings_scope{}.refName, policy_settings_scope{}.repositoryId, 
        policy_settings_minimumApproverCount
        
| stats max(policy_settings_minimumApproverCount) as policy_settings_minimumApproverCount by repo_policy_owner, repo_policy_repos]


| eval org=mvindex(split('repo_policy_owner',"::"),0),
       project_id=mvindex(split('repo_policy_owner',"::"),1)
| rename repo_policy_repos as repo_id
| table org, project_name, project_id, ```project_state, project_visibility,``` repo_name, repo_id, ```repo_isDisabled, repo_isInMaintenance,``` policy_settings_minimumApproverCount

"""

iseval = 0
