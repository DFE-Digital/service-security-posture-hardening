[ssphp_list_fs_controls{{environment}}]
enableSched = 0

search = """

`ssphp_summary_index` earliest=-7d latest=now
      ssphp.source.foundational_system="*"
      (ssphp.use_case.id="azure*" OR ssphp.use_case.id="dns*" OR ssphp.use_case.id="m365*" OR ssphp.use_case.id="aad*" OR (ssphp.use_case.id="github*" AND ssphp.use_case.savedsearch="*_fs*"))
      ssphp.use_case.id!="*_000"

| dedup ssphp.use_case.title

| eval ssphp.source.foundational_system=if('ssphp.source.foundational_system'="DNS","AWS",'ssphp.source.foundational_system')

| search NOT ssphp.use_case.savedsearch="*_DEV*"

| rex field=ssphp.use_case.title "[^\[]*\[(?<Source>DfE|CIS).*"

| table ssphp.source.foundational_system, Source, ssphp.use_case.id, ssphp.use_case.title, ssphp.benchmark.control.title, ssphp.score.ciso_priority, ssphp.use_case.savedsearch

| eval uc_no=split(mvindex(split(' ssphp.use_case.id',"_"),-1),"-"),
       uc_no_1=mvindex('uc_no',0), uc_no_2=coalesce(mvindex('uc_no',1),0), uc_no_3=coalesce(mvindex('uc_no',2),0),
       uc_no_1="00".'uc_no_1', uc_no_2="00".'uc_no_2', uc_no_3="00".'uc_no_3',
       uc_no_1=substr('uc_no_1',len('uc_no_1')-1), uc_no_2=substr('uc_no_2',len('uc_no_2')-1), uc_no_3=substr('uc_no_3',len('uc_no_3')-1)
       
| sort 0 ssphp.source.foundational_system, Source, uc_no_1, uc_no_2, uc_no_3

| eval ssphp.score.ciso_priority=case('ssphp.score.ciso_priority'="1","DfE Mandated",
                                      'ssphp.score.ciso_priority'="2","Recommended",
                                      1==1,"Desirable")

| fields - uc_no, uc_no_1, uc_no_2, uc_no_3
| streamstats count

| appendpipe
    [| stats values(ssphp.source.foundational_system) as ssphp.source.foundational_system
    | mvexpand ssphp.source.foundational_system
    | eval count=0]

| sort 0 ssphp.source.foundational_system, count
| eval ssphp.source.foundational_system=if('count'=0,'ssphp.source.foundational_system',null())
| fields - count

| rename ssphp.source.foundational_system as "Foundational System",
         ssphp.use_case.id as "Use Case ID",
         ssphp.use_case.title as "Use Case Title",
         ssphp.benchmark.control.title as "Control Title",
         ssphp.score.ciso_priority as "Control Status",
         ssphp.use_case.savedsearch as "Splunk Saved Search
         
"""


[ssphp_get_list_controls{{environment}}]
enableSched = 0

search = """

| rest /servicesNS/-/-/saved/searches splunk_server=local
| rename eai:acl.* as *, title as use_case
| search app="{{app}}{{environment}}" use_case="ssphp_use_case_*"
| rex field=use_case "^ssphp_use_case_(?<fs>[^_]*)_"
| eval source=if(like('use_case',"%cis%"),"cis","bespoke")
| rex field=search ".*ssphp.score.ciso_priority=\"(?<control_type>[^\"]*)\""
| rex field=search ".*ssphp.use_case.id=\"(?<use_case_id>[^\"]*)\""

| search fs="m365"
| lookup cis_benchmark_v8_doc_m365.csv ssphp.use_case.id as use_case_id OUTPUT ssphp.cis_benchmark.control.title as benchmark_title,
                                                                               ssphp.cis_benchmark.control.description as benchmark_description,
                                                                               ssphp.cis_benchmark.control.impact as benchmark_impact,
                                                                               ssphp.cis_benchmark.control.rationale as benchmark_rationale,
                                                                               ssphp.cis_benchmark.control.number as control,
                                                                               ssphp.cis_benchmark.control.profile_applicability as profile_applicability,
                                                                               ssphp.cis_benchmark.controls.ig1 as ig1,
                                                                               ssphp.cis_benchmark.controls.ig2 as ig2,
                                                                               ssphp.cis_benchmark.controls.ig3 as ig3

| rex field=search ".*ssphp.use_case.title=\"(?<dfe_control>[^\"]*)\""
| rex field=search ".*ssphp.benchmark.control.title=\"(?<dfe_benchmark_title>[^\"]*)\""
| rex field=search ".*ssphp.benchmark.control.description=\"(?<dfe_benchmark_description>[^\"]*)\""
| rex field=search ".*ssphp.benchmark.control.rationale=\"(?<dfe_benchmark_rationale>[^\"]*)\""

| eval benchmark_title=coalesce('benchmark_title','dfe_benchmark_title'),
       benchmark_description=coalesce('benchmark_description','dfe_benchmark_description'),
       benchmark_rationale=coalesce('benchmark_rationale','dfe_benchmark_rationale'),
       control=coalesce('control','dfe_control')

| eval s_control_1=substr("00".mvindex(split('control',"."),0), len("00".mvindex(split('control',"."),0))-1, 2),
       s_control_2=substr("00".mvindex(split('control',"."),1), len("00".mvindex(split('control',"."),1))-1, 2),
       s_control_3=substr("00".mvindex(split('control',"."),2), len("00".mvindex(split('control',"."),2))-1, 2)
| sort control_type, s_control_1, s_control_1, s_control_2, s_control_3

| eval control_type=case('control_type'="1","DfE Mandated",
                         'control_type'="2","Recommended",
                         'control_type'="3","Desirable")
                         
| fields use_case, app, fs, source, use_case_id, control_type, benchmark_title, benchmark_description, benchmark_impact, benchmark_rationale, control, profile_applicability, ig1, ig2, ig3```, search```

| join type=outer use_case_id
    [| loadjob savedsearch="{{splunk_user}}:{{app}}{{environment}}:ssphp_create_dashboard_dataset_posture{{environment}}"
     | where 'line_type'="detail"
     | rename ssphp.use_case.id as use_case_id, ssphp.score.score as current_score, ssphp.score.compliance_status as current_compliance_status
     | eval current_compliance_status=mvindex(split('current_compliance_status',"|"),0)
     | table use_case_id, current_score, current_compliance_status]

| table use_case, app, fs, source, use_case_id, control_type, benchmark_title, benchmark_description, benchmark_impact, benchmark_rationale, control, profile_applicability, ig1, ig2, ig3, current_score, current_compliance_status ```, search```

"""