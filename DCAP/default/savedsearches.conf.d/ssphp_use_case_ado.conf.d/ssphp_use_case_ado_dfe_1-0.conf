[ssphp_use_case_ado_dfe_1-0{{environment}}]
cron_schedule = 10 6 * * *
dispatch.earliest_time = 0
dispatch.latest_time = now
enableSched = 1
search = """

`ssphp_metrics_data_index_DEV` sourcetype="ADO" SSPHP_DEBUG.type="fn adv_security_repo_enablement" 
         [| search `ssphp_metrics_data_index_DEV` sourcetype="ADO" SSPHP_DEBUG.type="fn adv_security_repo_enablement"
          | stats max(SSPHP_RUN) as SSPHP_RUN
          | return SSPHP_RUN]
| rename repositoryId as repo_id, SSPHP_DEBUG.organization as organization, SSPHP_DEBUG.project as project_id SSPHP_DEBUG.tenant as tenant
| fields tenant, organization, project_id, repo_id, advSecEnabled, advSec*

| join type=outer organization, project_id, repo_id
    [| search `ssphp_metrics_data_index_DEV` sourcetype="ADO" SSPHP_DEBUG.type="fn git_repository_list"
         [| search `ssphp_metrics_data_index_DEV` sourcetype="ADO" SSPHP_DEBUG.type="fn git_repository_list"
          | stats max(SSPHP_RUN) as SSPHP_RUN
          | return SSPHP_RUN]
          
    | rename id as repo_id, 
             name as repo_name,
             project.* as project_*,
             SSPHP_DEBUG.organization as organization
    | table organization, project_id, repo_id, project_name, repo_name]

| lookup ssphp_ado_repo_owner.csv organization, project_id, repo_id OUTPUT portfolio as ssphp.service.portfolio, service_line as ssphp.service.service_line, product as ssphp.service.product
| fillnull value="Unassigned" ssphp.service.portfolio, ssphp.service.service_line, ssphp.service.product

| stats values(project_name) as project_name, 
        values(repo_name) as repo_name,
        values(advSecEnabled) as advSecEnabled,
        values(ssphp.service.portfolio) as ssphp.service.portfolio, 
        values(ssphp.service.service_line) as ssphp.service.service_line, 
        values(ssphp.service.product) as ssphp.service.product

        by tenant, organization, project_id, repo_id

| makemv ssphp.score.non_compliant_fields
| eval ssphp.score.non_compliant_fields=if('advSecEnabled'="true",
                                            'ssphp.score.non_compliant_fields',
                                            mvappend('ssphp.score.non_compliant_fields',"advSecEnabled"))

| eval ssphp.score.remediation_priority=if('advSecEnabled'="true","0","20")

| eval ssphp.score.numerator=coalesce(mvcount('ssphp.score.non_compliant_fields'),"0"),
       ssphp.score.denominator="1",
       ssphp.score.score=floor(('ssphp.score.denominator'-'ssphp.score.numerator')*100/'ssphp.score.denominator')

| fields ssphp.service.*,
         tenant, organization, project_id, project_name, repo_id, repo_name,
         advSecEnabled,
         ssphp.score.remediation_priority,
         ssphp.score.score, ssphp.score.non_compliant_fields



``` ##################### replace with dashboard filter ##################### ```

``` ##################### end dashboard query ##################### ```

| stats values(ssphp.service.*) as ssphp.service.*,
        values(project_name) as project_name, 
        values(repo_name) as repo_name,
        count as ssphp.score.denominator,
        sum(eval(if('ssphp.score.score'<100,1,0))) as ssphp.score.numerator,
        values(ssphp.service.*) as ssphp.service.*,
        values(ssphp.score.remediation_priority) as ssphp.score.remediation_priority

        by organization, project_id, repo_id
        
| eval ssphp.score.score=if('ssphp.score.numerator'>0,"0","100")


``` ##################### add metadata ##################### ```
| eval SSPHP_RUN=round(now())

| eval ssphp.use_case.id="ado_dfe_1-0",
       ssphp.use_case.title="ADO [DfE 1.0]",
       ssphp.use_case.savedsearch="ssphp_use_case_ado_dfe_1-0{{environment}}",
       ssphp.use_case.version.number="1.0.0",
       ssphp.use_case.version.last_changed_date="2025-03-20",
       ssphp.use_case.version.last_changed_by="Ian Pearl",
       ssphp.use_case.group="ADO",
       ssphp.use_case.group_name="REPOS",
       ssphp.use_case.category="REPOS",
       ssphp.resource.id="/" . 'organization' . "/" . 'project_id' . "/" . 'repo_id',
       ssphp.resource.name="/" . 'organization' . "/" . 'project_name' . "/" . 'repo_name',
       ssphp.resource.organization='organization',
       ssphp.resource.project_id='project_id',
       ssphp.resource.project_name='project_name',
       ssphp.resource.repo_id='repo_id',
       ssphp.resource.repo_name='repo_name',
       ssphp.resource.type="ado/repo",
       ssphp.assessment.source="ADO"

| eval ssphp.risk.expectancy="-",
       ssphp.risk.impact="-"

| eval ssphp.score.ciso_priority="1",
       ssphp.score.threshold.green="99",
       ssphp.score.threshold.orange="-",
       ssphp.score.threshold.red="-",
       ssphp.score.color=case('ssphp.score.score'>'ssphp.score.threshold.green',"green",1==1,"red"),
       ssphp.score.scoring_narrative="In order to be compliant, every repo MUST have ADO Advanced Security Enabled."


| eval ssphp.assessment.origin="DFE",
       ssphp.assessment.title="ADO Advanced Security should be enabled for every Repo",
       ssphp.assessment.description="ADO Advanced Security brings many features that are essential to hardening Repo Posture",
       ssphp.assessment.rationale="The control is marked as 'Not Compliant' if the Repo does not have ADO Advanced Security Enabled.",
       ssphp.assessment.impact="Critical"

| eval SSPHP_UID=md5('ssphp.use_case.category'."|".'ssphp.service.product'."|".'ssphp.use_case.id'."|".'ssphp.resource.id')

`ssphp_use_case_no_write{{environment}}`

"""
