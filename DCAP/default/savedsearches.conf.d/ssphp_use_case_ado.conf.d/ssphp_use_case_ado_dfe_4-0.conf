[ssphp_use_case_ado_dfe_4-0{{environment}}]
cron_schedule = 10 6 * * *
dispatch.earliest_time = 0
dispatch.latest_time = now
enableSched = 1
search = """

`ssphp_use_case_ado_data_DEV`

| fields ssphp.resource.*
         ssphp.service.*
         
| join type=outer ssphp.resource.organization, ssphp.resource.project_id, ssphp.resource.repo_id
    [| search `ssphp_metrics_data_index_DEV` sourcetype="ADO"  source="*:https://advsec.dev.azure.com/*/*/_apis/management/repositories/*/enablement?api-version=*"
         [| search `ssphp_metrics_data_index_DEV` sourcetype="ADO" source="*:https://advsec.dev.azure.com/*/*/_apis/management/repositories/*/enablement?api-version=*"
          | stats max(SSPHP_RUN) as SSPHP_RUN
          | return SSPHP_RUN]
     | spath metadata.type
     | search metadata.type="fn adv_security_repo_enablement"

     | rename metadata.tenant as tenant, metadata.organization as ssphp.resource.organization, projectId as ssphp.resource.project_id, repositoryId as ssphp.resource.repo_id
     | table ssphp.resource.organization, ssphp.resource.project_id, ssphp.resource.repo_id, secretProtectionFeatures*, codeSecurityFeatures*]

| fields ssphp.resource.*, ssphp.service.*, secretProtectionFeatures.*, codeSecurityFeatures.*

| stats values(ssphp.service.*) as ssphp.service.*, 
        values(ssphp.resource.*) as ssphp.resource.*,
        values(secretProtectionFeatures.*) as secretProtectionFeatures.*,
        values(codeSecurityFeatures.*) as codeSecurityFeatures.*
        by ssphp.resource.organization, ssphp.resource.project_id, ssphp.resource.repo_id


| makemv ssphp.score.non_compliant_fields
| eval ssphp.score.non_compliant_fields=if('codeSecurityFeatures.codeQLEnabled'="true",
                                            'ssphp.score.non_compliant_fields',
                                            mvappend('ssphp.score.non_compliant_fields',"codeSecurityFeatures.codeQLEnabled"))

| eval ssphp.score.remediation_priority=if('codeSecurityFeatures.codeQLEnabled'="true","0","20")

| eval ssphp.score.numerator=coalesce(mvcount('ssphp.score.non_compliant_fields'),"0"),
       ssphp.score.denominator="1",
       ssphp.score.score=floor(('ssphp.score.denominator'-'ssphp.score.numerator')*100/'ssphp.score.denominator')

| eval resource_id="/" . 'ssphp.resource.organization' . "/" . 'ssphp.resource.project_id' . "/" . 'ssphp.resource.repo_id'

| fields ssphp.service.*,
         ssphp.resource.*
         tenant, resource_id,
         codeSecurityFeatures.codeQLEnabled,
         ssphp.score.remediation_priority,
         ssphp.score.score, ssphp.score.non_compliant_fields


``` ##################### replace with dashboard filter ##################### ```

``` ##################### end dashboard query ##################### ```

| stats values(ssphp.service.*) as ssphp.service.*,
        values(ssphp.resource.project_name) as ssphp.resource.project_name, 
        values(ssphp.resource.repo_name) as ssphp.resource.repo_name,
        count as ssphp.score.denominator,
        sum(eval(if('ssphp.score.score'<100,1,0))) as ssphp.score.numerator,
        values(ssphp.service.*) as ssphp.service.*,
        values(ssphp.score.remediation_priority) as ssphp.score.remediation_priority

        by ssphp.resource.organization, ssphp.resource.project_id, ssphp.resource.repo_id
        
| eval ssphp.score.score=if('ssphp.score.numerator'>0,"0","100")


``` ##################### add metadata ##################### ```
| eval SSPHP_RUN=round(now())

| eval ssphp.use_case.id="ado_dfe_4-0",
       ssphp.use_case.title="ADO [DfE 4.0]",
       ssphp.use_case.savedsearch="ssphp_use_case_ado_dfe_4-0{{environment}}",
       ssphp.use_case.version.number="1.0.0",
       ssphp.use_case.version.last_changed_date="2025-08-04",
       ssphp.use_case.version.last_changed_by="Ian Pearl",
       ssphp.use_case.group="ADO",
       ssphp.use_case.group_name="REPOS",
       ssphp.use_case.category="REPOS",
       ssphp.resource.id="/" . 'ssphp.resource.organization' . "/" . 'ssphp.resource.project_id' . "/" . 'ssphp.resource.repo_id',
       ssphp.resource.name="/" . 'ssphp.resource.organization' . "/" . 'ssphp.resource.project_name' . "/" . 'ssphp.resource.repo_name',
       ssphp.resource.type="ado/repo",
       ssphp.assessment.source="ADO"

| eval ssphp.risk.expectancy="-",
       ssphp.risk.impact="-"

| eval ssphp.score.ciso_priority="1",
       ssphp.score.threshold.green="99",
       ssphp.score.threshold.orange="-",
       ssphp.score.threshold.red="-",
       ssphp.score.color=case('ssphp.score.score'>'ssphp.score.threshold.green',"green",1==1,"red"),
       ssphp.score.scoring_narrative="In order to be compliant, every repo MUST have CodeQL Enabled."


| eval ssphp.assessment.origin="DFE",
       ssphp.assessment.title="ADO CodeQL should be enabled for every Repo",
       ssphp.assessment.description="ADO CodeQL scanning is essential to hardening Repo Posture",
       ssphp.assessment.rationale="The control is marked as 'Not Compliant' if the Repo does not have ADO CodeQL Enabled.",
       ssphp.assessment.impact="Critical"

| eval SSPHP_UID=md5('ssphp.use_case.category'."|".'ssphp.service.product'."|".'ssphp.use_case.id'."|".'ssphp.resource.id')

`ssphp_use_case_write{{environment}}`

"""
