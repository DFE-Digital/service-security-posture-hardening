[ssphp_check_all_acl_token_joins{{environment}}]
cron_schedule = 10 6 * * *
dispatch.earliest_time = 0
dispatch.latest_time = now
enableSched = 1
search = """

index="ssphp_metrics_data" sourcetype="ADO" source="*:https://*/_apis/accesscontrollists/*" "acesVec"
    [| search index="ssphp_metrics_data" sourcetype="ADO" source="*:https://*/_apis/accesscontrollists/*" "acesVec"
    | stats max(SSPHP_RUN) as SSPHP_RUN
    | return SSPHP_RUN ]
| rex field=source "accesscontrollists/(?<namespaceId>[^/?]+)\?"
| search namespaceId="5a27515b-ccd7-42c9-84f1-54c998f03866"
| stats count by token
| eval t1=mvindex(split('token',"\\"),0),
       t2=mvindex(split('token',"\\"),1)
 
```========PROJECTS==========```
| join type=outer t1
    [| search `ssphp_metrics_data_index_DEV` sourcetype="ADO" metadata.type="fn projects_list"
        [| search `ssphp_metrics_data_index_DEV` sourcetype="ADO" metadata.type="fn projects_list"
         | stats max(SSPHP_RUN) as SSPHP_RUN
         | return SSPHP_RUN]
     | rename id as t1, name as t1_project_name
     | table t1, t1_project_name]
 
| join type=outer t2
    [| search `ssphp_metrics_data_index_DEV` sourcetype="ADO" metadata.type="fn projects_list"
        [| search `ssphp_metrics_data_index_DEV` sourcetype="ADO" metadata.type="fn projects_list"
         | stats max(SSPHP_RUN) as SSPHP_RUN
         | return SSPHP_RUN]
     | rename id as t2, name as t2_project_name
     | table t2, t2_project_name]
 
```========REPOS==========```
| join type=outer t1
    [| search `ssphp_metrics_data_index_DEV` sourcetype="ADO" metadata.type="fn git_repository_list"
        [| search `ssphp_metrics_data_index_DEV` sourcetype="ADO" metadata.type="fn git_repository_list"
         | stats max(SSPHP_RUN) as SSPHP_RUN
         | return SSPHP_RUN]
     | rename id as t1, name as t1_repo_name
     | table t1, t1_repo_name]
    
| join type=outer t2
    [| search `ssphp_metrics_data_index_DEV` sourcetype="ADO" metadata.type="fn git_repository_list"
        [| search `ssphp_metrics_data_index_DEV` sourcetype="ADO" metadata.type="fn git_repository_list"
         | stats max(SSPHP_RUN) as SSPHP_RUN
         | return SSPHP_RUN]
     | rename id as t2, name as t2_repo_name
     | table t2, t2_repo_name]
 
```=========GROUPS=========```
| join type=outer t1
    [| search `ssphp_metrics_data_index_DEV` sourcetype="ADO" metadata.type="fn graph_groups_list"
        [| search `ssphp_metrics_data_index_DEV` sourcetype="ADO" metadata.type="fn graph_groups_list"
         | stats max(SSPHP_RUN) as SSPHP_RUN
         | return SSPHP_RUN]
     | rename originId as t1, principalName as t1_group_principalName
     | table t1, t1_group_principalName]
 
| join type=outer t2
    [| search `ssphp_metrics_data_index_DEV` sourcetype="ADO" metadata.type="fn graph_groups_list"
        [| search `ssphp_metrics_data_index_DEV` sourcetype="ADO" metadata.type="fn graph_groups_list"
         | stats max(SSPHP_RUN) as SSPHP_RUN
         | return SSPHP_RUN]
     | rename originId as t2, principalName as t2_group_principalName
     | table t2, t2_group_principalName]
 
| join type=outer t1
    [| search `ssphp_metrics_data_index_DEV` sourcetype="ADO" metadata.type="fn graph_groups_list"
        [| search `ssphp_metrics_data_index_DEV` sourcetype="ADO" metadata.type="fn graph_groups_list"
         | stats max(SSPHP_RUN) as SSPHP_RUN
         | return SSPHP_RUN]
     | rex field=domain "vstfs:///Classification/TeamProject/(?<d1>.*)$"
     | rex field=domain "vstfs:///Framework/Generic/(?<d2>.*)$"
     | rex field=domain "vstfs:///Framework/IdentityDomain/(?<d3>.*)$"
     | eval t1=coalesce('d1','d2','d3')
     | rename displayName as t1_group_displayName
     | table t1, t1_group_displayName]
 
| join type=outer t2
    [| search `ssphp_metrics_data_index_DEV` sourcetype="ADO" metadata.type="fn graph_groups_list"
        [| search `ssphp_metrics_data_index_DEV` sourcetype="ADO" metadata.type="fn graph_groups_list"
         | stats max(SSPHP_RUN) as SSPHP_RUN
         | return SSPHP_RUN]
     | rex field=domain "vstfs:///Classification/TeamProject/(?<d1>.*)$"
     | rex field=domain "vstfs:///Framework/Generic/(?<d2>.*)$"
     | rex field=domain "vstfs:///Framework/IdentityDomain/(?<d3>.*)$"
     | eval t2=coalesce('d1','d2','d3')
     | rename displayName as t2_group_displayName
     | table t2, t2_group_displayName]
 
```========USERS==========```
| join type=outer t1
    [| search `ssphp_metrics_data_index_DEV` sourcetype="ADO" metadata.type="fn graph_users_list"
        [| search `ssphp_metrics_data_index_DEV` sourcetype="ADO" metadata.type="fn graph_users_list"
         | stats max(SSPHP_RUN) as SSPHP_RUN
         | return SSPHP_RUN]
     | rename principalName as t1, displayName as t1_user_displayName_1
     | table t1, t1_user_displayName_1]
    
| join type=outer t2
    [| search `ssphp_metrics_data_index_DEV` sourcetype="ADO" metadata.type="fn graph_users_list"
        [| search `ssphp_metrics_data_index_DEV` sourcetype="ADO" metadata.type="fn graph_users_list"
         | stats max(SSPHP_RUN) as SSPHP_RUN
         | return SSPHP_RUN]
     | rename principalName as t2, displayName as t2_user_displayName_1
     | table t2, t2_user_displayName_1]
 
| join type=outer t1
    [| search `ssphp_metrics_data_index_DEV` sourcetype="ADO" metadata.type="fn graph_users_list"
        [| search `ssphp_metrics_data_index_DEV` sourcetype="ADO" metadata.type="fn graph_users_list"
         | stats max(SSPHP_RUN) as SSPHP_RUN
         | return SSPHP_RUN]
     | rename originId as t1, displayName as t1_user_displayName_2
     | table t1, t1_user_displayName_2]
    
| join type=outer t2
    [| search `ssphp_metrics_data_index_DEV` sourcetype="ADO" metadata.type="fn graph_users_list"
        [| search `ssphp_metrics_data_index_DEV` sourcetype="ADO" metadata.type="fn graph_users_list"
         | stats max(SSPHP_RUN) as SSPHP_RUN
         | return SSPHP_RUN]
     | rename originId as t2, displayName as t2_user_displayName_2
     | table t2, t2_user_displayName_2]
 
```========IDENTITIES==========```
| join type=outer t1
    [| search `ssphp_metrics_data_index_DEV` sourcetype="ADO" metadata.type="fn identities"
        [| search `ssphp_metrics_data_index_DEV` sourcetype="ADO" metadata.type="fn identities"
         | stats max(SSPHP_RUN) as SSPHP_RUN
         | return SSPHP_RUN]
     | rename id as t1, providerDisplayName as t1_identities_providerDisplayName
     | table t1, t1_identities_providerDisplayName]
 
| join type=outer t2
    [| search `ssphp_metrics_data_index_DEV` sourcetype="ADO" metadata.type="fn identities"
        [| search `ssphp_metrics_data_index_DEV` sourcetype="ADO" metadata.type="fn identities"
         | stats max(SSPHP_RUN) as SSPHP_RUN
         | return SSPHP_RUN]
     | rename id as t2, providerDisplayName as t2_identities_providerDisplayName
     | table t2, t2_identities_providerDisplayName]
 
```========ACLs==========```
| join type=outer t1
    [| search `ssphp_metrics_data_index_DEV` sourcetype="ADO" metadata.type="fn security_access_control_lists"
        [| search `ssphp_metrics_data_index_DEV` sourcetype="ADO" metadata.type="fn identities"
         | stats max(SSPHP_RUN) as SSPHP_RUN
         | return SSPHP_RUN]
     | rename token as t1
     | eval t1_acl_found="true"
     | table t1, t1_acl_found]

| join type=outer t2
    [| search `ssphp_metrics_data_index_DEV` sourcetype="ADO" metadata.type="fn security_access_control_lists"
        [| search `ssphp_metrics_data_index_DEV` sourcetype="ADO" metadata.type="fn identities"
         | stats max(SSPHP_RUN) as SSPHP_RUN
         | return SSPHP_RUN]
     | rename token as t2
     | eval t2_acl_found="true"
     | table t1, t2_acl_found]

| makemv t1_all
| foreach t1_*
    [| eval t1_all=if(isnull(<<FIELD>>),'t1_all',mvappend('t1_all',"<<FIELD>>"))]
    
| makemv t2_all
| foreach t2_*
    [| eval t2_all=if(isnull(<<FIELD>>),'t2_all',mvappend('t2_all',"<<FIELD>>"))]
| fillnull value="-" t1_all, t2_all

| table token, t1, t2, t1_all, t2_all, t1_*, t2_*
| where NOT mvcount(mvfilter(match('t1_all',".*project.*")))>0
| where NOT (mvcount(mvdedup(mvfilter(match('t1_all',"t1_acl_found"))))=1 AND mvcount('t1_all')=1)


"""
