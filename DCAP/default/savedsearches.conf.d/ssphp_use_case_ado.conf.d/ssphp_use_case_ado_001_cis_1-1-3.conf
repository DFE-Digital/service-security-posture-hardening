[ssphp_use_case_ado_001_cis_1-1-3{{environment}}]
cron_schedule = 10 6 * * *
dispatch.earliest_time = 0
dispatch.latest_time = now
enableSched = 1
search = """

`ssphp_use_case_ado_data{{environment}}`


| search policy_type_id="fa4e907d-c16b-4a4c-9dfa-4906e5d171dd"

| fields repo_policy_owner, repo_policy_repos, repo_organisation, project_name, repo_name, url, webUrl,
         policy_id, policy_type_id, policy_type_displayName, policy_type_revision, 
         repo_policy_defaultBranch, policy_settings_scope{}.matchKind, policy_settings_scope{}.refName, policy_settings_scope{}.repositoryId, 
         policy_settings_minimumApproverCount, policy_settings_creatorVoteCounts

| stats max(policy_settings_minimumApproverCount) as policy_settings_minimumApproverCount,
        values(policy_settings_creatorVoteCounts) as policy_settings_creatorVoteCounts,
        values(project_name) as project_name, values(repo_name) as repo_name,
        values(url) as url, values(webUrl) as webUrl
        by repo_policy_owner, repo_policy_repos


```============================================================================================================================```


| eval policy_settings_minimumApproverCount=if(isnull('policy_settings_minimumApproverCount') OR 'policy_settings_minimumApproverCount'="",0,'policy_settings_minimumApproverCount'),
       policy_settings_creatorVoteCounts=if(isnull('policy_settings_creatorVoteCounts') OR 'policy_settings_creatorVoteCounts'="","false",'policy_settings_creatorVoteCounts')

| eval ado_organisation=mvindex(split('repo_policy_owner',"::"),0),
       ado_project_id=mvindex(split('repo_policy_owner',"::"),1)
| rename repo_policy_repos as ado_repo_id, project_name as ado_project_name, repo_name as ado_repo_name, url as ado_url, webUrl as ado_webUrl

```  *** enrich with details of the service that owns the repo *** ```
| lookup ssphp_ado_repo_owner.csv organisation as ado_organisation, project_id as ado_project_id, repo_id as ado_repo_id OUTPUT portfolio as ssphp.service.portfolio, service_line as ssphp.service.service_line, product as ssphp.service.product

| fields ado_organisation, ado_project_name, ado_project_id, ado_repo_name, ado_repo_id,
         policy_settings_minimumApproverCount,
         policy_settings_creatorVoteCounts,
         ado_url, ado_webUrl,
         ssphp.service.portfolio, ssphp.service.service_line, ssphp.service.product
        

```============================================================================================================================```


| eval dfe_min_approver=if(policy_settings_creatorVoteCounts="true",3,2)

| makemv ssphp.score.non_compliant_fields
| eval ssphp.score.non_compliant_fields=if('policy_settings_minimumApproverCount'>='dfe_min_approver',
                                            'ssphp.score.non_compliant_fields',
                                            mvappend('ssphp.score.non_compliant_fields',"policy_settings_minimumApproverCount"))

| eval ssphp.score.remediation_priority=if('policy_settings_minimumApproverCount'>='dfe_min_approver',0,15)

| eval ssphp.score.numerator=coalesce(mvcount('ssphp.score.non_compliant_fields'),"0"),
       ssphp.score.denominator="1",
       ssphp.score.score=floor(('ssphp.score.denominator'-'ssphp.score.numerator')*100/'ssphp.score.denominator')

| fields ssphp.service.*,
         ado_organisation, ado_project_name, ado_project_id, ```project_state, project_visibility,``` ado_repo_name, ado_repo_id, ```repo_isDisabled, repo_isInMaintenance,```
         ado_url, ado_webUrl,
         policy_settings_minimumApproverCount, policy_settings_creatorVoteCounts,
         ssphp.score.remediation_priority,
         ssphp.score.score, ssphp.score.non_compliant_fields


``` ##################### replace with dashboard filter ##################### ```

``` ##################### end dashboard query ##################### ```
| stats values(ado_project_name) as ado_project_name, values(ado_repo_name) as ado_repo_name, values(ado_url) as ado_url, values(ado_webUrl) as ado_webUrl,
        count as ssphp.score.denominator,
        sum(eval(if('ssphp.score.score'<100,1,0))) as ssphp.score.numerator,
        values(ssphp.service.*) as ssphp.service.*,
        values(ssphp.score.remediation_priority) as ssphp.score.remediation_priority
        by ado_organisation, ado_project_id, ado_repo_id
        
| eval ssphp.score.score=if('ssphp.score.numerator'>0,"0","100")

       
``` ##################### add metadata ##################### ```
| eval SSPHP_RUN=round(now())

| eval ssphp.use_case.id="ado_001_cis_1-1-3",
       ssphp.use_case.title=upper(mvindex(split('ssphp.use_case.id',"_"),0)) . " [CIS ".replace(mvindex(split('ssphp.use_case.id',"_"),-1),"-",".") . "]",
       ssphp.use_case.savedsearch="ssphp_use_case_" . 'ssphp.use_case.id' . "{{environment}}",
       ssphp.use_case.version.number="1.1.0",
       ssphp.use_case.version.last_changed_date="2025-03-03",
       ssphp.use_case.version.last_changed_by="Ian Pearl",
       ssphp.use_case.group="ADO",
       ssphp.use_case.group_name="REPOS",
       ssphp.use_case.category="REPOS",
       ssphp.resource.id="/" . 'ado_organisation' . "/" . 'ado_project_id' . "/" . 'ado_repo_id',
       ssphp.resource.name="/" . 'ado_organisation' . "/" . 'ado_project_name' . "/" . 'ado_repo_name',
       ssphp.resource.url='ado_url',
       ssphp.resource.web_url='ado_webUrl',
       ssphp.resource.type="ado/repo",
       ssphp.assessment.source="ADO"

| eval ssphp.risk.expectancy="-",
       ssphp.risk.impact="-"

| eval ssphp.score.ciso_priority="1",
       ssphp.score.threshold.green="99",
       ssphp.score.threshold.orange="-",
       ssphp.score.threshold.red="-",
       ssphp.score.color=case('ssphp.score.score'>'ssphp.score.threshold.green',"green",1==1,"red"),
       ssphp.score.scoring_narrative="In order to be compliant, repositories must have branch protection on and the required approver count to be 2 or more.
       If the repo is configured to permit the owner approving their own PRs, then the required approver count must be 3 or more."

| eval SSPHP_UID=md5('ssphp.use_case.category'."|".'ssphp.service.product'."|".'ssphp.use_case.id'."|".'ssphp.resource.id')

`ssphp_use_case_add_cis_metadata_github{{environment}}`
| fields - ssphp.source.foundational_system

`ssphp_use_case_no_write{{environment}}`


"""
