[ssphp_use_case_aad_dfe_1-0{{environment}}]
cron_schedule = 55 7 * * *
dispatch.earliest_time = 0
dispatch.latest_time = now
enableSched = 1
search = """
| `ssphp_use_case_aad_001{{environment}}`

| search isPrivileged="true" 
| eval foundational_system="aad", type="plan"
| lookup ssphp_acceptable_policy_list.csv foundational_system, type OUTPUT acceptable_policy_key
| fields displayName, surname, givenName, id, isPrivileged, conditionalAccessPlans_key, acceptable_policy_key


| makemv ssphp.score.non_compliant_fields
| eval ssphp.score.non_compliant_fields=if(like('conditionalAccessPlans_key','acceptable_policy_key'),
                                           'ssphp.score.non_compliant_fields',
                                           mvappend('ssphp.score.non_compliant_fields',"conditionalAccessPlans_key"))

| eval ssphp.score.numerator=coalesce(mvcount('ssphp.score.non_compliant_fields'),"0"),
       ssphp.score.denominator="1",
       ssphp.score.score=floor(('ssphp.score.denominator'-'ssphp.score.numerator')*100/'ssphp.score.denominator')

| fields displayName, surname, givenName, id, isPrivileged, conditionalAccessPlans_key, acceptable_policy_key, ssphp.score.score, ssphp.score.numerator, ssphp.score.denominator, ssphp.score.non_compliant_fields

``` ##################### end dashboard query ##################### ```


| stats count as ssphp.score.denominator, 
        sum(eval(if('ssphp.score.score'=100,0,1))) as ssphp.score.numerator
| eval ssphp.score.score=floor(('ssphp.score.denominator'-'ssphp.score.numerator')*100/'ssphp.score.denominator')

`ssphp_use_case_write_null_output_override{{environment}}(0)`


``` ##################### add metadata ##################### ```
| eval SSPHP_RUN=round(now()),
       ssphp.use_case.id="aad_dfe_1-0",

       ssphp.use_case.version.number="3.0.2",
       ssphp.use_case.version.last_changed_date="2024-04-02",
       ssphp.use_case.version.last_changed_by="Ian Pearl"

| eval ssphp.risk.expectancy="5",
       ssphp.risk.impact="5",
       ssphp.score.ciso_priority="1",
       ssphp.score.threshold.green="99",
       ssphp.score.threshold.orange="-",
       ssphp.score.threshold.red="-"

| eval ssphp.score.scoring_narrative="In order to be compliant, the field values must be as follows :~~
The value of field acceptable_policy_key MUST be in the list in field conditionalAccessPlans_key"

| eval ssphp.score.color=case('ssphp.score.score'>'ssphp.score.threshold.green',"green",1==1,"red")


``` metadata that only occurs in our own controls, not in CIS controls where it comes from the benchmark lookup```
| eval ssphp.use_case.title="AAD [DfE 1.0]",
       ssphp.source.foundational_system="AAD",
       ssphp.source.service="AAD",
       ssphp.source.service_name="AAD",
       ssphp.benchmark.origin="DfE",
       ssphp.benchmark.control.title="Admin No MFA Devices",
       ssphp.benchmark.control.description="Privileged Azure Active Directory accounts that have MFA enabled",
       ssphp.benchmark.control.rationale="All Azure AD privileged users should have an MFA device associated with their Azure Active Directory account.",
       ssphp.benchmark.control.impact="-",
       ssphp.use_case.savedsearch="ssphp_use_case_aad_dfe_1-0{{environment}}"


`ssphp_use_case_write{{environment}}`

"""
