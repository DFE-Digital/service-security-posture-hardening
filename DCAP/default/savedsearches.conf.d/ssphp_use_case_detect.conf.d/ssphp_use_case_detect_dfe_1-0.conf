[ssphp_use_case_detect_dfe_1-0{{environment}}]
cron_schedule = 30 3 * * *
dispatch.earliest_time = 0
dispatch.latest_time = now
enableSched = 1
search = """

index="mde_health_alerts" sourcetype="stash" ```"ssphp_svc_set_allow_list_user"``` ("sam.pritchard" OR "alex.kinnane" OR "ian.pearl")
| where NOT (like(meta_alert_name,"MDE Keep Alive%") OR like(meta_alert_name,"Search with Moderate or High Run Duration"))

| eval ssphp.source.service="S194"

| rex field=data_raw "[^,]*, (?<data_raw>[^\]]*)\]"
| sort 0 _time
| dedup data_raw
| fields _time, index, meta_alert_name, data_raw, meta_user_score, ssphp.source.service


``` ##################### end dashboard query ##################### ```


| stats count as ssphp.score.denominator
| eval ssphp.score.numerator=10
| eval ssphp.score.score=100-('ssphp.score.denominator'*'ssphp.score.numerator')



``` ##################### add metadata ##################### ```
| eval SSPHP_RUN=round(now()),
       ssphp.use_case.id="detect_dfe_1-0",

       ssphp.use_case.version.number="1.0.0",
       ssphp.use_case.version.last_changed_date="2024-04-19",
       ssphp.use_case.version.last_changed_by="Ian Pearl"

| eval ssphp.risk.expectancy="5",
       ssphp.risk.impact="5",
       ssphp.score.ciso_priority="1",
       ssphp.score.threshold.green="99",
       ssphp.score.threshold.orange="-",
       ssphp.score.threshold.red="-"

| eval ssphp.score.scoring_narrative="For every Alert triggered in the SOC for this Service during the past 30 days, 10 points are subtracted from the score"

| eval ssphp.score.color=case('ssphp.score.score'>'ssphp.score.threshold.green',"green",1==1,"red")


``` metadata that only occurs in our own controls, not in CIS controls where it comes from the benchmark lookup```
| eval ssphp.use_case.title="DETECT [DfE 1.0]",
       ssphp.use_case.category="DETECT",
       ssphp.source.foundational_system="SOC",
       ssphp.source.foundational_system_name="TRIGGERED ALERTS",
       ssphp.source.service="S194",
       ssphp.source.service_name="CISO Continuous Assurance",
       ssphp.benchmark.origin="DfE",
       ssphp.benchmark.control.title="SOC Events Detected",
       ssphp.benchmark.control.description="Alerts triggered in the SOC for this Service during the past 30 days",
       ssphp.benchmark.control.rationale="-",
       ssphp.benchmark.control.impact="-",
       ssphp.use_case.savedsearch="ssphp_use_case_detect_dfe_1-0{{environment}}"


`ssphp_use_case_write{{environment}}`

"""
