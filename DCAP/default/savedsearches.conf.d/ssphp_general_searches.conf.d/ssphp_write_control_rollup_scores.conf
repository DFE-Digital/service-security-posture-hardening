[ssphp_write_control_rollup_scores_portfolio{{environment}}]
dispatch.earliest_time = 0
dispatch.latest_time = now
enableSched = 0
search = """

| loadjob savedsearch="ssphp_app_account:{{app}}{{environment}}:ssphp_create_dashboard_dataset_service{{environment}}"

| eval ssphp.service.portfolio=trim('ssphp.service.portfolio'),
       ssphp.service.service_line=trim('ssphp.service.service_line'),
       ssphp.service.product=trim('ssphp.service.product')
       
| fields ssphp.service.portfolio, ssphp.service.service_line, ssphp.service.product, ssphp.service.id, ssphp.assessment.source, ssphp.use_case.category, ssphp.use_case.id, ssphp.use_case.title, ssphp.assessment.display_name, ssphp.score.score, ssphp.score.compliance_status, ssphp.score.ciso_priority```, ssphp.assessment.description```, ssphp.score.color, ssphp.resource.id, ssphp.resource.tenant, ssphp.resource.subscription, ssphp.resource.subscription_name, ssphp.resource.resource_group, ssphp.score.remediation_priority, ssphp.exemption.status, SSPHP_UID 

| search ssphp.exemption.status="comply" AND ssphp.service.portfolio!=""
| search (ssphp.use_case.category="POSTURE" OR 
         ssphp.use_case.category="KUBERNETES" OR
         ssphp.use_case.category="REPOS" OR 
         (ssphp.use_case.category="CODE_SCAN" AND ssphp.assessment.source="*") OR
         (ssphp.use_case.category="VULNERABILITY" AND ssphp.resource.id="*/virtualmachines/*"))
| search ssphp.resource.id="***"  AND ssphp.resource.id!=""
| where 'ssphp.score.ciso_priority'="DfE Mandated"

| stats count as total_controls, sum(eval(if(match('ssphp.score.compliance_status',"^Non-Compliant.*"),1,0))) as non_compliant_mandated_controls by ssphp.service.portfolio, ssphp.resource.id
| stats count as resources_total, sum(eval(if('non_compliant_mandated_controls'>0,1,0))) as resources_bad by ssphp.service.portfolio

| lookup ssphp.portfolio_shortport.csv ssphp.service.portfolio OUTPUT short_port

| eval resources_good='resources_total'-'resources_bad',
       compliant_perc=round(('resources_good'*100)/'resources_total'),
       score='resources_good'." / ".'resources_total',
       SSPHP_RUN=now(),
       view="portfolio"

| fields SSPHP_RUN, view, ssphp.service.portfolio, short_port, score

| makejson SSPHP_RUN, view, ssphp.service.portfolio, short_port, score output=_raw

| eval _time=SSPHP_RUN
| fields _time, _raw 
| collect output_format=hec testmode=f addinfo=f index="ssphp_metrics_rollup_scores"

"""


[ssphp_write_control_rollup_scores_product{{environment}}]
dispatch.earliest_time = 0
dispatch.latest_time = now
enableSched = 0
search = """

| loadjob savedsearch="ssphp_app_account:{{app}}{{environment}}:ssphp_create_dashboard_dataset_service{}"

| eval ssphp.service.portfolio=trim('ssphp.service.portfolio'),
       ssphp.service.service_line=trim('ssphp.service.service_line'),
       ssphp.service.product=trim('ssphp.service.product')
       
| fields ssphp.service.portfolio, ssphp.service.service_line, ssphp.service.product, ssphp.service.id, ssphp.assessment.source, ssphp.use_case.category, ssphp.use_case.id, ssphp.use_case.title, ssphp.assessment.display_name, ssphp.score.score, ssphp.score.compliance_status, ssphp.score.ciso_priority```, ssphp.assessment.description```, ssphp.score.color, ssphp.resource.id, ssphp.resource.tenant, ssphp.resource.subscription, ssphp.resource.subscription_name, ssphp.resource.resource_group, ssphp.score.remediation_priority, ssphp.exemption.status, SSPHP_UID 

| search ssphp.exemption.status="comply" AND ssphp.service.portfolio!=""
| search (ssphp.use_case.category="POSTURE" OR 
         ssphp.use_case.category="KUBERNETES" OR
         ssphp.use_case.category="REPOS" OR 
         (ssphp.use_case.category="CODE_SCAN" AND ssphp.assessment.source="*") OR
         (ssphp.use_case.category="VULNERABILITY" AND ssphp.resource.id="*/virtualmachines/*"))
| search ssphp.resource.id="***"  AND ssphp.resource.id!=""
| where 'ssphp.score.ciso_priority'="DfE Mandated"

| stats count as total_controls, sum(eval(if(match('ssphp.score.compliance_status',"^Non-Compliant.*"),1,0))) as non_compliant_mandated_controls by ssphp.service.portfolio, ssphp.service.service_line, ssphp.service.product, ssphp.service.id, ssphp.use_case.category, ssphp.resource.id
| stats count as resources_total, sum(eval(if('non_compliant_mandated_controls'>0,1,0))) as resources_bad by ssphp.service.portfolio, ssphp.service.service_line, ssphp.service.product, ssphp.service.id, ssphp.use_case.category

| eval resources_good='resources_total'-'resources_bad',
       number_total_resources='resources_total',
       number_passed_resources='resources_good',
       perc_passed_resources=floor(('number_passed_resources'*100)/'number_total_resources'),
       abs='number_passed_resources'." / ".'number_total_resources',
       abs=if(isnull('abs'),"-",'abs')

| fields ssphp.service.portfolio, ssphp.service.service_line, ssphp.service.product, ssphp.service.id, ssphp.use_case.category, abs
| sort 0  ssphp.service.portfolio, ssphp.service.service_line, ssphp.service.product

| eval score.{ssphp.use_case.category}='abs'
       
| table ssphp.service.portfolio, ssphp.service.service_line, ssphp.service.product, ssphp.service.id, score.POSTURE, score.KUBERNETES, score.REPOS, score.CODE_SCAN, score.VULNERABILITY

| stats values(*) as * by ssphp.service.portfolio, ssphp.service.service_line, ssphp.service.product, ssphp.service.id

| eval SSPHP_RUN=now(),
       view="product"

| fields SSPHP_RUN, view, ssphp.service.portfolio, ssphp.service.service_line, ssphp.service.product, ssphp.service.id, score.*

| makejson SSPHP_RUN, view, ssphp.service.portfolio, ssphp.service.service_line, ssphp.service.product, ssphp.service.id, score.* output=_raw

| eval _time=SSPHP_RUN
| fields _time, _raw 
| collect output_format=hec testmode=f addinfo=f index="ssphp_metrics_rollup_scores"

"""


[ssphp_list_daily_scores_portfolio{{environment}}]
dispatch.earliest_time = 0
dispatch.latest_time = now
enableSched = 0
search = """

index="ssphp_metrics_rollup_scores" view="portfolio"
    [| search index="ssphp_metrics_rollup_scores" view="portfolio"
     | stats max(SSPHP_RUN) as SSPHP_RUN
     | return SSPHP_RUN]
| fields SSPHP_RUN, ssphp.service.portfolio, score, short_port

| eval ymd=strftime('SSPHP_RUN',"%y%m%d")
| eventstats max(SSPHP_RUN) as day_SSPHP_RUN by ymd
| where SSPHP_RUN='day_SSPHP_RUN'

| table SSPHP_RUN, ymd, ssphp.service.portfolio, short_port, score

"""


[ssphp_list_daily_scores_product{{environment}}]
dispatch.earliest_time = 0
dispatch.latest_time = now
enableSched = 0
search = """

index="ssphp_metrics_rollup_scores" view="product"
    [| search index="ssphp_metrics_rollup_scores" view="product"
     | stats max(SSPHP_RUN) as SSPHP_RUN
     | return SSPHP_RUN]
| fields SSPHP_RUN, ssphp.service.*, score.*

| eval ymd=strftime('SSPHP_RUN',"%y%m%d")
| eventstats max(SSPHP_RUN) as day_SSPHP_RUN by ymd
| where SSPHP_RUN='day_SSPHP_RUN'

| table SSPHP_RUN, ymd, ssphp.service.portfolio, ssphp.service.service_line, ssphp.service.product, ssphp.service.id, score.*

"""

