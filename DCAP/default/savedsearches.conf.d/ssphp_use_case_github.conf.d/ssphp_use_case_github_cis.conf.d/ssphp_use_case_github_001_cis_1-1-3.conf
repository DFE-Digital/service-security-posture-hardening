[ssphp_use_case_github_001_cis_1-1-3{{environment}}]
cron_schedule = 55 5 * * *
dispatch.earliest_time = 0
dispatch.latest_time = now
enableSched = 1
search = """

| `ssphp_use_case_github{{environment}}("*/branches/*/protection","/repos/*/rules/branches/*")`

| fields repo_name, url, http_status_1, http_status_2, required_approving_review_count, parameters.required_approving_review_count

`ssphp_use_case_add_service_metadata_github{{environment}}` 

| fillnull value=0 required_approving_review_count
| makemv ssphp.score.non_compliant_fields
| eval ssphp.score.non_compliant_fields=if('required_approving_review_count'>=2 OR 'parameters.required_approving_review_count'>=2,
                                            'ssphp.score.non_compliant_fields',
                                            mvappend('ssphp.score.non_compliant_fields',"required_approving_review_count","parameters.required_approving_review_count"))

| eval ssphp.score.numerator=coalesce(mvcount('ssphp.score.non_compliant_fields'),"0"),
       ssphp.score.denominator="2",
       ssphp.score.score=floor(('ssphp.score.denominator'-'ssphp.score.numerator')*100/'ssphp.score.denominator')

| fields ssphp.service.id, ssphp.service.name, ssphp.service.display_name, ssphp.service.group, ssphp.service.portfolio, ssphp.service.division,
         repo_name, url, http_status_1, http_status_2, required_approving_review_count, parameters.required_approving_review_count,
         ssphp.score.score, ssphp.score.non_compliant_fields


``` ##################### end dashboard query ##################### ```
| stats count as ssphp.score.denominator,
        sum(eval(if('ssphp.score.score'<100,1,0))) as ssphp.score.numerator,
        values(ssphp.service.name) as ssphp.service.name,
        values(ssphp.service.display_name) as ssphp.service.display_name,
        values(ssphp.service.group) as ssphp.service.group,
        values(ssphp.service.portfolio) as ssphp.service.portfolio,
        values(ssphp.service.division) as ssphp.service.division
        by ssphp.service.id
| eval ssphp.score.score=if('ssphp.score.numerator'>0,"0","100")
       

``` ##################### add metadata ##################### ```
| eval SSPHP_RUN=round(now())

| eval ssphp.use_case.id="github_001_cis_1-1-3",
       ssphp.use_case.title=upper(substr(mvindex(split('ssphp.use_case.id',"_"),0),1,1)).substr(mvindex(split('ssphp.use_case.id',"_"),0),2) . " [CIS ".replace(mvindex(split('ssphp.use_case.id',"_"),-1),"-",".") . "]",
       ssphp.use_case.savedsearch="ssphp_use_case_" . 'ssphp.use_case.id' . "{{environment}}",
       ssphp.use_case.version.number="1.0.3",
       ssphp.use_case.version.last_changed_date="2024-06-19",
       ssphp.use_case.version.last_changed_by="Sam Pritchard",
       ssphp.use_case.group="GITHUB",
       ssphp.use_case.group_name="SDLC"

| eval ssphp.risk.expectancy="5",
       ssphp.risk.impact="5"

| eval ssphp.score.ciso_priority="1",
       ssphp.score.threshold.green="99",
       ssphp.score.threshold.orange="-",
       ssphp.score.threshold.red="-",
       ssphp.score.color=case('ssphp.score.score'>'ssphp.score.threshold.green',"green",1==1,"red"),
       ssphp.score.scoring_narrative="In order to be compliant, repositories must have branch protection on and the required approver count to be 2 or more."

| search ssphp.service.id!="-"

`ssphp_use_case_add_cis_metadata_github{{environment}}`

`ssphp_use_case_write{{environment}}`

"""
