[ssphp_use_case_github_001_cis_1-1-15{{environment}}]
cron_schedule = 55 5 * * *
dispatch.earliest_time = 0
dispatch.latest_time = now
enableSched = 1
search = """

| `ssphp_use_case_github{{environment}}("*/branches/*/protection","/repos/*/rules/branches/*")`

| fields repo_name, http_status_branch_protect, http_status_rules

| join type=outer repo_name
    [| search `ssphp_metrics_data_index{{environment}}` source="*repo*collaborator*" sourcetype=github
     | rex field=source "\/repos(?<repo_name>\/[^\/]*\/[^\/]*)\/"
     | eval permissions_all=if(IN("true", 'permissions.admin', 'permissions.maintain', 'permissions.push', 'permissions.triage'), "true", "false")
     | search permissions_all="true"
     | stats values(login) as users_with_write_perms by repo_name]

| eval organisation=mvindex(split('repo_name',"/"),1)
| join type=outer organisation
    [| search `ssphp_metrics_data_index{{environment}}` source="*graph*" sourcetype=github source="graphql:org_members_query"
     | table login, organisation
     | stats values(login) as org_users by organisation]

| makemv org_users
| makemv users_with_write_perms
| eval users_outside_org=mvmap('users_with_write_perms', if(isnull(mvfind('org_users', 'users_with_write_perms')), 'users_with_write_perms', null()))

| fields repo_name, http_status_branch_protect, http_status_rules, org_users, users_with_write_perms, users_outside_org


`ssphp_use_case_add_service_metadata_github{{environment}}` 

| makemv ssphp.score.non_compliant_fields
| eval ssphp.score.non_compliant_fields=if('http_status_branch_protect'="200" OR 'http_status_rules'="200",
                                           'ssphp.score.non_compliant_fields',
                                           mvappend('ssphp.score.non_compliant_fields',"http_status_branch_protect","http_status_rules")),
       ssphp.score.non_compliant_fields=if(isnull('users_outside_org'),
                                           'ssphp.score.non_compliant_fields',
                                           mvappend('ssphp.score.non_compliant_fields',"users_outside_org"))

| eval ssphp.score.numerator=coalesce(mvcount('ssphp.score.non_compliant_fields'),"0"),
       ssphp.score.denominator="3",
       ssphp.score.score=floor(('ssphp.score.denominator'-'ssphp.score.numerator')*100/'ssphp.score.denominator')

| fields ssphp.service.id, ssphp.service.name, ssphp.service.display_name, ssphp.service.group, ssphp.service.portfolio, ssphp.service.division,
         repo_name, http_status_branch_protect, http_status_rules, org_users, users_with_write_perms, users_outside_org
         ssphp.score.score, ssphp.score.non_compliant_fields


``` ##################### end dashboard query ##################### ```
| stats count as ssphp.score.denominator,
        sum(eval(if('ssphp.score.score'<100,1,0))) as ssphp.score.numerator,
        values(ssphp.service.name) as ssphp.service.name,
        values(ssphp.service.display_name) as ssphp.service.display_name,
        values(ssphp.service.group) as ssphp.service.group,
        values(ssphp.service.portfolio) as ssphp.service.portfolio,
        values(ssphp.service.division) as ssphp.service.division
        by ssphp.service.id
| eval ssphp.score.score=if('ssphp.score.numerator'>0,"0","100")
       

``` ##################### add metadata ##################### ```
| eval SSPHP_RUN=round(now())

| eval ssphp.use_case.id="github_001_cis_1-1-15",
       ssphp.use_case.title=upper(substr(mvindex(split('ssphp.use_case.id',"_"),0),1,1)).substr(mvindex(split('ssphp.use_case.id',"_"),0),2) . " [CIS ".replace(mvindex(split('ssphp.use_case.id',"_"),-1),"-",".") . "]",
       ssphp.use_case.savedsearch="ssphp_use_case_" . 'ssphp.use_case.id' . "{{environment}}",
       ssphp.use_case.version.number="1.0.0",
       ssphp.use_case.version.last_changed_date="2024-06-25",
       ssphp.use_case.version.last_changed_by="Sam Pritchard",
       ssphp.use_case.group="GITHUB",
       ssphp.use_case.group_name="SDLC"

| eval ssphp.risk.expectancy="5",
       ssphp.risk.impact="5"

| eval ssphp.score.ciso_priority="1",
       ssphp.score.threshold.green="99",
       ssphp.score.threshold.orange="-",
       ssphp.score.threshold.red="-",
       ssphp.score.color=case('ssphp.score.score'>'ssphp.score.threshold.green',"green",1==1,"red"),
       ssphp.score.scoring_narrative="In order to be compliant, repositories must have branch protection rules on and all users with write permissions are on the list of organisation members."

| search ssphp.service.id!="-"

`ssphp_use_case_add_cis_metadata_github{{environment}}`

`ssphp_use_case_write{{environment}}`

"""
