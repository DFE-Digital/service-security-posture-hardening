[ssphp_use_case_github_sast{{environment}}]
cron_schedule = 55 5 * * *
dispatch.earliest_time = 0
dispatch.latest_time = now
enableSched = 1
search = """

`ssphp_metrics_data_index{{environment}}` sourcetype="github" source="*code-scanning/alerts" earliest=-2d@d latest=now
    [| search `ssphp_metrics_data_index{{environment}}` sourcetype="github" source="*code-scanning/alerts" earliest=-2d@d latest=now
     | stats max(SSPHP_RUN) as SSPHP_RUN
     | return SSPHP_RUN]

| where NOT like(lower('message'),"%api rate limit%") AND NOT like(lower('message'),"%no default branch found%")

| eval org=mvindex(split('source',"/"),2),
       repo=mvindex(split('source',"/"),3),
       repo_name="/".'org'."/".'repo'
      
`ssphp_use_case_add_service_metadata_github{{environment}}`
 
| search ssphp.service.id!="-"
 
| eval rule_severity=case(lower('rule.severity')="error","high",
                          lower('rule.severity')="warning","medium",
                          lower('rule.severity')="note","low",
                          1==1,"high"),
       rule.security_severity_level=if(isnull('rule.security_severity_level') OR 'rule.security_severity_level'="",'rule_severity','rule.security_severity_level')
| fields - rule_severity
| where IN(lower('rule.security_severity_level'),"critical","high","medium","low")
 

``` ##################### end dashboard query ##################### ```
 
| eval ssphp.assessment.source=coalesce('tool.name',"NO TOOL"),

       ssphp.assessment.state=case(lower('message')="no analysis found","enabled",
                                   lower('message')="advanced security must be enabled for this repository to use code scanning.","disabled",
                                   lower('message')="no default branch found","unknown",
                                   1==1,"enabled"),
 
       rule.id=case(lower('message')="no analysis found","SAST-00001",
                    lower('message')="advanced security must be enabled for this repository to use code scanning.","SAST-00002",
                    1==1,'rule.id'),
 
       rule.description=case(lower('message')="no analysis found","No Code Scanning Alerts Found",
                             lower('message')="advanced security must be enabled for this repository to use code scanning.","Code Scanning Not Available for Private Repos",
                             1==1,'rule.description'),
 
       rule.security_severity_level=case(lower('message')="no analysis found","-",
                                         lower('message')="advanced security must be enabled for this repository to use code scanning.","critical",
                                         1==1,'rule.security_severity_level'),
 
       state=case(lower('message')="no analysis found","open",
                  lower('message')="advanced security must be enabled for this repository to use code scanning.","open",
                  1==1,'state'),
 
        updated_at_epoch=strptime('updated_at',"%Y-%m-%dT%H:%M:%SZ"),
        VULNERABILITY_AGE=floor((now()-'updated_at_epoch')/60*60*24)
      
 
| eval ssphp.score.score=case(lower('message')="no analysis found",100,
                              lower('state')="dismissed",50,
                              lower('state')!="open",100,
                              ``` 'ssphp_http_status'!=200 AND message="Dependabot alerts are not available for archived repositories.",100, ``` ```archived repo```
                              'ssphp_http_status'!=200,0,
                              lower('rule.security_severity_level')="critical" AND 'VULNERABILITY_AGE'>10,0,
                              lower('rule.security_severity_level')="high" AND 'VULNERABILITY_AGE'>30,0,
                              IN(lower('rule.security_severity_level'),"medium","moderate") AND 'VULNERABILITY_AGE'>60,0,
                              1==1,100),
       ssphp.score.denominator="-",
       ssphp.score.numerator="-"
 
``` ======== Get data structures ==========```
| rename repo_name as ssphp.resource.id,
         rule.description as ssphp.assessment.title,
         rule.help as ssphp.assessment.description,
         most_recent_instance.commit_sha as ssphp.resource.sast.commit_sha,
         most_recent_instance.location.* as ssphp.resource.sast.location.*
         rule.security_severity_level as ssphp.use_case.severity,
         state as ssphp.assessment.status
       
| eval ssphp.resource.name='ssphp.resource.id',
       ssphp.resource.type="github/repo",
       ssphp.use_case.id='rule.id',
       ssphp.use_case.title=coalesce('tool.name',"SAST")." Security Advsory [".'rule.id'."]",
       ssphp.assessment.title=case('ssphp_http_status'!=200,'message',
                                   1==1,'ssphp.assessment.title'),
       ssphp.assessment.description=case('ssphp_http_status'!=200,'message',
                                         1==1,'ssphp.assessment.description')

``` ======== Add Metadata ==========```
| fillnull value="-" ssphp.use_case.id, number, 
                     "ssphp.resource.sast.commit_sha", "ssphp.resource.sast.location.end_column", ssphp.resource.sast.location.end_line, ssphp.resource.sast.location.path, ssphp.resource.sast.location.start_column, ssphp.resource.sast.location.start_line
| eval SSPHP_RUN=now(),
       SSPHP_UID=md5('ssphp.service.id'."|".'ssphp.assessment.source'."|".'ssphp.resource.id'."|".'ssphp.use_case.id'."|".'number'),
       ssphp.use_case.savedsearch="ssphp_use_case_github_sast{{environment}}",
       ssphp.use_case.group="GITHUB",
       ssphp.use_case.group_name="SAST",
       ssphp.use_case.version.number="1.0.0",
       ssphp.use_case.version.last_changed_date="2024-08-15",
       ssphp.use_case.version.last_changed_by="Ian Pearl & Sam Pritchard",
       ssphp.use_case.category="CODE_SCAN"
 
| eval ssphp.risk.expectancy="5",
       ssphp.risk.impact="5"
 
| eval ssphp.score.threshold.green="99",
       ssphp.score.threshold.orange="-",
       ssphp.score.threshold.red="-",
       ssphp.score.ciso_priority=case(IN(lower('ssphp.use_case.severity'),"critical","high"),"1",
                                      lower('ssphp.use_case.severity')="medium","2",
                                      1==1,"3"),
       ssphp.score.scoring_narrative="The control is compliant when the Repo has SAST Scanning set on and there are no SAST Alerts over SLA as follows :
       Critical > 10 days, High > 30 days, Medium > 60 days.
       
       Where there are no alerts for a Repo, a score of 100 (Compliant) is based on the default assumption that there are no security issues with SAST Scanning enabled, rather than assuming that SAST Scanning has not been enabled."
 | eval ssphp.score.color=case('ssphp.score.score'>'ssphp.score.threshold.green',"green",1==1,"red")


`ssphp_use_case_write{{environment}}`

"""