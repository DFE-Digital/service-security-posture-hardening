[ssphp_use_case_github_sast_5-2{{environment}}]
cron_schedule = 55 5 * * *
dispatch.earliest_time = 0
dispatch.latest_time = now
enableSched = 1
search = """

`ssphp_metrics_data_index{{environment}}` sourcetype="github" source="github:*"
         [| search `ssphp_metrics_data_index{{environment}}` sourcetype="github" source="github:*"
          | stats max(SSPHP_RUN) as SSPHP_RUN
          | return SSPHP_RUN]
```##################### Get all the data for all the REPOS ##################```

| spath full_name | spath archived | spath pushed_at

| rename full_name as repo_name
| eval repo_name="/".'repo_name',
       org=mvindex(split('repo_name',"/"),1)
       

`ssphp_use_case_add_service_metadata_github{{environment}}`

| rename archived as repo_archived, pushed_at as repo_pushed_at
| fields repo_name, repo_archived, repo_pushed_at, ssphp.service.*

| join type=outer repo_name
    [| search `ssphp_metrics_data_index{{environment}}` sourcetype="sonar_cloud" source="https://sonarcloud.io/api/components/search_projects?*" earliest=-2d@d latest=now

``` Clean up dodgy unstructured badly named repos ```
| eval key=replace('key',"^DFE-Digital-","DFE-Digital_"),
       key=if(key="DFE-Digital_schools_experience","DFE-Digital_schools-experience",'key'),
       key=if(key="das-sonarcloud-integration-tests","SkillsFundingAgency_das-azure-pipelines-agents",'key'),
       key=if(key="get-teacher-training-adviser-service","SkillsFundingAgency_".'key','key'),
       key=if(key="API-SIP-SharePointOnline","DFE-Digital_".'key','key'),
       
       key1=replace('key',"^SonarCloud\.",""),
       key1=replace('key1',"\.","_"),
       key1=split('key1',"_"),
       org=mvindex('key1',0),
       repo=mvindex('key1',1),
       
       repo=if(key="DFE-Digital_Dfe.Academies.External","Dfe.Academies.External",'repo'),
       repo=if(key="login.dfe.organisations","login.dfe.organisations",'repo'),
       org=if(key="DFE-Digital_Dfe.Academies.External","DFE-Digital",'org'),
       org=if(key="login.dfe.organisations","DFE-Digital",'org'),
       
       repo_name="/".'org'."/".'repo'

| eval days_since_analysis=coalesce(floor((now()-strptime('analysisDateAllBranches',"%Y-%m-%dT%H:%M:%S+%4Q"))/60/60/24),"-")
| rename key as sonar_project_key
| fields sonar_project_key, repo_name, analysisDateAllBranches, days_since_analysis, eligibilityStatus, eligible, isNew, visibility]

| search repo_archived="false"
| fillnull value="-" days_since_analysis, sonar_project_key

| makemv ssphp.score.non_compliant_fields
| eval ssphp.score.non_compliant_fields=if(sonar_project_key="-",
                                           mvappend('ssphp.score.non_compliant_fields',"sonar_project_key"),
                                           'ssphp.score.non_compliant_fields'),
       ssphp.score.non_compliant_fields=if('days_since_analysis'="-" OR 'days_since_analysis'>30,
                                           mvappend('ssphp.score.non_compliant_fields',"analysisDateAllBranches"),
                                           'ssphp.score.non_compliant_fields')

| eval ssphp.score.numerator=coalesce(mvcount('ssphp.score.non_compliant_fields'),"0"),
       ssphp.score.denominator="2",
       ssphp.score.score=floor(('ssphp.score.denominator'-'ssphp.score.numerator')*100/'ssphp.score.denominator')


| fields repo_name, repo_pushed_at, sonar_project_key, repo_name, analysisDateAllBranches, days_since_analysis, ssphp.service.*,
        ssphp.score.score, ssphp.score.numerator, ssphp.score.denominator,
        ssphp.score.non_compliant_fields
        

``` ##################### replace with dashboard filter ##################### ```


``` ##################### end dashboard query ##################### ```

| fields - ssphp.score.non_compliant_fields

``` ======== Add Metadata ==========```

| eval ssphp.use_case.id="SAST-5-2",
       ssphp.use_case.title="SAST Workflow Check [SAST-5-2]",
       ssphp.use_case.savedsearch="ssphp_use_case_github_sast_5-2{{environment}}",
       ssphp.use_case.group="GITHUB",
       ssphp.use_case.group_name="SAST",
       ssphp.use_case.version.number="1.0.3",
       ssphp.use_case.version.last_changed_date="2024-11-19",
       ssphp.use_case.version.last_changed_by="Ian Pearl & Sam Pritchard",
       ssphp.use_case.category="CODE_SCAN",
       ssphp.use_case.severity="1",

       ssphp.resource.id='repo_name',
       ssphp.resource.name='repo_name',
       ssphp.resource.type="github/repo",

       ssphp.assessment.source="Workflows",
       ssphp.assessment.sub_source="true",
       ssphp.assessment.title="No Active SAST Workflows [Sonar]",
       ssphp.assessment.description="Checks that every (non-archived) Repo has recently run a Sonar scan."


| rename repo_name as ssphp.resource.id

| eval SSPHP_RUN=now(),
       SSPHP_UID=md5('ssphp.service.id'."|".'ssphp.assessment.source'."|".'ssphp.resource.id'."|".'ssphp.use_case.id')

 
| eval ssphp.risk.expectancy="5",
       ssphp.risk.impact="5"
 
| eval ssphp.score.threshold.green="99",
       ssphp.score.threshold.orange="-",
       ssphp.score.threshold.red="-",
       ssphp.score.ciso_priority="1",
       ssphp.score.scoring_narrative="The control is compliant when the Repo has at least 1 Sonar scan. The scan must have run within the past 30 days."

| eval ssphp.score.color=case('ssphp.score.score'>'ssphp.score.threshold.green',"green",1==1,"red")

| eval ssphp.score.color=case('ssphp.score.color'="red" AND 'ssphp.score.ciso_priority'="1","red",
                              'ssphp.score.color'="red" AND 'ssphp.score.ciso_priority'="2","orange",
                              'ssphp.score.color'="red" AND 'ssphp.score.ciso_priority'="3","white",
                              1==1,'ssphp.score.color')


`ssphp_use_case_write{{environment}}`

"""