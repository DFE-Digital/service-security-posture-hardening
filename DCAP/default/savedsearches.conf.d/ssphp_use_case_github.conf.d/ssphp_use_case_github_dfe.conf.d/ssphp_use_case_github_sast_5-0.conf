[ssphp_use_case_github_sast_5-0{{environment}}]
cron_schedule = 55 5 * * *
dispatch.earliest_time = 0
dispatch.latest_time = now
enableSched = 1
search = """

`ssphp_summary_index{{environment}}` earliest=-2d@d latest=now (ssphp.use_case.id="SAST-5-1" OR ssphp.use_case.id="SAST-5-2") ssphp.assessment.sub_source="true"
    ```ssphp.service.id="das"```
    ```ssphp.score.ciso_priority=1```

| eventstats max(SSPHP_RUN) as max_SSPHP_RUN by ssphp.use_case.id
| where SSPHP_RUN='max_SSPHP_RUN'
| fields - max_SSPHP_RUN

```| eventstats list(eval(if('ssphp.score.score'<100,'ssphp.use_case.id',null()))) as use_cases by ssphp.resource.id

| where mvcount('use_cases')>=2

| stats values(ssphp.resource.*) as ssphp.resource.*, 
        values(ssphp.service.*) as ssphp.service.*,
        values(ssphp.use_case.savedsearch) as ssphp.use_case.savedsearch
        by ssphp.resource.id
| eval ssphp.score.score=0,
       ssphp.score.numerator="-",
       ssphp.score.denominator="-"```

| stats values(ssphp.resource.*) as ssphp.resource.*,
        values(ssphp.service.*) as ssphp.service.*,
        values(ssphp.use_case.savedsearch) as ssphp.use_case.savedsearch,
        sum(ssphp.score.score) as ssphp.score.score,
        values(SSPHP_RUN) as SSPHP_RUN, values(SSPHP_UID) as SSPHP_UID
        by ssphp.resource.id
| eval ssphp.score.score=if('ssphp.score.score'>=100,100,0),
       ssphp.score.numerator="-",
       ssphp.score.denominator="-"



| fields ssphp.resource.*, ssphp.service.*, ssphp.score.*, ssphp.use_case.savedsearch, SSPHP_RUN, SSPHP_UID
       
``` ##################### replace with dashboard filter ##################### ```

``` ##################### end dashboard query ##################### ```

``` ======== Add Metadata ==========```
      
| eval ssphp.use_case.id="SAST-5-0",
       ssphp.use_case.title="SAST Workflow Check [SAST-5-0]",
       ssphp.use_case.savedsearch='ssphp.use_case.savedsearch',
       ssphp.use_case.group="GITHUB",
       ssphp.use_case.group_name="SAST",
       ssphp.use_case.version.number="1.0.6",
       ssphp.use_case.version.last_changed_date="2024-09-06",
       ssphp.use_case.version.last_changed_by="Ian Pearl & Sam Pritchard",
       ssphp.use_case.category="CODE_SCAN",
       ssphp.use_case.severity="1",

       ssphp.assessment.source="Workflows",
       ssphp.assessment.title="No Active CodeQL, Semgrep, or Sonar SAST Workflows",
       ssphp.assessment.description="Checks that every (non-archived) Repo has at least 1 active Workflow enabled which executes one of CodeQL, Semgrep, or Sonar."

| eval SSPHP_RUN=now(),
       SSPHP_UID=md5('ssphp.use_case.id'."|".'ssphp.service.id'."|".'ssphp.assessment.source'."|".'ssphp.resource.id')
 
 
| eval ssphp.risk.expectancy="5",
       ssphp.risk.impact="5"
 
| eval ssphp.score.threshold.green="99",
       ssphp.score.threshold.orange="-",
       ssphp.score.threshold.red="-",
       ssphp.score.ciso_priority="1",
       ssphp.score.scoring_narrative="The control is compliant when the Repo has at least 1 active Workflow which executes CodeQL, Semgrep, or Sonar scanning.
The workflow must have run and completed successfully within 30 days."

| eval ssphp.score.color=case('ssphp.score.score'>'ssphp.score.threshold.green',"green",1==1,"red")


`ssphp_use_case_write{{environment}}`

"""