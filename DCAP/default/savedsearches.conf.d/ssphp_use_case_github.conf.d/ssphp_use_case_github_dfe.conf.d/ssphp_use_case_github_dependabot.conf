[ssphp_use_case_github_dependabot{{environment}}]
cron_schedule = 55 5 * * *
dispatch.earliest_time = 0
dispatch.latest_time = now
enableSched = 1
search = """

`ssphp_metrics_data_index{{environment}}` sourcetype="github" source="*dependabot/alerts" earliest=-2d@d latest=now
    [| search `ssphp_metrics_data_index{{environment}}` sourcetype="github" source="*dependabot/alerts" earliest=-2d@d latest=now
     | stats max(SSPHP_RUN) as SSPHP_RUN
     | return SSPHP_RUN]
   
| eval org=mvindex(split('source',"/"),2),
       repo=mvindex(split('source',"/"),3),
       repo_name="/".'org'."/".'repo',
       ssphp.assessment.source="DEPENDABOT",
       ssphp.assessment.state=if(message="Dependabot alerts are disabled for this repository.","disabled","enabled"),
       security_advisory.ghsa_id=if(message="Dependabot alerts are disabled for this repository.","DBOT-00001",'security_advisory.ghsa_id'),
       security_advisory.summary=if(message="Dependabot alerts are disabled for this repository.",'message','security_advisory.summary'),
       security_advisory.severity=if(message="Dependabot alerts are disabled for this repository.","critical",'security_advisory.severity'),
       state=if(message="Dependabot alerts are disabled for this repository.","open",'state'),

        created_at_epoch=strptime('created_at',"%Y-%m-%dT%H:%M:%SZ"),
        VULNERABILITY_AGE=floor((now()-'created_at_epoch')/60*60*24)
 
| rename security_advisory.* as dependabot_security_advisory.*, security_vulnerability.* as dependabot_security_vulnerability.*

```| fields org, repo, repo_name, ssphp.service.*, ssphp.assessment.*, ssphp.resource.*, created_at, state, fixed_at, auto_dismissed_at, dissmissed_at, dissmissed_by, dissmissed*,
        rule.*, tool.name, tool.version, dependabot_security_advisory.*, dependabot_security_vulnerability.*, dependency.*, most_recent_instance.*, status, ssphp_http_status```
       
`ssphp_use_case_add_service_metadata_github{{environment}}`

| search ssphp.service.id!="-"
 
 
``` ##################### end dashboard query ##################### ```
 
| eval ssphp.score.score=case('ssphp_http_status'!=200,0,
                              lower('state')="open" AND lower('dependabot_security_advisory.severity')="critical" AND 'VULNERABILITY_AGE'>10,0,
                              lower('state')="open" AND lower('dependabot_security_advisory.severity')="high" AND 'VULNERABILITY_AGE'>30,0,
                              lower('state')="open" AND IN(lower('dependabot_security_advisory.severity'),"medium","moderate") AND 'VULNERABILITY_AGE'>60,0,
                              1==1,100),
       ssphp.score.denominator="-",
       ssphp.score.numerator="-",
       ssphp.score.color=case('ssphp.score.score'>'ssphp.score.threshold.green',"green",1==1,"red")
 
 
``` ======== Get data structures ==========```
| rename repo_name as ssphp.resource.id,
         dependabot_security_advisory.summary as ssphp.assessment.title,
         dependabot_security_advisory.description as ssphp.assessment.description,
         dependency.manifest_path as ssphp.resource.dependency.manifest_path,
         dependency.package.ecosystem as ssphp.resource.dependency.ecosystem,
         dependency.package.name as ssphp.resource.dependency.package_name,
         dependabot_security_advisory.severity as ssphp.use_case.severity,
         state as ssphp.assessment.status
        
| eval ssphp.resource.name='ssphp.resource.id',
       ssphp.resource.type="github/repo",
       ssphp.use_case.id='dependabot_security_advisory.ghsa_id',
       ssphp.use_case.title="Dependabot Security Advsory [".'dependabot_security_advisory.ghsa_id'."]",
       ssphp.score.ciso_priority=case(lower('ssphp.use_case.severity')="critical","1",
                                      lower('ssphp.use_case.severity')="low","3",
                                      1==1,"2"),
       ssphp.assessment.title=if('ssphp_http_status'!="200","Dependabot is turned off for this repo",'ssphp.assessment.title'),
       ssphp.assessment.description=if('ssphp_http_status'!="200","Dependabot is turned off for this repo",'ssphp.assessment.description')

``` ======== Add Metadata ==========```
| fillnull value="-" ssphp.use_case.id, number, ssphp.resource.dependency.manifest_path, ssphp.resource.dependency.ecosystem, ssphp.resource.dependency.package_name
| eval SSPHP_RUN=now(),
       SSPHP_UID=md5('ssphp.service.id'."|".'ssphp.assessment.source'."|".'ssphp.resource.id'."|".'ssphp.use_case.id'."|".'number'),
       ssphp.use_case.savedsearch="ssphp_use_case_github_dependabot{{environment}}",
       ssphp.use_case.group="GITHUB",
       ssphp.use_case.group_name="DEPENDABOT",
       ssphp.use_case.version.number="1.0.2",
       ssphp.use_case.version.last_changed_date="2024-08-14",
       ssphp.use_case.version.last_changed_by="Ian Pearl & Sam Pritchard",
       ssphp.use_case.category="CODE_SCAN"

| eval ssphp.risk.expectancy="5",
       ssphp.risk.impact="5"

| eval ssphp.score.threshold.green="99",
       ssphp.score.threshold.orange="-",
       ssphp.score.threshold.red="-",
       ssphp.score.ciso_priority=case(lower('ssphp.assessment.severity')="high","1",
                                      lower('ssphp.assessment.severity')="medium","2",
                                      1==1,"3"),
       ssphp.score.scoring_narrative="Something"


`ssphp_use_case_write{{environment}}`

"""