[ssphp_create_workflow_dataset_github{{environment}}]
dispatch.earliest_time = 0
dispatch.latest_time = now
enableSched = 0
search = """

`ssphp_metrics_data_index{{environment}}` sourcetype="github" source="github:*"
         [| search `ssphp_metrics_data_index{{environment}}` sourcetype="github" source="github:*"
          | stats max(SSPHP_RUN) as SSPHP_RUN
          | return SSPHP_RUN]

```##################### Get all the data for all the REPOSITORIES ##################```

| spath full_name | spath archived | spath pushed_at

| rename full_name as repo_name
| eval repo_name="/".'repo_name',
       org=mvindex(split('repo_name',"/"),1)

``` ==================================== This query outputs 1 line for every JOB for every WORKFLOW for every REPO ==================================== ```

`ssphp_use_case_add_service_metadata_github{{environment}}`

| rename archived as repo_archived, pushed_at as repo_pushed_at
| fields repo_name, repo_archived, repo_pushed_at, ssphp.service.*


| join type=outer repo_name max=0
    [| search `ssphp_metrics_data_index{{environment}}` sourcetype="github" source="/repos/*/actions/workflows"
        [| search `ssphp_metrics_data_index{{environment}}` sourcetype="github" source="/repos/*/actions/workflows"
         | stats max(SSPHP_RUN) as SSPHP_RUN
         | return SSPHP_RUN]
```##################### Get all the WORKFLOWS for all the REPOS ##################```

    | spath id | spath name | spath path | spath state

    | eval org=mvindex(split('source',"/"),2),
       repo=mvindex(split('source',"/"),3),
       repo_name="/".'org'."/".'repo'
    | rename id as workflow_id, name as workflow_name, path as workflow_path, state as workflow_state
    | fields repo_name, workflow_id, workflow_name, workflow_path, workflow_state
    ]


| join type=outer repo_name, workflow_path max=0
    [| search `ssphp_metrics_data_index{{environment}}` sourcetype="github" source="*/contents/.github/workflows*"
        [| search `ssphp_metrics_data_index{{environment}}` sourcetype="github" source="*/contents/.github/workflows*"
         | stats max(SSPHP_RUN) as SSPHP_RUN
         | return SSPHP_RUN]
```##################### Get all the WORKFLOWS FILES CONTENT for all the WORKFLOWS ##################```

    | spath content_object.name | spath content_object.jobs | spath path

    | rename content_object.name as workflow_contents_name

    | makemv workflow_contents_all_steps_uses
    | foreach content_object.jobs.*.uses [| eval workflow_contents_all_steps_uses=mvappend('workflow_contents_all_steps_uses','<<FIELD>>')]

    | eval org=mvindex(split('source',"/"),2),
       repo=mvindex(split('source',"/"),3),
       repo_name="/".'org'."/".'repo'
    | rename path as workflow_path
    | fields repo_name, workflow_path, workflow_contents_all_steps_uses, workflow_contents_name
    ]


| join type=outer repo_name, workflow_id max=0
    [| search `ssphp_metrics_data_index{{environment}}` sourcetype="github" source="/repos/*/actions/runs?status=success&per_page=100"
         [| search `ssphp_metrics_data_index{{environment}}` sourcetype="github" source="/repos/*/actions/runs?status=success&per_page=100"
          | stats max(SSPHP_RUN) as SSPHP_RUN
          | return SSPHP_RUN]
```##################### Get all the RUNS for all the WORKFLOWS ##################```

    | spath id | spath run_number | spath run_attempt | spath run_status | spath conclusion | spath run_started_at
     
     | eval org=mvindex(split('source',"/"),2),
            repo=mvindex(split('source',"/"),3),
            repo_name="/".'org'."/".'repo'

     | rename id as workflow_run_id, run_number as workflow_run_run_number, run_attempt as workflow_run_run_attempt, status as workflow_run_status, conclusion as workflow_run_conclusion, run_started_at as workflow_run_run_started_at
     | fields repo_name, workflow_id, workflow_run_id, workflow_run_run_number, workflow_run_run_attempt, workflow_run_status, workflow_run_conclusion, workflow_run_run_started_at
     ]


| join type=outer repo_name, workflow_run_id max=0
    [| search `ssphp_metrics_data_index{{environment}}` sourcetype="github" source="*/actions/jobs*"
         [| search `ssphp_metrics_data_index{{environment}}` sourcetype="github" source="*/actions/jobs*"
          | stats max(SSPHP_RUN) as SSPHP_RUN
          | return SSPHP_RUN]
```##################### Get all the JOBS for all the RUNS ##################```

     | spath id | spath name | spath steps{}.name | spath run_id | spath status | spath conclusion | spath started_at | spath completed_at

     | eval org=mvindex(split('source',"/"),2),
            repo=mvindex(split('source',"/"),3),
            repo_name="/".'org'."/".'repo'

     | rename id as workflow_run_job_id, name as workflow_run_job_name, steps{}.name as workflow_run_job_steps, run_id as workflow_run_id, status as workflow_run_job_status, conclusion as workflow_run_job_conclusion, started_at as workflow_run_job_started_at, completed_at as workflow_run_job_completed_at

     | fields repo_name, workflow_run_id, workflow_run_job_id, workflow_run_job_name, workflow_run_job_steps, workflow_run_job_status, workflow_run_job_conclusion, workflow_run_job_started_at, workflow_run_job_completed_at
     ]
     
     
| eval lf="
",
       workflow_run_job_steps=split('workflow_run_job_steps','lf'),
       workflow_contents_all_steps_uses=split('workflow_contents_all_steps_uses','lf')
       
       
| table repo_name, repo_archived, repo_pushed_at, ssphp.service.*, workflow_id, workflow_name, workflow_path, workflow_state, 
        workflow_contents_name, workflow_contents_all_steps_uses, 
        workflow_run_id, workflow_run_run_number, workflow_run_run_attempt, workflow_run_status, workflow_run_conclusion, workflow_run_run_started_at,
        workflow_run_job_id, workflow_run_job_name, workflow_run_job_steps, workflow_run_job_status, workflow_run_job_conclusion, workflow_run_job_started_at, workflow_run_job_completed_at


"""
