{% if environment=="_DEV" %}
  <dashboard theme="dark" version="1.1" hideFilters="true">
{% else %}
  <dashboard theme="dark" version="1.1" hideFilters="true"> 
{% endif %}  

<label>Security Posture Continuous Assurance : Digital Services Dashboard Help</label>
<description>{{environment}} v1.0.5</description>

<fieldset submitButton="false">
  {% include 'default/data/ui/views/ssphp_dashboard_templates.d/ssphp_footer_menu_template.xml' %}
</fieldset>

    <row>
      <panel>
        <html>
<div style="font-size:175%;color:orange;">BACKGROUND</div><br></br>
<div style="font-size:125%;color:CornflowerBlue;">Secure by Design</div>SbD is the Government (CDDO) initiative which requires Digital Services to demonstrate that they have included in funding requests the resources to build good security practice into the services that they are planning to develop. This initiative covers all digital services for DfE.<br></br>
<div style="font-size:125%;color:CornflowerBlue;">Continuous Assurance</div>CISD will be supporting DfE Digital Services with SbD by offering a number of related services. Under SbD, Digital Services are obliged to have policies and processes in places to ensure that they have hardened the Security Posture of their digital assets and systems. The DCAP system is a platform to facilitate this posture hardening - on a daily basis, DCAP provides an insight into outstanding security vulnerabilities that have been identified for each Digital Service. By systemically incorporating the data coming from DCAP as the basis for planning ongoing work to remediate security vulnerabilities, Digital Services can demonstrate SbD compliance.<br></br>
<div style="font-size:125%;color:CornflowerBlue;">Foundational Systems</div>A Foundational System is a technology or system that, were it to be compromised, the workings of the whole DfE would be critically impaired inside a week. There are 5 Foundational Systems : Azure, Entra Active Directory, DNS, M365 and GitHub. From the perspective of a Digital Service, these Foundational Systems are the platform on which the services run; so while most Digital Services have a dependency on the Foundational Systems being secure, they have no direct control over platforms themselves. The compliance of the Foundational Systems is being measured by DCAP against the CIS industry benchmarks, the objective being to ensure that the posture of critical systems is hardened and to give further confidence to Digital Services that the technology platforms on which they rely are themselves secure. For more information, please see the DCAP Help Dashboard for Foundational Systems (https://dfe.splunkcloud.com/en-GB/app/DCAP/ssphp_foundational_systems_dashboard_help).<br></br>
<div style="font-size:125%;color:CornflowerBlue;">Digital Services</div>A Digital Service is a digital system that is built in the business with business functionality, and is hosted within the DfE Azure environment. While a Digital Service implicitly has dependency on the reliability and availability of the infrastructure on which it depends, it is not the responsibility of the Service Team to manage that infrastructure. It is, however, their responsibility to manage the architecture and configuration of the assets within their applications that live on that infrastructure, and DCAP seeks to offer a tool to assist the Teams with adhering to DfE Policy and remediating vulnerabilities and security issues within those applications.<br></br>
<div style="font-size:125%;color:CornflowerBlue;">Posture Hardening</div>Opportunities to improve the security of configuration, operations, and architecture of digital assets come in a number of forms: 
- Microsoft has thousands of checks that are constantly running against Azure resources testing for good practice, and DCAP ingests these from the Defender for Cloud stream.
- DCAP uses the CIS Benchmarks to define good practice in terms of how Digital Services should be setting up their GitHub Repositories to be secure, and takes the data directly from GitHub to test posture compliance.
- GitHub and 3rd parties also provide tools to check various aspects of the contents of code; an example being scanning for secrets being uploaded into a public repo. Every detection by one these tools is ingested by DCAP as an Alert.
- All Virtual Machines in the DfE Azure estate have a Qualys agent enabled, which provides details of known vulnerabilities that have not been patched. This data is consumed as Alerts by DCAP.<br></br>
<div style="font-size:125%;color:CornflowerBlue;">Asset Atttribution</div>DCAP has a database of all Azure assets and GitHub repositories, with every asset attributed to a single Digital Service. The basis of the Taxonomy by which Digital Services are categorised is taken from the Financial Business Partners database, so it is common with how those assets are accounted and charged for. The Taonomy has 3 levels : There are 10 'Portfolios'; each Portfolio has a number of 'Service Lines'; each Service Line has a number of 'Products'. The database also holds details of Service Owners and other contacts.
<br></br>
Azure assets are matched to the FBP using the 'product' tag that all DfE Azure assets must have by Policy. Where an asset does not have a product tag, this is derived from that of the Resource Group in which it lives. GitHub Repositories are attributed to the Digital Services that own them according to the same taxonomy. The mechanism for attribution is by implementing a Policy whereby every Repo must be tagged (using Custom Tags) with the Portfolio, Service Line, and Portfolio of the Digital Service that owns it. These tags must be selected canonically from the approved list to ensure complete coverage.<br></br>
<div style="font-size:125%;color:CornflowerBlue;">Controls</div>A 'Control' or 'Use Case' is the manifestation, in Splunk, of a specific Policy against which Compliance is being measured. So Controls, Use Cases, and Policies are synonyms for the same thing. For every Control, the output from running the control is either 'Compliant' or 'Non-Compliant'. Each Assessment coming from MS-Defender for a specific asset is a single Control (Posture), as is a vulnerability report coming from Qualys (Alert), or a finding from Dependabot or CodeQL (Alerts). Each is individually attributed to the Digital Service that owns it. The output from Controls is grouped according to tyep; they are either Posture or Alerts. 'Posture' Controls relate to configuration recommendations coing from MS-Defender and from compliance with CIS GitHub Benchmark recomendations. 'Alert' Controls are specific problems that have been identified by the source system, such as Qualys reporting on a critical vulnerability that remains open or GitHub Dependabot having reported on an identified issue in a Repo's dependency ecosystem.<br></br>
<div style="font-size:125%;color:CornflowerBlue;">Scores</div>In order to be more useful, the output from a Control is actually a 'Score'; a score being more granular than simply reporting 'Compliant' or Non-Compliant', since it can hint at the degree of non-compliance. Scores will mean different things in different contexts, but throughout SSPHP a score of 100 is perfectly compliant, and a score of 0 is the worst possible where every single test failed. Scores between 0 and 100 are non-compliant, but the closer to 100 the better.
<br></br>
For each Control, the Score is calculated from a 'Numerator' and a 'Denominator'. The denominator is the number of things tested, and the numerator is the number of those tests which failed.
<br></br>
There are 2 types of Controls - those which require a single setting or collection of settings to be a certain way for the system or service as a whole, and those which require many users or resources to each have the specified settings. For the former, the denominator is the number of fields that were tested and the numerator is the number of fields that failed the tests. For the latter, each line is either a pass or a fail based on whether it contains 1 or more fields which failed a test, the denominator is the total number of lines that were tested, and the numerator is the number of lines that failed one or more tests.<br></br>
<div style="font-size:125%;color:CornflowerBlue;">DfE Mandated Controls</div>Every Control has been assigned a level of priority within 3 bands - DfE Mandated, Recommended, Desirable. The designation is largely based on the IG categorisation in the Benchmark docs (DfE Mandated being IG1, etc), but some have been moved depending on CISD's interpretation of risk based on DfE's usage.
<br></br>
In the first phase, System and Service Owners are expected to be compliant with all of the DfE Mandated Policies/Controls that relate to their particular technology. Where they are not, they are expected to remediate, or to demonstrate to the satisfaction of the CISO that the associated risk has been mitigated in a different way. It is very much the intent of CISD to work with Service Owners to ensure that risk is mitigated and their service status is Compliant.
<br></br>
In later phases and over time, all services will be expected to become compliant with the Controls in all 3 bands.<br></br>
<div style="font-size:125%;color:CornflowerBlue;">Cadence</div>The configuration data from the underlying systems and services is requested every day at 3am, and sent to Splunk. The Control algorithms run during a period between 4am and 7am. So the data in the dashboards is updated on a daily basis.<br></br>
<div style="font-size:125%;color:CornflowerBlue;">Sources</div>Microsoft Defender for Cloud is the source of Posture Assessment information in Azure. Qualys agents on Virtual Machines is the source of the Vulnerability data. DCAP uses GitHub APIs to acquire data relating to the CIS Controls looking at Repo configuration; these controls include checks that other tools are enabled, such as Dependabot and Secret Scanning. DCAP uses the GitHub and 3rd party APIs to acquire repo-related Alert data, including SonarCloud, CodeQL, Dependabot, Secret scanning, and other SAST tools.
        </html>
      </panel>

      <panel>
        <html>
<div style="font-size:175%;color:orange;">DASHBOARDS &amp; MENUS</div><br></br>
<div style="font-size:125%;color:CornflowerBlue;">Service Posture Dashboard</div>This dashboard is for the Service Owners, the technical owners responsible for remediation, and for Risk Managers. It shows the list of all the Controls, their Scores, and their compliance statuses.
<br></br>
The first time that each user accesses this dashboard, they will need to use the dashboard menu to decide which Digital Service they wish to view. To do this, click the 'Show Menu' link on the left side, which will show 3 dropdowns with Portfolio, Service Line, and Product. Select the desired Digital Service and the dashboard content will change to focus on that Service alone. Click 'Hide Menu' to show the chosen service and all it's associated contact details. The chosen service is persisted between dashboard visits (for up to 30 days), so the same Service will automatically open each time that user opens the dashboard.
<br></br>
The data in the Service Details panel comes from the Financial Business Partner database.
<br></br>
The dashboard has 2 rows of rolled-up metrics, all of which relate to the status of Resources measured by compliance with 'DfE Mandated' Controls. The top row shows the number of non-compliant resources, split by whether the the complaince judgement came from a source relating to Configuration Posture or an Alert. The metrics on this top row are not colour-coded because there is nothing to compare them against. The second row shows 4 metrics as breakdown of the row above : (1) 'Posture Configuration' shows the number of Resource Groups for the Service that contain zero non-compliant assets (ie are fully compliant - have no failed MS-Defender Assessments), and the total number of Azure Resource Groups that are attributed to the Service. (2) 'Repository Configuartion' is the number of Repos which have zero non-compliant CIS GitHub Configuration Controls (ie are fully compliant), and the total number of GitHub Repos attributed to the Service. (3) 'Code Scanning Alerts' is the number of Repos that have zero code scanning alerts (ie are fully compliant), and the total number of Repos attributed to the Service. (4) 'VM Vulnerability Alerts' is the number of Virtual Machines that have reported zero Qualys vulnerabilities (ie are fully compliant), and the total number of Azure Virtual Machines attributed to the Service. These metrics can be viewed as percentages by clicking the 'Show Menu' option and changing the 'View' selection.
<br></br>
Users can make a number of selections about how they view the data in the bottom table. There are selections available to filter data according to compliance status, mandated status, and which groups of controls and sources the line items originated from. There is also a free text box which allows the user to filter for only line items with 'Resource IDs' containing a snipet of text (this may include tenancy, subscription, resource group, id, or type). There are 3 ways of viewing the data: (1) 'Control Details' is a complete list of controls (this view allows a drilldown to the Details Dashboard in a new browser tab by clicking on the chosen line in the table). (2) 'Controls by Resource' shows the exact same data, but with all of the controls which relate to each resource grouped together in a list. (3) 'Resources by Control' shows the exact same data, but with all of the resources grouped together where they relate to the same Control. There is a 4th option which shows all of the resources that exist for the Service, regardless of status and controls. In this view, the left-side panel shows Azure resources, and the right-side shows GitHub Repos.<br></br>
<div style="font-size:125%;color:CornflowerBlue;">Details Dashboard</div>This dashboard is intended for the person responsible for understanding and remediating individual non-compliance issues; it shows the field level details about the tests that were run for a single Control, the expected results, and what needs to be changed in order to comply.
<br></br>
The dashboard has 3 rows of data panels : (1) the Score, (2) details of the Control Assessment, the Resource, the Service, and the Use Case. (3) the Underlying Data; this is original data that was returned from the source by the API, and is displayed in a format appropriate to that source. For underlying data that originates from a CIS Use Case, the data will be a table with non-compliant fields displayed in red. For other sources of underlying data, the display will be JSON.
<br></br>
The Score is calculated from the 'numerator' (Tests Failed in this Control) / 'denominator' (Number of Tests in this Control), expressed as a percentage. Depending on the context of the Control, numerator and denominator have different meanings...(a) for a Control where there is only a single setting to be investigated (ie 1 line), numerator and denominator means the number of fields that were investigated in the algorithm. (b) for a Control which has meany lines (for example, where the Control requires us to look at every user to see whether they each have the correct settings), then each use is deemed to be either Compliant or Non-Compliant and the denominator and numerator would be the number of events (in the example, users) and the number that failed the tests.<br></br>
<div style="font-size:125%;color:CornflowerBlue;">Vulnerability Management Dashboard</div>This dashboard is intended to be used by a technical user who is tasked with remediating VM vulnerabilities exposed by Qualys.
<br></br>
The left panel of the dashboard shows a list of vulnerabilities and the assets and services to which they relate. By clicking on the QID field in the left panel, the right panel is populated with data from Qualys explaining the precise nature of the vulnerability. 
<br></br>
<div style="font-size:125%;color:CornflowerBlue;">Asset Inventory Dashboard</div>This dashboard is to enable the user to view all of the Azure assets and resources. This can be either by selecting details of the Service to which they are attributed, or by selecting the Tenancy, Subscription, and Resource Group in wich the resource lives. Both options allow the data to be filtered to only show resources of chosen types (ie keyvault) There is a 3rd view that allows a completely free text search of all the data associated with any Azure asset. So, for example, entering the surname of a service owner will show all of the assets that live in services that individual owns. Eually, entering the name of a resource group will filter to show all of the Azure assets in a resource group of that name (note: there may be a number of resource groups of the same name in multiple subscriptions and tenancies, and consequently the results might show resources that live in another user's service).<br></br>
<div style="font-size:125%;color:CornflowerBlue;">Digital Service Controls List Dashboard</div>This dashboard is for reference, and shows all of the Control Use Cases that are being assessed, by category / source.<br></br>
<div style="font-size:125%;color:CornflowerBlue;">Menus</div>There is a default Menu for users of the DCAP Splunk App - in the top|left of the browser tab. Each of the Dashboards described can be accessed via the menu.
        </html>
      </panel>
    </row>

{% include 'default/data/ui/views/ssphp_dashboard_templates.d/ssphp_footer_template.xml' %}

{% include 'default/data/ui/views/ssphp_dashboard_templates.d/ssphp_footer_debug_template.xml' %}
      
  </dashboard>
