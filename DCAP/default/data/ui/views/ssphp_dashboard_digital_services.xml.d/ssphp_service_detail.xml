{% if environment=="_DEV" %}
  <dashboard theme="light" version="1.1" script="js/addtags.js, js/table_cell_backcolor_multivalue.js">
{% else %}
  <dashboard theme="dark" version="1.1" script="js/addtags.js, js/table_cell_backcolor_multivalue.js">
{% endif %}  

<label>Security Posture Continuous Assurance : Service Control Detail Dashboard</label>
<description>{{environment}} v4.1.0</description>
  
  <search id="bs_1">
    <query>
`ssphp_summary_index{{environment}}` SSPHP_UID=$tkn__uid|s$
    [| search `ssphp_summary_index{{environment}}` SSPHP_UID=$tkn__uid|s$
      | stats max(SSPHP_RUN) as SSPHP_RUN
      | return SSPHP_RUN]
    
| fields ssphp.assessment.*, ssphp.benchmark.*, ssphp.use_case.*, ssphp.service.*, ssphp.resource.*, ssphp.score.*, _raw
    </query>
      <done>
        <set token="tkn_source">$result.ssphp.assessment.source$</set>
      </done>
  </search>
  
  
  <row depends="$debug$">
    <panel>
      <html>
      <style>
        .green{
          color:green !important;
        }
        .blue{
          color:cyan !important;
        }
        .red{
          color:red !important;
        }
        .orange{
          color:orange !important;
        }
        .yellow{
          color:yellow !important;
        }
        .lightgrey{
          color:gray !important;
        }
        .lightblue{
          color:#ADD8E6 !important;
        }
      </style>
    </html>
    </panel>
    
    <panel>
      <html>
      <style>
        #table1 th:nth-child(1) {
          width: $tkn_col_width$ !important;
        }
        #table1 th:nth-child(2) {
          width: $tkn_col_width$ !important;
        }
        #table1 th:nth-child(3) {
          width: $tkn_col_width$ !important;
        }
        #table1 th:nth-child(4) {
          width: $tkn_col_width$ !important;
        }
        #table1 th:nth-child(5) {
          width: $tkn_col_width$ !important;
        }
        #table1 th:nth-child(6) {
          width: $tkn_col_width$ !important;
        }
      </style>
    </html>
    </panel>
  </row>
  
  
  <row>
    <panel>
      <single>
        <search base="bs_1">
          <query>
| fields ssphp.score.score
          </query>
        </search>
        <option name="colorMode">block</option>
        <option name="rangeColors">["0xd41f1f","0x118832"]</option>
        <option name="rangeValues">[99]</option>
        <option name="showSparkline">0</option>
        <option name="showTrendIndicator">0</option>
        <option name="useColors">1</option>
      </single>
    </panel>
  </row>
  
  
  <row>
    <panel>
      <table id="table1">
        <search base="bs_1">
          <query>
| fields - _raw, ssphp.score.score, ssphp.score.color, ssphp.use_case.version.last_changed*, ssphp.use_case.savedsearch

| eval ssphp.score.ciso_priority=case('ssphp.score.ciso_priority'="1","DfE Mandated",
                                      'ssphp.score.ciso_priority'="2","Recommended",
                                      'ssphp.score.ciso_priority'="3","Desirable")

| foreach * [| eval field=if('&lt;&lt;FIELD&gt;&gt;'!="",mvappend('field',"&lt;&lt;FIELD&gt;&gt;"." :: ".'&lt;&lt;FIELD&gt;&gt;'),'field')]

| fields field

| mvexpand field
| eval Field=mvindex(split('field'," :: "),0),
       Value=mvindex(split('field'," :: "),1)
| table Field, Value

| append 
    [| makeresults format=csv data="Field,display_text,order
ssphp.assessment.description,Description,3
ssphp.assessment.source,Source,1
ssphp.assessment.state,State,4
ssphp.assessment.status,Status,5
ssphp.assessment.title,Title,2
ssphp.use_case.category,Category,1
ssphp.use_case.group,Group,2
ssphp.use_case.group_name,Group Name,3
ssphp.use_case.id,Use Case ID,4
ssphp.use_case.savedsearch,Saved Search,10
ssphp.use_case.severity,Severity,6
ssphp.use_case.title,Title,5
ssphp.use_case.version.last_changed_by,Last Changed By,8
ssphp.use_case.version.last_changed_date,Last Changed Date,9
ssphp.use_case.version.number,Version,7
ssphp.service.display_name,Service Name,3
ssphp.service.division,Division,6
ssphp.service.group,Group,5
ssphp.service.id,Service ID,1
ssphp.service.name,Service,2
ssphp.service.portfolio,Portfolio,4
ssphp.resource.id,Resource ID,1
ssphp.resource.name,Resource Name,2
ssphp.resource.type,Resource Type,3
ssphp.resource.dependency.ecosystem,Ecosystem,6
ssphp.resource.dependency.manifest_path,Manifest Path,5
ssphp.resource.dependency.package_name,Package Name,4
ssphp.score.ciso_priority,Control Type,3
ssphp.score.color,Score Color,2
ssphp.score.denominator,Score Denominator,4
ssphp.score.numerator,Score Numerator,5
ssphp.score.score,Score,1
ssphp.score.scoring_narrative,Scoring Narrative,6
ssphp.score.threshold.green,Threshold Green,7
ssphp.score.threshold.orange,Thrshold Orange,8
ssphp.score.threshold.red,Threshold Red,9"]

| stats values(*) as * by Field

| eval display_text=if(isnull('display_text'),'Field','display_text'),
           order=if(isnull('order'),99,'order')

| eval h_start="~!span class=\"green\"~!",
       d_start="~!span class=\"lightblue\"~!",
       end="~!/span~!", 
       br="~!br~!"
| eval Out_Text='h_start'.'display_text'.'br'.end.'d_start'.'Value'.'end'.'br'
```| eval Out_Text="~!span class=\"green\"~!".'display_text'."~!br~!~!/span~!".Value."~!br~!~!br~!"```

| eval Source=mvindex(split('Field',"."),1)
| fields - Field, start, end, br

| sort Source, order

| where Value!="-"

| stats list(Out_Text) as Out_Text by Source
| eval {Source}='Out_Text'
| fields - Source, val
| stats list(*) as *
| fields - Out_Text

| rename assessment as Assessment, benchmark as Benchmark, use_case as "Use Case", service as Service, resource as Resource, score as Score

| makemv col_names
| foreach * [| eval "&lt;&lt;FIELD&gt;&gt;"=mvjoin('&lt;&lt;FIELD&gt;&gt;',"
"),
                    col_names=mvappend('col_names',"&lt;&lt;FIELD&gt;&gt;")]

          </query>
          <done>
            <set token="tkn_col_names">$result.col_names$</set>
          </done>
        </search>
        <fields>$tkn_col_fields$</fields>
      </table>
    </panel>
  </row>
  
  
  <row depends="$debug$">
    <panel>
      <table>
        <search>
          <query>
| makeresults
| eval col_names=$tkn_col_names|s$,
       no_cols=mvcount(split(col_names,",")),
       col_fields="\"".mvjoin(split(col_names,","),"\",\"")."\"",
       col_width=100/no_cols,
       col_width='col_width'."%"
| table no_cols, col_names, col_fields, col_width
          </query>
          <done>
            <set token="tkn_col_fields">$result.col_fields$</set>
            <set token="tkn_col_width">$result.col_width$</set>
          </done>
        </search>
      </table>
    </panel>
  </row>
  
  
  <row depends="$debug$">
    <panel>
      <table>
        <search base="bs_1">
          <query>
| table ssphp.use_case.savedsearch
          </query>
          <done>
            <set token="tkn_saved_search">$result.ssphp.use_case.savedsearch$</set>
          </done>
        </search>
      </table>
    </panel>
  </row>  
  
  <row depends="$debug$">
    <panel>
      <table>
        <search base="bs_1">
          <query>
| eval resource_id=if(isnull(spath(_raw,"ssphp.resource.id")) OR spath(_raw,"ssphp.resource.id")="" OR spath(_raw,"ssphp.resource.id")="-","*",spath(_raw,"ssphp.resource.id")),
       manifest=if(isnull(spath(_raw,"ssphp.resource.dependency.manifest_path")) OR spath(_raw,"ssphp.resource.dependency.manifest_path")="" OR spath(_raw,"ssphp.resource.dependency.manifest_path")="-","*",spath(_raw,"ssphp.resource.dependency.manifest_path")),
       cve_id=if(isnull(spath(_raw,"ssphp.assessment.cve_id")) OR spath(_raw,"ssphp.assessment.cve_id")="" OR spath(_raw,"ssphp.assessment.cve_id")="-","*",spath(_raw,"ssphp.assessment.cve_id")),
       use_case=if(isnull(spath(_raw,"ssphp.use_case.id")) OR spath(_raw,"ssphp.use_case.id")="" OR spath(_raw,"ssphp.use_case.id")="-","*",spath(_raw,"ssphp.use_case.id"))

| eval start_text="(\\\"",
       end_text="\\\")",
       div_text="\\\" AND \\\"",
       search_string=case(lower('ssphp.assessment.source')="dependabot",
                          'start_text'.'cve_id'.'div_text'.'manifest'.'div_text'.'resource_id'.'div_text'.'use_case'.'end_text',
                          1==1,"oops")

| table search_string
          </query>
          <done>
            <set token="tkn_use_case_search_string">$result.search_string$</set>
          </done>
        </search>
      </table>
    </panel>

    <panel>
      <table>
        <search>
          <query>
| rest /servicesNS/-/-/saved/searches splunk_server=local

| search eai:acl.app="DCAP{{environment}}" AND title=$tkn_saved_search|s$

| rex field=search "^(?&lt;search_text&gt;[\s\S]*?)``` ##################### end dashboard query ##################### ```"
| eval search_text=replace('search_text',"\|\s*fields","| table"),
        search_text='search_text'."| sort 0 - ssphp.score.score | fields - temp_total_count"

| eval search_text=replace('search_text',"
    \["," 
     $tkn_use_case_search_string$ "."
     
    [")
    
| table title, search, search_text
          </query>
          <done>
            <set token="tkn_use_case_search_text">$result.search_text$</set>
          </done>
        </search>
      </table>
    </panel>
  </row>


  
  
  <row>
    <panel>
      <title>Underlying Data</title>
      <event>
        <search>
          <query>
$tkn_use_case_search_text$
          </query>
        </search>
      </event>
    </panel>
  </row>
</dashboard>
