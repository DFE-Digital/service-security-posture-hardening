[ssphp_use_case_aad_dfe_3-0]
cron_schedule = 55 7 * * *
dispatch.earliest_time = 0
dispatch.latest_time = now
enableSched = 1
search = """
| `ssphp_use_case_aad_002`

```| eval foundational_system="aad", type="vpn"
| lookup ssphp_acceptable_policy_list.csv foundational_system, type output acceptable_policy_key
| fields - foundational_system, type

| stats count as total_number_accounts,
        sum(eval(if(isPrivileged="true",1,0))) as total_number_privileged_accounts,
        sum(eval(if(isPrivileged="true" AND like(conditionalAccessPolicies_key,acceptable_policy_key),1,0))) as number_accounts_conditional_policies


| eval ssphp.score.numerator=number_accounts_conditional_policies,
       ssphp.score.denominator=total_number_privileged_accounts,
       ssphp.score.score=round('ssphp.score.numerator'*100/'ssphp.score.denominator')
| fillnull value=0 ssphp.score.score
| fields ssphp.score.score, ssphp.score.numerator, ssphp.score.denominator

`ssphp_use_case_write_null_output_override(0)` ```


| search isPrivileged="true"
| eval foundational_system="aad", type="vpn"
| lookup ssphp_acceptable_policy_list.csv foundational_system, type OUTPUT acceptable_policy_key
| fields displayName, surname, givenName, memberships, id, isPrivileged, conditionalAccessPolicies_key, acceptable_policy_key


| makemv ssphp.score.non_compliant_fields
| eval ssphp.score.non_compliant_fields=if(like('conditionalAccessPolicies_key','acceptable_policy_key'),
                                           'ssphp.score.non_compliant_fields',
                                           mvappend('ssphp.score.non_compliant_fields',"conditionalAccessPolicies_key"))

| eval ssphp.score.numerator=coalesce(mvcount('ssphp.score.non_compliant_fields'),"0"),
       ssphp.score.denominator="1",
       ssphp.score.score=floor(('ssphp.score.denominator'-'ssphp.score.numerator')*100/'ssphp.score.denominator')

| fields displayName, surname, givenName, memberships, id, isPrivileged, conditionalAccessPolicies_key, acceptable_policy_key, ssphp.score.score, ssphp.score.numerator, ssphp.score.denominator, ssphp.score.non_compliant_fields

``` ##################### end dashboard query ##################### ```


| stats count as ssphp.score.denominator, 
        sum(eval(if('ssphp.score.score'=100,0,1))) as ssphp.score.numerator
| eval ssphp.score.score=floor(('ssphp.score.denominator'-'ssphp.score.numerator')*100/'ssphp.score.denominator')

`ssphp_use_case_write_null_output_override(0)`


``` ##################### add metadata ##################### ```
| eval SSPHP_RUN=round(now()),
       ssphp.use_case.id="aad_dfe_3-0",

       ssphp.use_case.version.number="3.0.0",
       ssphp.use_case.version.last_changed_date="2024-02-08"

| eval ssphp.risk.expectancy="5",
       ssphp.risk.impact="5",
       ssphp.score.ciso_priority="1",
       ssphp.score.threshold.green="99",
       ssphp.score.threshold.orange="-",
       ssphp.score.threshold.red="-"

| eval ssphp.score.scoring_narrative="In order to be compliant, the field values must be as follows :~~
The value of field acceptable_policy_key MUST be in the list in field conditionalAccessPolicies_key"

| eval ssphp.score.color=case('ssphp.score.score'>'ssphp.score.threshold.green',"green",1==1,"red")


``` metadata that only occurs in our own controls, not in CIS controls where it comes from the benchmark lookup```
| eval ssphp.use_case.title="AAD [DfE 3.0]",
       ssphp.use_case.foundational_system="AAD",
       ssphp.dfe_benchmark.control.title="Admins no VPN Conditional Policies",
       ssphp.dfe_benchmark.control.description="Privileged AD accounts that do not have a specific VPN conditional access policy",
       ssphp.dfe_benchmark.control.rationale="All users should have a Conditional Access Policy associated with their Azure AD account which restricts access to only be through the DfE VPN.",
       ssphp.dfe_benchmark.control.impact="-",
       ssphp.use_case.savedsearch="ssphp_use_case_aad_dfe_3-0"

`ssphp_use_case_write`

"""
