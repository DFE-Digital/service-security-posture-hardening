[ssphp_create_dashboard_dataset_maturity]
dispatch.earliest_time = -2d@d
dispatch.latest_time = now
enableSched = 0
search = """

index="ssphp_metrics_summary" 
      (ssphp.use_case.id="azure*" OR ssphp.use_case.id="dns*" OR ssphp.use_case.id="m365*")
      ssphp.use_case.id!="*_000"
      (ssphp.cis_benchmark.controls.ig1="TRUE" OR ssphp.cis_benchmark.controls.ig2="TRUE" OR ssphp.cis_benchmark.controls.ig3="TRUE")

      [| search index="ssphp_metrics_summary" (ssphp.use_case.id="azure*" OR ssphp.use_case.id="dns*" OR ssphp.use_case.id="m365*") ssphp.use_case.id!="*_000"
        | stats max(SSPHP_RUN) as SSPHP_RUN by ssphp.use_case.id
        | eval search_text="(\"ssphp.use_case.id\"=\"".'ssphp.use_case.id'."\" AND SSPHP_RUN=\"".SSPHP_RUN."\")"
        | stats values(search_text) as search_text
        | eval search_text="(".mvjoin(search_text," OR ").")"
        | return $search_text]
        
| append 
    [| search index="ssphp_metrics_summary" 
      (ssphp.use_case.id="azure_001*" OR ssphp.use_case.id="m365_001*")
      ssphp.use_case.id!="*_000"
      (ssphp.cis_benchmark.controls.ig1="TRUE" OR ssphp.cis_benchmark.controls.ig2="TRUE" OR ssphp.cis_benchmark.controls.ig3="TRUE")

      [| search index="ssphp_metrics_summary" (ssphp.use_case.id="azure_001*" OR ssphp.use_case.id="m365_001*") ssphp.use_case.id!="*_000"
        | stats max(SSPHP_RUN) as SSPHP_RUN by ssphp.use_case.id
        | eval search_text="(\"ssphp.use_case.id\"=\"".'ssphp.use_case.id'."\" AND SSPHP_RUN=\"".SSPHP_RUN."\")"
        | stats values(search_text) as search_text
        | eval search_text="(".mvjoin(search_text," OR ").")"
        | return $search_text]
| eval ssphp.use_case.foundational_system="AAD"        
| fields ssphp.use_case.id, ssphp.use_case.title, ssphp.score.score, ssphp.use_case.foundational_system, ssphp.cis_benchmark.controls.ig1, ssphp.cis_benchmark.controls.ig2, ssphp.cis_benchmark.controls.ig3]

| fields ssphp.use_case.id, ssphp.use_case.title, ssphp.score.score, ssphp.use_case.foundational_system, ssphp.cis_benchmark.controls.ig1, ssphp.cis_benchmark.controls.ig2, ssphp.cis_benchmark.controls.ig3

| stats sum(eval(if('ssphp.cis_benchmark.controls.ig1'="TRUE",1,0))) as total_ig1,
        sum(eval(if('ssphp.cis_benchmark.controls.ig1'="TRUE" AND 'ssphp.score.score'="100",1,0))) as total_ig1_compliant,
        
        sum(eval(if('ssphp.cis_benchmark.controls.ig2'="TRUE",1,0))) as total_ig2, 
        sum(eval(if('ssphp.cis_benchmark.controls.ig2'="TRUE" AND 'ssphp.score.score'="100",1,0))) as total_ig2_compliant,
        
        sum(eval(if('ssphp.cis_benchmark.controls.ig3'="TRUE",1,0))) as total_ig3
        sum(eval(if('ssphp.cis_benchmark.controls.ig3'="TRUE" AND 'ssphp.score.score'="100",1,0))) as total_ig3_compliant,
        BY ssphp.use_case.foundational_system
        
| eval IG1='total_ig1_compliant'." / ".total_ig1,
       IG2='total_ig2_compliant'." / ".total_ig2,
       IG3='total_ig3_compliant'." / ".total_ig3

| rename ssphp.use_case.foundational_system as "FoundationalService"
| fields "FoundationalService", IG1, IG2, IG3
| eval "z_{FoundationalService}"=mvappend(IG1, IG2, IG3)
| fields z_*
| rename z_* as *
| stats list(*) as *

| foreach * 
    [| eval z_<<FIELD>>_IG1=mvindex(<<FIELD>>,0),
            z_<<FIELD>>_IG2=mvindex(<<FIELD>>,1),
            z_<<FIELD>>_IG3=mvindex(<<FIELD>>,2)
    ]

| fields z_*
| rename z_* as *

| eval type=mvappend("percent","absolute")
| mvexpand type

| eval AAD_IG1=if(type="percent",floor((tonumber(mvindex(split('AAD_IG1'," / "),0))*100) / (tonumber(mvindex(split('AAD_IG1'," / "),1)))),'AAD_IG1'),
       AAD_IG2=if(type="percent",floor((tonumber(mvindex(split('AAD_IG2'," / "),0))*100) / (tonumber(mvindex(split('AAD_IG2'," / "),1)))),'AAD_IG2'),
       AAD_IG3=if(type="percent",floor((tonumber(mvindex(split('AAD_IG3'," / "),0))*100) / (tonumber(mvindex(split('AAD_IG3'," / "),1)))),'AAD_IG3'),
       AZURE_IG1=if(type="percent",floor((tonumber(mvindex(split('AZURE_IG1'," / "),0))*100) / (tonumber(mvindex(split('AZURE_IG1'," / "),1)))),'AZURE_IG1'),
       AZURE_IG2=if(type="percent",floor((tonumber(mvindex(split('AZURE_IG2'," / "),0))*100) / (tonumber(mvindex(split('AZURE_IG2'," / "),1)))),'AZURE_IG2'),
       AZURE_IG3=if(type="percent",floor((tonumber(mvindex(split('AZURE_IG3'," / "),0))*100) / (tonumber(mvindex(split('AZURE_IG3'," / "),1)))),'AZURE_IG3'),
       DNS_IG1=if(type="percent",floor((tonumber(mvindex(split('DNS_IG1'," / "),0))*100) / (tonumber(mvindex(split('DNS_IG1'," / "),1)))),'DNS_IG1'),
       DNS_IG2=if(type="percent",floor((tonumber(mvindex(split('DNS_IG2'," / "),0))*100) / (tonumber(mvindex(split('DNS_IG2'," / "),1)))),'DNS_IG2'),
       DNS_IG3=if(type="percent",floor((tonumber(mvindex(split('DNS_IG3'," / "),0))*100) / (tonumber(mvindex(split('DNS_IG3'," / "),1)))),'DNS_IG3'),
       M365_IG1=if(type="percent",floor((tonumber(mvindex(split('M365_IG1'," / "),0))*100) / (tonumber(mvindex(split('M365_IG1'," / "),1)))),'M365_IG1'),
       M365_IG2=if(type="percent",floor((tonumber(mvindex(split('M365_IG2'," / "),0))*100) / (tonumber(mvindex(split('M365_IG2'," / "),1)))),'M365_IG2'),
       M365_IG3=if(type="percent",floor((tonumber(mvindex(split('M365_IG3'," / "),0))*100) / (tonumber(mvindex(split('M365_IG3'," / "),1)))),'M365_IG3')

| table AAD_IG1, AAD_IG2, AAD_IG3, AZURE_IG1, AZURE_IG2, AZURE_IG3, DNS_IG1, DNS_IG2, DNS_IG3, M365_IG1, M365_IG2, M365_IG3, type

| foreach * [| eval <<FIELD>>=replace('<<FIELD>>',"/","of")]

"""
