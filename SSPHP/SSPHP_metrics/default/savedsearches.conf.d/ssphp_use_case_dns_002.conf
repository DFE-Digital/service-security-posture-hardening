[ssphp_use_case_dns_002]
cron_schedule = 60 * * * *
description = Defender detected an Alert in Azure
dispatch.earliest_time = 0
dispatch.latest_time = now
enableSched = 1
search = """
index=test sourcetype="list_users"
| rename Arn as ssphp_user_arn

| join type=outer ssphp_user_arn 
    [| search index=test sourcetype="get_user_policy"
    | rename UserArn as ssphp_user_arn, 
             PolicyDocument.Statement{}.Condition.IpAddress.aws:SourceIp{} as ssphp_policy_condition_ip_address, 
             PolicyDocument.Statement.Condition.NotIpAddress.aws:SourceIp{} as ssphp_policy_condition_not_ip_address
    | stats values(ssphp_policy_condition_ip_address) as ssphp_policy_condition_ip_address, values(ssphp_policy_condition_not_ip_address) as ssphp_policy_condition_not_ip_address by ssphp_user_arn]
    
| join type=outer ssphp_user_arn 
    [| search index=test sourcetype="get_attached_user_policy"
    | rename UserArn as ssphp_user_arn, AttachedPolicies{}.PolicyName as ssphp_attached_policies_policy_name
    | stats values(ssphp_attached_policies_policy_name) as ssphp_attached_policies_policy_name by ssphp_user_arn
    | eval ssphp_attached_policies_policy_name=mvjoin(ssphp_attached_policies_policy_name,"~~~")]

| eval ssphp_policy_type_1=if(like('ssphp_policy_condition_ip_address',"%1.1.1.1%"),1,null()),
       ssphp_policy_type_2=if(like('ssphp_policy_condition_not_ip_address',"%95.91.255.183/32%"),2,null()),
       ssphp_policy_type_3=if(like('ssphp_attached_policies_policy_name',"%AWSBillingConductorFullAccess%"),3,null()),
       ssphp_ip_policy_success_types=mvappend(ssphp_policy_type_1,ssphp_policy_type_2,ssphp_policy_type_3)
| fillnull value=0 ssphp_ip_policy_success_types

| eval ssphp_attached_policies_policy_name=split(ssphp_attached_policies_policy_name,"~~~")
| table ssphp_user_arn, UserName, ssphp_policy_condition_ip_address, ssphp_policy_condition_not_ip_address, ssphp_attached_policies_policy_name, ssphp_ip_policy_success_types
| search ssphp_user_arn=*
| stats dc(ssphp_user_arn) as ssphp_number_users, sum(eval(if(ssphp_ip_policy_success_types="0",1,0))) as ssphp_number_users_without_policy
| eval ssphp.score=round(ssphp_number_users_without_policy * 100 / ssphp_number_users)
| fields ssphp.score

``` add metadata ```
| eval SSPHP_RUN=round(now()),
       ssphp.use_case.id="dns_002",
       ssphp.use_case.description="This use case tests whether all admin accounts with access to the DfE AWS DNS servers has policies applied",
       ssphp.use_case.version="1.0.0",
       ssphp.use_case.last_changed.date="2023-07-10",
       ssphp.use_case.last_changed.by="Ian Pearl"

| makejson SSPHP_RUN, ssphp* output=_raw
| fields _raw

```| spath input=json```
| collect output_format=hec testmode=f addinfo=f index="ssphp_metrics"

"""
