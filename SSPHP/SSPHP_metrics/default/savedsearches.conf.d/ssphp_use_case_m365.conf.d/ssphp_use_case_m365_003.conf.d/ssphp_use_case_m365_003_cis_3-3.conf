[ssphp_use_case_m365_003_cis_3-3]
cron_schedule = */30 * * * *
dispatch.earliest_time = 0
dispatch.latest_time = now
enableSched = 1
search = """
| `ssphp_use_case_m365_cis_powershell("m365:get_cs_teams_tenant_federation_configuration")`

| fields AllowTeamsConsumer, AllowPublicUsers, AllowFederatedUsers, AllowedDomains.AllowedDomain{}.Domain

| eval ssphp.score.numerator=if(lower('AllowTeamsConsumer')="false",1,0),
       ssphp.score.numerator=if(lower('AllowPublicUsers')="false",'ssphp.score.numerator'+2,'ssphp.score.numerator'),
       ssphp.score.numerator=if(lower('AllowFederatedUsers')="false" OR (lower('AllowFederatedUsers')="true" AND isnotnull('AllowedDomains.AllowedDomain{}.Domain')),'ssphp.score.numerator'+4,'ssphp.score.numerator'),
       ssphp.score.denominator="7",
       ssphp.score.score=if('ssphp.score.numerator'='ssphp.score.denominator',100,0)
       
| fields ssphp.score.numerator, ssphp.score.denominator, ssphp.score.score

| append 
    [| makeresults
    | eval ssphp.score.score=0, ssphp.score.numerator=0, ssphp.score.denominator=0
    | fields - _time]
| stats max(*) as *


``` ##################### add metadata ##################### ```
| eval SSPHP_RUN=round(now()),
       ssphp.use_case.id="m365_003_cis_3-3",

       ssphp.use_case.version.number="1.0.1",
       ssphp.use_case.version.last_changed_date="2023-12-18",
       ssphp.use_case.version.last_changed_by="Ian Pearl",
       
       ssphp.microsoft.description=coalesce('description',"-"),
       ssphp.microsoft.implementation_status=coalesce('implementationStatus',"-")

`ssphp_use_case_add_cis_metadata_m365`

```| eval ssphp.use_case.control=coalesce('ssphp.use_case.control','ssphp.cis_benchmark.control.title',"-"),
       ssphp.use_case.description=coalesce('ssphp.use_case.description','ssphp.cis_benchmark.control.description',"-")```
| eval ssphp.use_case.short_description="-",
       ssphp.risk.expectancy="5",
       ssphp.risk.impact="5",
       ssphp.score.ciso_priority="-",
       ssphp.score.scoring_narrative="Score is 100 if control requirements are confirmed, otherwise 0. Best=100, Worst=0",
       ssphp.score.threshold.green="99",
       ssphp.score.threshold.orange="-",
       ssphp.score.threshold.red="-"

| eval ssphp.score.color=case('ssphp.score.score'>'ssphp.score.threshold.green',"green",1==1,"red")


`ssphp_use_case_write`

"""
