[ssphp_use_case_m365_004_cis_4-13]
cron_schedule = */30 * * * *
dispatch.earliest_time = 0
dispatch.latest_time = now
enableSched = 1
search = """
| `ssphp_use_case_powershell("m365:eop_protection_policy_rule")`
| eval order=1, sourcetypes="sourcetype 'm365:eop_protection_policy_rule' does have data"

| append 
    [| makeresults
    | eval sourcetypes="sourcetype 'm365:eop_protection_policy_rule' does NOT have data", order=0, Identity="-", State="-", AntiPhishPolicy="-", HostedContentFilterPolicy="-", MalwareFilterPolicy="-"]

| sort 1 -order
| fields sourcetypes, Identity, State, AntiPhishPolicy, HostedContentFilterPolicy, MalwareFilterPolicy

| rename * as eop_*, eop_sourcetypes as sourcetypes

| join type=outer eop_AntiPhishPolicy
    [| `ssphp_use_case_powershell("m365:anti_phish_policy")`
    | fields Id
    | eval eop_AntiPhishPolicy='Id' 
    | rename Id as phish_Id]
    
| join type=outer eop_HostedContentFilterPolicy
    [| `ssphp_use_case_powershell("m365:hosted_content_filter_policy")`
    | fields Id
    | eval eop_HostedContentFilterPolicy='Id' 
    | rename Id as host_Id]

| join type=outer eop_MalwareFilterPolicy
    [| `ssphp_use_case_powershell("m365:malware_filter_policy")`
    | fields Id
    | eval eop_MalwareFilterPolicy='Id' 
    | rename Id as mal_Id]

| append
    [| `ssphp_use_case_powershell("m365:safe_attachment_policy")`
    | search Id="Strict*"
    | rename Id as sap_Id
    | table sap_Id]

| append
    [| `ssphp_use_case_powershell("m365:safe_links_policy")`
    | search Id="Strict*"
    | rename Id as slp_Id
    | table slp_Id]

| fields sourcetypes, eop_AntiPhishPolicy, eop_HostedContentFilterPolicy, eop_Identity, eop_MalwareFilterPolicy, eop_State, host_Id, mal_Id, phish_Id, sap_Id, slp_Id
| stats values(*) as *
| fillnull value="-" host_Id, mal_Id, phish_Id, sap_Id, slp_Id

| makemv ssphp.score.non_compliant_fields
| eval ssphp.score.non_compliant_fields=if(sourcetypes="sourcetype 'm365:eop_protection_policy_rule' does have data",
                                           'ssphp.score.non_compliant_fields',
                                           mvappend('ssphp.score.non_compliant_fields',"sourcetypes")),
       ssphp.score.non_compliant_fields=if(eop_AntiPhishPolicy=='phish_Id',
                                           'ssphp.score.non_compliant_fields',
                                           mvappend('ssphp.score.non_compliant_fields',"phish_Id")),
                                           mvappend('ssphp.score.non_compliant_fields',"sourcetypes")),
       ssphp.score.non_compliant_fields=if(eop_HostedContentFilterPolicy=='host_Id',
                                           'ssphp.score.non_compliant_fields',
                                           mvappend('ssphp.score.non_compliant_fields',"host_Id")),
       ssphp.score.non_compliant_fields=if(eop_MalwareFilterPolicy=='mal_Id',
                                           'ssphp.score.non_compliant_fields',
                                           mvappend('ssphp.score.non_compliant_fields',"mal_Id")),
       ssphp.score.non_compliant_fields=if(like(sap_Id,"Strict%"),
                                           'ssphp.score.non_compliant_fields',
                                           mvappend('ssphp.score.non_compliant_fields',"sap_Id")),
       ssphp.score.non_compliant_fields=if(like(slp_Id,"Strict%"),
                                           'ssphp.score.non_compliant_fields',
                                           mvappend('ssphp.score.non_compliant_fields',"slp_Id"))
                                           
| eval ssphp.score.numerator=coalesce(mvcount('ssphp.score.non_compliant_fields'),"0"),
       ssphp.score.denominator="6",
       ssphp.score.score=floor(('ssphp.score.denominator'-'ssphp.score.numerator')*100/'ssphp.score.denominator')
       
| fields sourcetypes, eop_AntiPhishPolicy, phish_Id, eop_HostedContentFilterPolicy, eop_Identity, eop_MalwareFilterPolicy, eop_State, host_Id, mal_Id, sap_Id, slp_Id, ssphp.score.score, ssphp.score.numerator, ssphp.score.denominator, ssphp.score.non_compliant_fields

``` ##################### end dashboard query ##################### ```


| stats min(ssphp.score.score) as ssphp.score.score, max(ssphp.score.numerator) as ssphp.score.numerator, min(ssphp.score.denominator) as ssphp.score.denominator

`ssphp_use_case_write_null_output_override(0)`


``` ##################### add metadata ##################### ```
| eval SSPHP_RUN=round(now()),
       ssphp.use_case.id="m365_004_cis_4-13",

       ssphp.use_case.version.number="2.0.0",
       ssphp.use_case.version.last_changed_date="2024-01-30",
       ssphp.use_case.version.last_changed_by="Ian Pearl",
       
       ssphp.microsoft.description=coalesce('description',"-"),
       ssphp.microsoft.implementation_status=coalesce('implementationStatus',"-")

`ssphp_use_case_add_cis_metadata_m365`

| eval ssphp.risk.expectancy="5",
       ssphp.risk.impact="5",
       ssphp.score.ciso_priority="1",
       ssphp.score.threshold.green="99",
       ssphp.score.threshold.orange="-",
       ssphp.score.threshold.red="-"

| eval ssphp.score.scoring_narrative="In order to be compliant, the field values must be as follows :~~
sourcetypes = 'sourcetype 'm365:eop_protection_policy_rule' does have data' ** the IDs of the other sourcetypes are matched to this, so without this sourcetype all other tests fail **~~
The values of the other fields match to each other :
eop_AntiPhishPolicy = 'phish_Id'
eop_HostedContentFilterPolicy = 'host_Id'
eop_MalwareFilterPolicy = 'mal_Id'~~
BOTH sap_Id AND slp_Id start with the text 'Strict'"

| eval ssphp.score.color=case('ssphp.score.score'>'ssphp.score.threshold.green',"green",1==1,"red")

`ssphp_use_case_write`

"""
