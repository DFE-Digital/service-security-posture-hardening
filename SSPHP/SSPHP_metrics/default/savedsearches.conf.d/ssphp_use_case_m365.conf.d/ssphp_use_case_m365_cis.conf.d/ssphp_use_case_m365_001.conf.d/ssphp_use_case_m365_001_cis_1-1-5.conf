[ssphp_use_case_m365_001_cis_1-1-5]
cron_schedule = 10 4 * * *
dispatch.earliest_time = 0
dispatch.latest_time = now
enableSched = 1
search = """
| `ssphp_use_case_powershell("m365:authentication_methods_policy")`

```| eval ii=mvzip('authenticationMethodConfigurations{}.id','authenticationMethodConfigurations{}.state')

| eval ssphp.score.score=if(match(ii,"MicrosoftAuthenticator,enabled"),50,0),
       ssphp.score.score=if('authenticationMethodConfigurations{}.featureSettings.displayLocationInformationRequiredState.state'="enabled",'ssphp.score.score'+25,'ssphp.score.score'),
       ssphp.score.score=if('authenticationMethodConfigurations{}.featureSettings.displayAppInformationRequiredState.state'="enabled",'ssphp.score.score'+25,'ssphp.score.score'),
       ssphp.score.numerator="-",
       ssphp.score.denominator="-"

| fields ssphp.score.score, ssphp.score.numerator, ssphp.score.denominator

`ssphp_use_case_write_null_output_override(0)` ```

| rename authenticationMethodConfigurations{}.* as *, featureSettings.* as *
| eval id_state=mvzip('id','state')

| fields displayName, id_state, displayLocationInformationRequiredState.state, displayAppInformationRequiredState.state

| makemv ssphp.score.non_compliant_fields
| eval ssphp.score.non_compliant_fields=if(match('id_state',"MicrosoftAuthenticator,enabled"),
                                           'ssphp.score.non_compliant_fields',
                                           mvappend('ssphp.score.non_compliant_fields',"id_state")),
       ssphp.score.non_compliant_fields=if('displayLocationInformationRequiredState.state'="enabled",
                                           'ssphp.score.non_compliant_fields',
                                           mvappend('ssphp.score.non_compliant_fields',"displayLocationInformationRequiredState.state")),
       ssphp.score.non_compliant_fields=if('displayAppInformationRequiredState.state'="enabled",
                                           'ssphp.score.non_compliant_fields',
                                           mvappend('ssphp.score.non_compliant_fields',"displayAppInformationRequiredState.state"))


| eval ssphp.score.numerator=coalesce(mvcount('ssphp.score.non_compliant_fields'),"0"),
       ssphp.score.denominator="3",
       ssphp.score.score=floor(('ssphp.score.denominator'-'ssphp.score.numerator')*100/'ssphp.score.denominator')

| fields displayName, id_state, displayLocationInformationRequiredState.state, displayAppInformationRequiredState.state, ssphp.score.score, ssphp.score.numerator, ssphp.score.denominator, ssphp.score.non_compliant_fields

``` ##################### end dashboard query ##################### ```


| stats min(ssphp.score.score) as ssphp.score.score, max(ssphp.score.numerator) as ssphp.score.numerator, min(ssphp.score.denominator) as ssphp.score.denominator

`ssphp_use_case_write_null_output_override(0)`


``` ##################### add metadata ##################### ```
| eval SSPHP_RUN=round(now()),
       ssphp.use_case.id="m365_001_cis_1-1-5",

       ssphp.use_case.version.number="2.0.1",
       ssphp.use_case.version.last_changed_date="2024-03-28",
       ssphp.use_case.version.last_changed_by="Ian Pearl",
       
       ssphp.microsoft.description=coalesce('description',"-"),
       ssphp.microsoft.implementation_status=coalesce('implementationStatus',"-")

`ssphp_use_case_add_cis_metadata_m365`

| eval ssphp.risk.expectancy="5",
       ssphp.risk.impact="5",
       ssphp.score.ciso_priority="1",
       ssphp.score.threshold.green="99",
       ssphp.score.threshold.orange="-",
       ssphp.score.threshold.red="-"

| eval ssphp.source.service="M365",
       ssphp.source.service_name="M365"


| eval ssphp.score.scoring_narrative="In order to be compliant, the field values must be as follows :~~
id_state must contain an entry 'MicrosoftAuthenticator,enabled'~~
displayLocationInformationRequiredState.state = 'enabled'~~
displayAppInformationRequiredState.state = 'enabled'"

| eval ssphp.score.color=case('ssphp.score.score'>'ssphp.score.threshold.green',"green",1==1,"red")


`ssphp_use_case_write`

"""
