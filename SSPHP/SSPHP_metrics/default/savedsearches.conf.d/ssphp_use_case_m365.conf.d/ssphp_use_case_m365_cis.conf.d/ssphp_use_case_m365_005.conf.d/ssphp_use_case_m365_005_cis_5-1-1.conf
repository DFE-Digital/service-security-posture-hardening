[ssphp_use_case_m365_005_cis_5-1-1]
cron_schedule = 45 4 * * *
dispatch.earliest_time = 0
dispatch.latest_time = now
enableSched = 1
search = """
| `ssphp_use_case_msgraph("/v1.0/identityGovernance/accessReviews/definitions")`

| fields displayName, scope.principalScopes{}.query, reviewers{}.query, settings.mailNotificationsEnabled, settings.reminderNotificationsEnabled, settings.recurrence.range.endDate,settings.recurrence.range.type, settings.recurrence.pattern.type, settings.recurrence.pattern.interval, settings.autoApplyDecisionsEnabled, settings.defaultDecision, settings.justificationRequiredOnApproval

```| eval ssphp.score.numerator=if(like('scope.principalScopes{}.query',"%filter=userType eq 'Guest'"), 1, 0),
       ssphp.score.numerator=if(isnotnull('reviewers{}.query'), 'ssphp.score.numerator'+2, 'ssphp.score.numerator'),
       ssphp.score.numerator=if('settings.mailNotificationsEnabled'="true", 'ssphp.score.numerator'+4, 'ssphp.score.numerator'),
       ssphp.score.numerator=if('settings.reminderNotificationsEnabled'="true", 'ssphp.score.numerator'+8, 'ssphp.score.numerator'),
       ssphp.score.numerator=if('settings.recurrence.range.endDate'="9999-12-31", 'ssphp.score.numerator'+16, 'ssphp.score.numerator'),
       ssphp.score.numerator=if('settings.recurrence.range.type'="noEnd", 'ssphp.score.numerator'+32, 'ssphp.score.numerator'),
       ssphp.score.numerator=if(('settings.recurrence.pattern.type'="absoluteMonthly" AND 'settings.recurrence.pattern.interval'<=1 )
                                OR 'settings.recurrence.pattern.type'="weekly"
                                OR 'settings.recurrence.pattern.type'="daily", 'ssphp.score.numerator'+64, 'ssphp.score.numerator'),
       ssphp.score.numerator=if('settings.autoApplyDecisionsEnabled'="true", 'ssphp.score.numerator'+128, 'ssphp.score.numerator'),
       ssphp.score.numerator=if('settings.defaultDecision'="Deny", 'ssphp.score.numerator'+256, 'ssphp.score.numerator'),
       ssphp.score.numerator=if('settings.justificationRequiredOnApproval'="true", 'ssphp.score.numerator'+512, 'ssphp.score.numerator'),
       ssphp.score.denominator=1023,
       ssphp.score.score=if('ssphp.score.numerator'='ssphp.score.denominator',1,0)

| stats max(ssphp.score.score) as ssphp.score.score, max(ssphp.score.numerator) as ssphp.score.numerator, max(ssphp.score.denominator) as ssphp.score.denominator,

| fields ssphp.score.score, ssphp.score.numerator, ssphp.score.denominator

`ssphp_use_case_write_null_output_override(0)` ```


| makemv ssphp.score.non_compliant_fields
| eval ssphp.score.non_compliant_fields=if(like('scope.principalScopes{}.query',"%filter=userType eq 'Guest'"),
                                           'ssphp.score.non_compliant_fields',
                                           mvappend('ssphp.score.non_compliant_fields',"scope.principalScopes{}.query")),
       ssphp.score.non_compliant_fields=if(isnotnull('reviewers{}.query'),
                                           'ssphp.score.non_compliant_fields',
                                           mvappend('ssphp.score.non_compliant_fields',"reviewers{}.query")),
       ssphp.score.non_compliant_fields=if('settings.mailNotificationsEnabled'="true",
                                           'ssphp.score.non_compliant_fields',
                                           mvappend('ssphp.score.non_compliant_fields',"settings.mailNotificationsEnabled")),
       ssphp.score.non_compliant_fields=if('settings.reminderNotificationsEnabled'="true",
                                           'ssphp.score.non_compliant_fields',
                                           mvappend('ssphp.score.non_compliant_fields',"settings.reminderNotificationsEnabled")),
       ssphp.score.non_compliant_fields=if('settings.recurrence.range.endDate'="9999-12-31",
                                           'ssphp.score.non_compliant_fields',
                                           mvappend('ssphp.score.non_compliant_fields',"settings.recurrence.range.endDate")),
       ssphp.score.non_compliant_fields=if('settings.recurrence.range.type'="noEnd",
                                           'ssphp.score.non_compliant_fields',
                                           mvappend('ssphp.score.non_compliant_fields',"settings.recurrence.range.type")),
       ssphp.score.non_compliant_fields=if(('settings.recurrence.pattern.type'="absoluteMonthly" AND 'settings.recurrence.pattern.interval'<=1)
                                            OR 'settings.recurrence.pattern.type'="weekly"
                                            OR 'settings.recurrence.pattern.type'="daily",
                                           'ssphp.score.non_compliant_fields',
                                           mvappend('ssphp.score.non_compliant_fields',"settings.recurrence.pattern.type")),
       ssphp.score.non_compliant_fields=if('settings.autoApplyDecisionsEnabled'="true",
                                           'ssphp.score.non_compliant_fields',
                                           mvappend('ssphp.score.non_compliant_fields',"settings.autoApplyDecisionsEnabled")),
       ssphp.score.non_compliant_fields=if('settings.defaultDecision'="Deny",
                                           'ssphp.score.non_compliant_fields',
                                           mvappend('ssphp.score.non_compliant_fields',"settings.defaultDecision")),
       ssphp.score.non_compliant_fields=if('settings.justificationRequiredOnApproval'="true",
                                           'ssphp.score.non_compliant_fields',
                                           mvappend('ssphp.score.non_compliant_fields',"settings.justificationRequiredOnApproval"))

| eval ssphp.score.numerator=coalesce(mvcount('ssphp.score.non_compliant_fields'),"0"),
       ssphp.score.denominator="10",
       ssphp.score.score=floor(('ssphp.score.denominator'-'ssphp.score.numerator')*100/'ssphp.score.denominator')
       
| fields displayName, scope.principalScopes{}.query, reviewers{}.query, settings.mailNotificationsEnabled, settings.reminderNotificationsEnabled, 
         settings.recurrence.range.endDate,settings.recurrence.range.type, settings.recurrence.pattern.type, settings.recurrence.pattern.interval, 
         settings.autoApplyDecisionsEnabled, settings.defaultDecision, settings.justificationRequiredOnApproval, 
         ssphp.score.score, ssphp.score.numerator, ssphp.score.denominator, ssphp.score.non_compliant_fields

``` ##################### end dashboard query ##################### ```


| stats count as ssphp.score.denominator, 
        sum(eval(if('ssphp.score.score'=100,0,1))) as ssphp.score.numerator
| eval ssphp.score.score=floor(('ssphp.score.denominator'-'ssphp.score.numerator')*100/'ssphp.score.denominator')

`ssphp_use_case_write_null_output_override(0)`


``` ##################### add metadata ##################### ```
| eval SSPHP_RUN=round(now()),
       ssphp.use_case.id="m365_005_cis_5-1-1",

       ssphp.use_case.version.number="3.0.0",
       ssphp.use_case.version.last_changed_date="2024-01-30",
       ssphp.use_case.version.last_changed_by="Ian Pearl",

       ssphp.microsoft.description=coalesce('description', "-"),
       ssphp.microsoft.implementation_status=coalesce('implementationStatus', "-")

`ssphp_use_case_add_cis_metadata_m365`

| eval ssphp.risk.expectancy="5",
       ssphp.risk.impact="5",
       ssphp.score.ciso_priority="2",
       ssphp.score.threshold.green="99",
       ssphp.score.threshold.orange="-",
       ssphp.score.threshold.red="-"

| eval ssphp.score.scoring_narrative="In order to be compliant, the field values must be as follows :~~
scope.principalScopes{}.query MUST end in text 'filter=userType eq 'Guest'
reviewers{}.query MUST NOT be empty/null
settings.mailNotificationsEnabled = 'true'
settings.reminderNotificationsEnabled = 'true'
settings.recurrence.range.endDate = '9999-12-31'
settings.recurrence.range.type = 'noEnd'~~
settings.recurrence.pattern.type = 'absoluteMonthly' AND 'settings.recurrence.pattern.interval'<=1
OR 'settings.recurrence.pattern.type = 'weekly' OR 'daily'~~
settings.autoApplyDecisionsEnabled = 'true'
settings.defaultDecision = 'Deny'
settings.justificationRequiredOnApproval = 'true'"

| eval ssphp.score.color=case('ssphp.score.score'>'ssphp.score.threshold.green',"green",1==1,"red")


`ssphp_use_case_write`

"""
