[ssphp_use_case_dns_001]
cron_schedule = 60 * * * *
description = Defender detected an Alert in Azure
dispatch.earliest_time = 0
dispatch.latest_time = now
enableSched = 1
search = """
index=test (sourcetype="list_users" OR sourcetype="list_mfa_devices" OR sourcetype="list_virtual_mfa_devices")
| eval ssphp_user_arn=case(sourcetype="list_users",'Arn',
                           sourcetype="list_mfa_devices",'User.Arn',
                           sourcetype="list_virtual_mfa_devices",'User.Arn'),
       ssphp_user_name=case(like(ssphp_user_arn,"%:root"),"root",
                            1==1,if(isnull(ssphp_user_arn),null(),coalesce('UserName', 'User.UserName')))
       
| stats values(ssphp_user_name) as ssphp_user_name, values(SerialNumber) as ssphp_mfa_device by ssphp_user_arn
| fillnull value="No MFA" ssphp_mfa_device
```| search ssphp_mfa_device="No MFA"```
| stats dc(ssphp_user_name) as ssphp_number_users, sum(eval(if(ssphp_mfa_device="No MFA",1,0))) as ssphp_number_users_without_mfa
| eval ssphp.score=ssphp_number_users_without_mfa * 100 / ssphp_number_users
| fields ssphp.score

``` add metadata ```
| eval SSPHP_RUN=round(now()),
       ssphp.use_case.id="dns_001",
       ssphp.use_case.description="This use case tests whether all admin accounts with access to the DfE AWS DNS servers has policies applied",
       ssphp.use_case.version="1.0.0",
       ssphp.use_case.last_changed.date="2023-07-10",
       ssphp.use_case.last_changed.by="Ian Pearl"

| makejson SSPHP_RUN, ssphp* output=_raw
| fields _raw

```| spath input=json```
| collect output_format=hec testmode=f addinfo=f index="ssphp_metrics"

"""
