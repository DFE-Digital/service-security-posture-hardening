[ssphp_use_case_github_dfe_2-0]
cron_schedule = 55 5 * * *
dispatch.earliest_time = 0
dispatch.latest_time = now
enableSched = 1
search = """

index="test" sourcetype="github:branch:protection"
    [| search index=test ("github:branch:protection")
    | stats max(SSPHP_RUN) as SSPHP_RUN
    | return SSPHP_RUN]
    
| fields repo, branch_protection, required_pull_request_reviews.required_approving_review_count

`ssphp_use_case_github_add_metadata`
| where 'service.name'="s194"

| fields service.name, service.display_name, service.division, service.group, service.portfolio, repo, branch_protection, required_pull_request_reviews.required_approving_review_count

| eval ssphp.score.non_compliant_fields=if((lower('branch_protection')="false" OR 'required_pull_request_reviews.required_approving_review_count'<2),
                                          mvappend('ssphp.score.non_compliant_fields',"branch_protection","required_pull_request_reviews.required_approving_review_count"),
                                          'ssphp.score.non_compliant_fields')

| eval ssphp.score.numerator=coalesce(mvcount('ssphp.score.non_compliant_fields')/2,"0"),
       ssphp.score.denominator="1",
       ssphp.score.score=floor(('ssphp.score.denominator'-'ssphp.score.numerator')*100/'ssphp.score.denominator')
| fields repo, branch_protection, required_pull_request_reviews.required_approving_review_count, ssphp.score.non_compliant_fields, ssphp.score.score

``` ##################### end dashboard query ##################### ```
        
| stats sum(eval(if('ssphp.score.score'<100,1,0))) as ssphp.score.numerator by service.name
| eval ssphp.score.denominator=0,
       ssphp.score.score=if('ssphp.score.numerator'>'ssphp.score.denominator',"0","100")
       

``` ##################### add metadata ##################### ```
| eval SSPHP_RUN=round(now()),
       ssphp.use_case.id="github_dfe_1-1-3",
       ssphp.use_case.version.number="1.0.0",
       ssphp.use_case.version.last_changed_date="2024-03-22",
       ssphp.use_case.version.last_changed_by="Sam Pritchard"

| eval ssphp.risk.expectancy="5",
       ssphp.risk.impact="5",
       ssphp.score.ciso_priority="1",
       ssphp.score.threshold.green="99",
       ssphp.score.threshold.orange="-",
       ssphp.score.threshold.red="-"

| eval ssphp.score.scoring_narrative="In order to be compliant, repositories must have branch protection on and the required approver count to be 2 or more."

| eval ssphp.score.color=case('ssphp.score.score'>'ssphp.score.threshold.green',"green",1==1,"red")


``` metadata that only occurs in our own controls, not in CIS controls where it comes from the benchmark lookup```
| eval ssphp.use_case.title="GITHUB [DfE 2.0]",
       ssphp.use_case.foundational_system='service.name',
       ssphp.dfe_benchmark.control.title="Branch protection rules: Ensure any change to code receives approval of two strongly authenticated users.",
       ssphp.dfe_benchmark.control.description="Ensure any change to code receives approval of two strongly authenticated users, enforced via branch protection rules to the default branch.",
       ssphp.dfe_benchmark.control.rationale="-",
       ssphp.dfe_benchmark.control.impact="-",
       ssphp.use_case.savedsearch="ssphp_use_case_github_dfe_2-0"
       
`ssphp_use_case_write`

"""