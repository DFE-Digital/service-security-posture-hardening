[ssphp_use_case_azure_001_cis_1-2-5]
cron_schedule = 10 6 * * *
dispatch.earliest_time = 0
dispatch.latest_time = now
enableSched = 1
search = """
| `ssphp_use_case_msgraph("/v1.0/identity/conditionalAccess/policies")`

| fields id, displayName, state, conditions.users.includeUsers{}, conditions.clientAppTypes{}, grantControls.builtInControls{}, conditions.signInRiskLevels{}

```| eval ssphp.score.numerator=if(upper('conditions.users.includeUsers{}')="ALL","1","0"),
       ssphp.score.numerator=if(upper('state')="ENABLED",'ssphp.score.numerator'+1,'ssphp.score.numerator'),
       ssphp.score.numerator=if(upper('conditions.clientAppTypes{}')="ALL",'ssphp.score.numerator'+1,'ssphp.score.numerator'),
       ssphp.score.numerator=if(upper('grantControls.builtInControls{}')="MFA",'ssphp.score.numerator'+1,'ssphp.score.numerator'),
       ssphp.score.numerator=if(upper('conditions.signInRiskLevels{}')="HIGH" AND upper('conditions.signInRiskLevels{}')="MEDIUM",'ssphp.score.numerator'+1,'ssphp.score.numerator'),
       ssphp.score.denominator="5",
       ssphp.score.score=floor('ssphp.score.numerator'*100/'ssphp.score.denominator')

| stats max(ssphp.score.score) as ssphp.score.score, max(ssphp.score.numerator) as ssphp.score.numerator, max(ssphp.score.denominator) as ssphp.score.denominator

| fields ssphp.score.score, ssphp.score.numerator, ssphp.score.denominator

`ssphp_use_case_write_null_output_override(0)` ```


| makemv ssphp.score.non_compliant_fields
| eval ssphp.score.non_compliant_fields=if(upper('conditions.users.includeUsers{}')="ALL",'ssphp.score.non_compliant_fields',mvappend('ssphp.score.non_compliant_fields',"conditions.users.includeUsers{}")),
       ssphp.score.non_compliant_fields=if(upper('state')="ENABLED",'ssphp.score.non_compliant_fields', mvappend('ssphp.score.non_compliant_fields',"state")),
       ssphp.score.non_compliant_fields=if(upper('conditions.clientAppTypes{}')="ALL",'ssphp.score.non_compliant_fields', mvappend('ssphp.score.non_compliant_fields',"conditions.clientAppTypes{}")),
       ssphp.score.non_compliant_fields=if(upper('grantControls.builtInControls{}')="MFA",'ssphp.score.non_compliant_fields', mvappend('ssphp.score.non_compliant_fields',"grantControls.builtInControls{}")),
       ssphp.score.non_compliant_fields=if(upper('conditions.signInRiskLevels{}')="HIGH" AND upper('conditions.signInRiskLevels{}')="MEDIUM",'ssphp.score.non_compliant_fields', mvappend('ssphp.score.non_compliant_fields',"conditions.signInRiskLevels{}"))

| eval ssphp.score.numerator=coalesce(mvcount('ssphp.score.non_compliant_fields'),"0"),
       ssphp.score.denominator="5",
       ssphp.score.score=floor(('ssphp.score.denominator'-'ssphp.score.numerator')*100/'ssphp.score.denominator')

| fields id, displayName, state, conditions.users.includeUsers{}, conditions.clientAppTypes{}, grantControls.builtInControls{}, conditions.signInRiskLevels{}, ssphp.score.score, ssphp.score.numerator, ssphp.score.denominator, ssphp.score.non_compliant_fields

``` ##################### end dashboard query ##################### ```


| stats max(ssphp.score.score) as ssphp.score.score, min(ssphp.score.numerator) as ssphp.score.numerator, max(ssphp.score.denominator) as ssphp.score.denominator

`ssphp_use_case_write_null_output_override(0)`



``` ##################### add metadata ##################### ```
| eval SSPHP_RUN=round(now()),
       ssphp.use_case.id="azure_001_cis_1-2-5",

       ssphp.use_case.version.number="4.0.0",
       ssphp.use_case.version.last_changed_date="2024-01-22",
       ssphp.use_case.version.last_changed_by="Ian Pearl",
       
       ssphp.microsoft.description=coalesce('description',"-"),
       ssphp.microsoft.implementation_status=coalesce('implementationStatus',"-")

`ssphp_use_case_add_cis_metadata_azure`

| eval ssphp.risk.expectancy="5",
       ssphp.risk.impact="5",
       ssphp.score.ciso_priority="1",
       ssphp.score.threshold.green="99",
       ssphp.score.threshold.orange="-",
       ssphp.score.threshold.red="-"


| eval ssphp.score.scoring_narrative="In order to be compliant, at least 1 Conditional Access Policy needs to exist that has all of the following:~~
state = 'enabled'~~
conditions.users.includeUsers{}='all'~~
conditions.clientAppTypes{} = 'all'~~
grantControls.builtInControls{} = 'mfa'~~
conditions.signInRiskLevels{}='high' AND conditions.signInRiskLevels='medium'
Any CAP with all of these will have ssphp.score.score = 100. Only 1 needs to exist for compliance.~~
The field ssphp.score.numerator indicates how many of the conditions were compiant for each CAP"

| eval ssphp.score.color=case('ssphp.score.score'>'ssphp.score.threshold.green',"green",1==1,"red")


`ssphp_use_case_write`

"""
