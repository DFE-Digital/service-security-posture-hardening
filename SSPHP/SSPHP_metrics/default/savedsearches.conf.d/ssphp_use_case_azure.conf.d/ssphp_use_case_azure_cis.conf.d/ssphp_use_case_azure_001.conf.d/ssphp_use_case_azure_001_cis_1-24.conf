[ssphp_use_case_azure_001_cis_1-24]
cron_schedule = 10 6 * * *
dispatch.earliest_time = 0
dispatch.latest_time = now
enableSched = 1
search = """
| `ssphp_use_case_azure_rest("SSPHP.azure.role_assignment")`

| rename properties.* as *
| fields id, principalId, roleDefinitionId

```| rex field=id "^\/subscriptions\/(?<subscription>[^\/]*)\/"
| where isnotnull(subscription) and isnotnull(principalId) and isnotnull(roleDefinitionId)
| stats values(roleDefinitionId) as roleDefinitionId by subscription, principalId
| mvexpand roleDefinitionId


| join type=outer roleDefinitionId
    [| `ssphp_use_case_azure_rest("SSPHP.azure.role_definitions")`
     | rename id as roleDefinitionId
     | fields roleDefinitionId, properties.permissions{}.actions{}, properties.roleName

     | eval ssphp.score.numerator=if(like('properties.permissions{}.actions{}',"%Microsoft.Authorization/locks/read%"),1,0),
            ssphp.score.numerator=if(like('properties.permissions{}.actions{}',"%Microsoft.Authorization/locks/write%"),'ssphp.score.numerator'+2,'ssphp.score.numerator'),
            ssphp.score.numerator=if(like('properties.permissions{}.actions{}',"%Microsoft.Authorization/locks/delete%"),'ssphp.score.numerator'+4,'ssphp.score.numerator'),
            ssphp.score.numerator=if('properties.roleName'="Resource Lock Administrator",'ssphp.score.numerator'+8,'ssphp.score.numerator')
     | search ssphp.score.numerator>0
     | table roleDefinitionId, properties.permissions{}.actions{}, properties.roleName, ssphp.score.numerator]

| append 
    [| `ssphp_use_case_azure_rest("SSPHP.azure.subscriptions")`
     | stats values(subscriptionId) as subscription
     | mvexpand subscription
     | eval ssphp.score.numerator=0]
     
| stats max(ssphp.score.numerator) as ssphp.score.numerator by subscription

| sort 0 - ssphp.score.numerator

| stats count as ssphp.score.denominator, sum(eval(if('ssphp.score.numerator'>6,1,0))) as ssphp.score.numerator
| eval ssphp.score.score=floor('ssphp.score.numerator'*100/'ssphp.score.denominator')

| fields ssphp.score.numerator, ssphp.score.denominator, ssphp.score.score

`ssphp_use_case_write_null_output_override(0)` ```


| rex field=id "^\/subscriptions\/(?<subscription>[^\/]*)\/"
| where isnotnull(subscription) and isnotnull(principalId) and isnotnull(roleDefinitionId)
| stats values(roleDefinitionId) as roleDefinitionId by subscription, principalId
| mvexpand roleDefinitionId

| join type=outer roleDefinitionId
    [| `ssphp_use_case_azure_rest("SSPHP.azure.role_definitions")`
     | rename id as roleDefinitionId, properties.* as *
     | fields roleDefinitionId, permissions{}.actions{}, roleName]

| append 
    [| `ssphp_use_case_azure_rest("SSPHP.azure.subscriptions")`
     | stats values(subscriptionId) as subscription
     | mvexpand subscription]
     
| fields subscription, principalId, roleDefinitionId, permissions{}.actions{}, roleName

| makemv ssphp.score.non_compliant_fields
| eval ssphp.score.non_compliant_fields=if(like('permissions{}.actions{}',"%Microsoft.Authorization/locks/read%"),
                                           'ssphp.score.non_compliant_fields',
                                           mvappend('ssphp.score.non_compliant_fields',"permissions{}.actions{}")),
       ssphp.score.non_compliant_fields=if(like('permissions{}.actions{}',"%Microsoft.Authorization/locks/write%"),
                                           'ssphp.score.non_compliant_fields',
                                           mvappend('ssphp.score.non_compliant_fields',"permissions{}.actions{}")),
       ssphp.score.non_compliant_fields=if(like('permissions{}.actions{}',"%Microsoft.Authorization/locks/delete%"),
                                           'ssphp.score.non_compliant_fields',
                                           mvappend('ssphp.score.non_compliant_fields',"permissions{}.actions{}")),
       ssphp.score.non_compliant_fields=if('roleName'="Resource Lock Administrator",
                                           'ssphp.score.non_compliant_fields',
                                           mvappend('ssphp.score.non_compliant_fields',"roleName")),
       ssphp.score.non_compliant_fields=mvdedup('ssphp.score.non_compliant_fields')
                                    

| eval ssphp.score.numerator=coalesce(mvcount('ssphp.score.non_compliant_fields'),"0"),
       ssphp.score.denominator="2",
       ssphp.score.score=floor(('ssphp.score.denominator'-'ssphp.score.numerator')*100/'ssphp.score.denominator')

| fields subscription, principalId, roleDefinitionId, permissions{}.actions{}, roleName, ssphp.score.score, ssphp.score.numerator, ssphp.score.denominator, ssphp.score.non_compliant_fields

``` ##################### end dashboard query ##################### ```


| stats max(ssphp.score.score) as ssphp.score.score, min(ssphp.score.numerator) as ssphp.score.numerator, max(ssphp.score.denominator) as ssphp.score.denominator by subscription
| stats max(ssphp.score.score) as ssphp.score.score, min(ssphp.score.numerator) as ssphp.score.numerator, max(ssphp.score.denominator) as ssphp.score.denominator

`ssphp_use_case_write_null_output_override(0)` 


``` ##################### add metadata ##################### ```
| eval SSPHP_RUN=round(now()),
       ssphp.use_case.id="azure_001_cis_1-24",

       ssphp.use_case.version.number="4.0.0",
       ssphp.use_case.version.last_changed_date="2024-01-23",
       ssphp.use_case.version.last_changed_by="Ian Pearl",
       
       ssphp.microsoft.description=coalesce('description',"-"),
       ssphp.microsoft.implementation_status=coalesce('implementationStatus',"-")

`ssphp_use_case_add_cis_metadata_azure`

| eval ssphp.risk.expectancy="5",
       ssphp.risk.impact="5",
       ssphp.score.ciso_priority="3",
       ssphp.score.threshold.green="99",
       ssphp.score.threshold.orange="-",
       ssphp.score.threshold.red="-"


| eval ssphp.score.scoring_narrative="In order to be compliant, the permissions{}.actions{} field in a Role Definition assigned to at least 1 role in every subscription must include all of the following values :~~
'Microsoft.Authorization/locks/read'~~
'Microsoft.Authorization/locks/write'~~
'Microsoft.Authorization/locks/delete'~~
and roleName = 'Resource Lock Administrator'"

| eval ssphp.score.color=case('ssphp.score.score'>'ssphp.score.threshold.green',"green",1==1,"red")


`ssphp_use_case_write`

"""
