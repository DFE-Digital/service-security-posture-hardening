[ssphp_use_case_dns_001_cis_1-22]
cron_schedule = 10 5 * * *
dispatch.earliest_time = 0
dispatch.latest_time = now
enableSched = 1
search = """
| `ssphp_use_case_aws("iam_EntitiesForPolicyOutput")`

| where arn="arn:aws:iam::aws:policy/AWSCloudShellFullAccess"

| fields arn, policy_groups{}, policy_roles{}, policy_users{}

```| stats sum(eval(if(isnull('policy_groups{}') AND isnull('policy_roles{}') AND isnull('policy_users{}'),0,1))) as ssphp.score.numerator

| eval ssphp.score.denominator="-",
       ssphp.score.score=if('ssphp.score.numerator'=0,100,0)

| fields ssphp.score.score, ssphp.score.numerator, ssphp.score.denominator

`ssphp_use_case_write_null_output_override(0)` ```

| makemv ssphp.score.non_compliant_fields
| eval ssphp.score.non_compliant_fields=if(isnull('policy_groups{}'),
                                           mvappend('ssphp.score.non_compliant_fields',"policy_groups{}"),
                                           'ssphp.score.non_compliant_fields'),
       ssphp.score.non_compliant_fields=if(isnull('policy_roles{}'),
                                           mvappend('ssphp.score.non_compliant_fields',"policy_roles{}"),
                                           'ssphp.score.non_compliant_fields'),
       ssphp.score.non_compliant_fields=if(isnull('policy_users{}'),
                                           mvappend('ssphp.score.non_compliant_fields',"policy_users{}"),
                                           'ssphp.score.non_compliant_fields')

|  fillnull value="-" policy_groups{}, policy_roles{}, policy_users{}
| eval ssphp.score.numerator=coalesce(mvcount('ssphp.score.non_compliant_fields'),"0"),
       ssphp.score.denominator="3",
       ssphp.score.score=floor(('ssphp.score.denominator'-'ssphp.score.numerator')*100/'ssphp.score.denominator')

| fields arn, policy_groups{}, policy_roles{}, policy_users{}, ssphp.score.score, ssphp.score.numerator, ssphp.score.denominator, ssphp.score.non_compliant_fields

``` ##################### end dashboard query ##################### ```


| stats count as ssphp.score.denominator, 
        sum(eval(if('ssphp.score.score'=100,0,1))) as ssphp.score.numerator
| eval ssphp.score.score=floor(('ssphp.score.denominator'-'ssphp.score.numerator')*100/'ssphp.score.denominator')

`ssphp_use_case_write_null_output_override(0)`


``` ##################### add metadata ##################### ```
| eval SSPHP_RUN=round(now()),
       ssphp.use_case.id="dns_001_cis_1-22",

       ssphp.use_case.version.number="2.0.0",
       ssphp.use_case.version.last_changed_date="2024-02-13",
       ssphp.use_case.version.last_changed_by="Ian Pearl",
       
       ssphp.microsoft.description=coalesce('description',"-"),
       ssphp.microsoft.implementation_status=coalesce('implementationStatus',"-")

`ssphp_use_case_add_cis_metadata_dns`

| eval ssphp.risk.expectancy="5",
       ssphp.risk.impact="5",
       ssphp.score.ciso_priority="3",
       ssphp.score.threshold.green="99",
       ssphp.score.threshold.orange="-",
       ssphp.score.threshold.red="-"


| eval ssphp.score.scoring_narrative="In order to be compliant, EVERY arn MUST have a value for at least 1 of
policy_groups{}, policy_roles{}, policy_users{}"

| eval ssphp.score.color=case('ssphp.score.score'>'ssphp.score.threshold.green',"green",1==1,"red")


`ssphp_use_case_write`

"""
