[ssphp_use_case_dns_003_cis_3-3]
cron_schedule = */30 * * * *
dispatch.earliest_time = 0
dispatch.latest_time = now
enableSched = 1
search = """
| `ssphp_use_case_aws("s3_GetBucketPolicy")`

| spath path=Statement{} output=statements
| fields BucketName, statements
| mvexpand statements
| spath input=statements

| eval principals=mvappend('Principal', 'Principal.AWS', 'Principal.AWS{}'),
       conditions=mvappend('Condition.StringEquals.aws:PrincipalOrgID', 'Condition.StringEqualsIgnoreCase.aws:PrincipalOrgID')
       
| join type=outer BucketName 
    [| `ssphp_use_case_aws("s3_GetBucketAcl")`
     | fields BucketName, TrailArn, Grants{}.Grantee.Uri, Grants{}.Permission]
     
| fields BucketName, TrailArn, Effect, principals, conditions, Grants{}.Grantee.Uri, Grants{}.Permission


| makemv ssphp.score.non_compliant_fields
| eval ssphp.score.non_compliant_fields=if('Grants{}.Permission'="FULL_CONTROL" AND 
                                                   (match('Grants{}.Grantee.Uri',"^http://acs.amazonaws.com/groups/global/AllUsers$") OR 
                                                    match('Grants{}.Grantee.Uri',"^http://acs.amazonaws.com/groups/global/AuthenticatedUsers$")),
                                            mvappend('ssphp.score.non_compliant_fields',"Grants{}.Permission","Grants{}.Grantee.Uri"),
                                            'ssphp.score.non_compliant_fields'),
       ssphp.score.non_compliant_fields=if(Effect="Allow" AND like('principals',"%*%") AND isnull(conditions),
                                           mvappend('ssphp.score.non_compliant_fields',"Effect","principals","conditions"),
                                           'ssphp.score.non_compliant_fields')

```| eval ssphp.score.non_compliant_fields=mvappend('ssphp.score.non_compliant_fields',"Grants{}.Permission","Grants{}.Grantee.Uri") *** TESTING *** ```

| eval ssphp.score.numerator=tonumber(coalesce(mvcount(mvfilter(match('ssphp.score.non_compliant_fields',"^Effect$"))),"0")) + tonumber(coalesce(mvcount(mvfilter(match('ssphp.score.non_compliant_fields',"^Grants\{\}\.Permission$"))),"0")),
       ssphp.score.denominator="2",
       ssphp.score.score=floor(('ssphp.score.denominator'-'ssphp.score.numerator')*100/'ssphp.score.denominator')

| fields BucketName, TrailArn, Effect, principals, conditions, Grants{}.Permission, Grants{}.Grantee.Uri, ssphp.score.score, ssphp.score.numerator, ssphp.score.denominator, ssphp.score.non_compliant_fields


``` ##################### end dashboard query ##################### ```

| stats count as ssphp.score.denominator, 
        sum(eval(if('ssphp.score.score'=100,0,1))) as ssphp.score.numerator
| eval ssphp.score.score=floor(('ssphp.score.denominator'-'ssphp.score.numerator')*100/'ssphp.score.denominator')

`ssphp_use_case_write_null_output_override(0)`



``` ##################### add metadata ##################### ```
| eval SSPHP_RUN=round(now()),
       ssphp.use_case.id="dns_003_cis_3-3",

       ssphp.use_case.version.number="2.0.0",
       ssphp.use_case.version.last_changed_date="2024-02-13",
       ssphp.use_case.version.last_changed_by="Ian Pearl",
       
       ssphp.microsoft.description=coalesce('description',"-"),
       ssphp.microsoft.implementation_status=coalesce('implementationStatus',"-")

`ssphp_use_case_add_cis_metadata_dns`

| eval ssphp.risk.expectancy="5",
       ssphp.risk.impact="5",
       ssphp.score.ciso_priority="1",
       ssphp.score.threshold.green="99",
       ssphp.score.threshold.orange="-",
       ssphp.score.threshold.red="-"


| eval ssphp.score.scoring_narrative="In order to be compliant, the field values must be as follows :~~
IF Grants{}.Permission = 'FULL_CONTROL' THEN Grants{}.Grantee.Uri MUST NOT have the value 'http://acs.amazonaws.com/groups/global/AllUsers' OR 'http://acs.amazonaws.com/groups/global/AuthenticatedUsers'
IF Effect = 'Allow' AND principals contains a '*' THEN conditions MUST NOT be null" 

| eval ssphp.score.color=case('ssphp.score.score'>'ssphp.score.threshold.green',"green",1==1,"red")


`ssphp_use_case_write`

"""
