[ssphp_use_case_dns_003_cis_3-11]
cron_schedule = 35 5 * * *
dispatch.earliest_time = 0
dispatch.latest_time = now
enableSched = 1
search = """
| `ssphp_use_case_aws("cloudtrail_DescribeTrails")`

| rename EventSelectors.EventSelectors{}.DataResources{}.Type as EventSelectors.DataResources.Type,
         EventSelectors.EventSelectors{}.DataResources{}.Values{} as EventSelectors.DataResources.Values,
         EventSelectors.EventSelectors{}.ReadWriteType as EventSelectors.ReadWriteType
         
| fields TrailArn, IsMultiRegionTrail, EventSelectors.DataResources.Type, EventSelectors.DataResources.Values, EventSelectors.ReadWriteType

```| eval target_type_text="ReadOnly",
       ssphp.score.numerator=if(IsMultiRegionTrail="true",1,0),
       ssphp.score.numerator=if('EventSelectors.EventSelectors{}.DataResources{}.Type'="AWS::S3::Object",'ssphp.score.numerator'+2,'ssphp.score.numerator'),
       ssphp.score.numerator=if('EventSelectors.EventSelectors{}.DataResources{}.Values{}'="arn:aws:s3",'ssphp.score.numerator'+4,'ssphp.score.numerator'),
       ssphp.score.numerator=if(IN('EventSelectors.EventSelectors{}.ReadWriteType','target_type_text',"All"),'ssphp.score.numerator'+8,'ssphp.score.numerator'),
       ssphp.score.denominator="15",
       ssphp.score.score=if('ssphp.score.denominator'='ssphp.score.numerator',100,0)

| fields ssphp.score.score, ssphp.score.numerator, ssphp.score.denominator
| stats max(*) as *

`ssphp_use_case_write_null_output_override(0)` ```

| makemv ssphp.score.non_compliant_fields
| eval ssphp.score.non_compliant_fields=if('IsMultiRegionTrail'="true",
                                            'ssphp.score.non_compliant_fields',
                                            mvappend('ssphp.score.non_compliant_fields',"IsMultiRegionTrail")),
       ssphp.score.non_compliant_fields=if('EventSelectors.DataResources.Type'="AWS::S3::Object",
                                            'ssphp.score.non_compliant_fields',
                                            mvappend('ssphp.score.non_compliant_fields',"EventSelectors.DataResources.Type")),
       ssphp.score.non_compliant_fields=if('EventSelectors.DataResources.Values'="arn:aws:s3",
                                            'ssphp.score.non_compliant_fields',
                                            mvappend('ssphp.score.non_compliant_fields',"EventSelectors.DataResources.Values")),       
       ssphp.score.non_compliant_fields=if(IN('EventSelectors.ReadWriteType',"ReadOnly","All"),
                                            'ssphp.score.non_compliant_fields',
                                            mvappend('ssphp.score.non_compliant_fields',"EventSelectors.ReadWriteType"))
                                           
| eval ssphp.score.numerator=coalesce(mvcount('ssphp.score.non_compliant_fields'),"0"),
       ssphp.score.denominator="4",
       ssphp.score.score=floor(('ssphp.score.denominator'-'ssphp.score.numerator')*100/'ssphp.score.denominator')

| fields TrailArn, IsMultiRegionTrail, EventSelectors.DataResources.Type, EventSelectors.DataResources.Values, EventSelectors.ReadWriteType, ssphp.score.score, ssphp.score.numerator, ssphp.score.denominator, ssphp.score.non_compliant_fields

``` ##################### end dashboard query ##################### ```


| stats count as ssphp.score.denominator, 
        sum(eval(if('ssphp.score.score'=100,0,1))) as ssphp.score.numerator
| eval ssphp.score.score=floor(('ssphp.score.denominator'-'ssphp.score.numerator')*100/'ssphp.score.denominator')

`ssphp_use_case_write_null_output_override(0)`


``` ##################### add metadata ##################### ```
| eval SSPHP_RUN=round(now()),
       ssphp.use_case.id="dns_003_cis_3-11",

       ssphp.use_case.version.number="2.0.1",
       ssphp.use_case.version.last_changed_date="2024-04-03",
       ssphp.use_case.version.last_changed_by="Ian Pearl",
       
       ssphp.microsoft.description=coalesce('description',"-"),
       ssphp.microsoft.implementation_status=coalesce('implementationStatus',"-")

`ssphp_use_case_add_cis_metadata_dns`

| eval ssphp.risk.expectancy="5",
       ssphp.risk.impact="5",
       ssphp.score.ciso_priority="3",
       ssphp.score.threshold.green="99",
       ssphp.score.threshold.orange="-",
       ssphp.score.threshold.red="-"

| eval ssphp.source.service="DNS",
       ssphp.source.service_name="DNS"


| eval ssphp.score.scoring_narrative="In order to be compliant, the field values must be as follows :~~
IsMultiRegionTrail = 'true'
EventSelectors.DataResources.Type = 'AWS::S3::Object'
EventSelectors.DataResources.Values = 'arn:aws:s3'
EventSelectors.ReadWriteType' = 'ReadOnly' OR 'All'"

| eval ssphp.score.color=case('ssphp.score.score'>'ssphp.score.threshold.green',"green",1==1,"red")


`ssphp_use_case_write`

"""
