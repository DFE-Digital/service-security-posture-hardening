[ssphp_use_case_dns_001_cis_1-12]
cron_schedule = */30 * * * *
dispatch.earliest_time = 0
dispatch.latest_time = now
enableSched = 1
search = """
| `ssphp_use_case_aws("iam_GetCredentialReport")`

| fields arn, password_enabled, password_last_used, password_last_changed, access_key_1_active, access_key_1_last_used_date, access_key_1_last_rotated, access_key_2_active, access_key_2_last_used_date, access_key_2_last_rotated

| eval date_now_epoch=round(now()),
       access_methods=if(password_enabled="true",1,0),
       access_methods=if(access_key_1_active="true",'access_methods'+1,'access_methods'),
       access_methods=if(access_key_2_active="true",'access_methods'+1,'access_methods')

```Deal with Passwords```
| eval password_last_used_epoch=round(strptime('password_last_used',"%Y-%m-%dT%H:%M:%S+00:00")),
       password_last_changed_epoch=round(strptime('password_last_changed',"%Y-%m-%dT%H:%M:%S+00:00")),
       password_date_epoch=coalesce('password_last_used_epoch','password_last_changed_epoch'),
       password_days=floor(('date_now_epoch'-'password_date_epoch')/60/60/24),
       password_compliant=if(password_enabled="true" AND password_days<45,1,0)

```Deal with Access Key 1```
| eval access_key_1_last_used_date_epoch=round(strptime('access_key_1_last_used_date',"%Y-%m-%dT%H:%M:%S+00:00")),
       access_key_1_last_rotated_epoch=round(strptime('access_key_1_last_rotated',"%Y-%m-%dT%H:%M:%S+00:00")),
       access_key_1_date_epoch=coalesce('access_key_1_last_used_date_epoch','access_key_1_last_rotated_epoch'),
       access_key_1_days=floor(('date_now_epoch'-'access_key_1_date_epoch')/60/60/24),
       access_key_1_compliant=if(access_key_1_active="true" AND access_key_1_days<45,1,0)

```Deal with Access Key 2```
| eval access_key_2_last_used_date_epoch=round(strptime('access_key_2_last_used_date',"%Y-%m-%dT%H:%M:%S+00:00")),
       access_key_2_last_rotated_epoch=round(strptime('access_key_2_last_rotated',"%Y-%m-%dT%H:%M:%S+00:00")),
       access_key_2_date_epoch=coalesce('access_key_2_last_used_date_epoch','access_key_1_last_rotated_epoch'),
       access_key_2_days=floor(('date_now_epoch'-'access_key_2_date_epoch')/60/60/24),
       access_key_2_compliant=if(access_key_2_active="true" AND access_key_2_days<45,1,0)
       
| eval access_compliant='password_compliant'+'access_key_1_compliant'+'access_key_2_compliant'

| fields arn, access_methods, access_compliant, password_compliant, access_key_1_compliant, access_key_2_compliant

| where 'access_methods'>0
| stats count as ssphp.score.denominator, sum(eval(if('access_methods'='access_compliant',1,0))) as ssphp.score.numerator
| eval ssphp.score.score=floor('ssphp.score.numerator'*100/'ssphp.score.denominator')
| fillnull value=0 ssphp.score.score, ssphp.score.numerator, ssphp.score.denominator

| fields ssphp.score.score, ssphp.score.numerator, ssphp.score.denominator

`ssphp_use_case_write_null_output_override(0)`


``` ##################### add metadata ##################### ```
| eval SSPHP_RUN=round(now()),
       ssphp.use_case.id="dns_001_cis_1-12",

       ssphp.use_case.version.number="1.0.1",
       ssphp.use_case.version.last_changed_date="2024-01-05",
       ssphp.use_case.version.last_changed_by="Ian Pearl",
       
       ssphp.microsoft.description=coalesce('description',"-"),
       ssphp.microsoft.implementation_status=coalesce('implementationStatus',"-")

`ssphp_use_case_add_cis_metadata_dns`

| eval ssphp.risk.expectancy="5",
       ssphp.risk.impact="5",
       ssphp.score.ciso_priority="-",
       ssphp.score.scoring_narrative="Score is 100 if control requirements are confirmed, otherwise 0. Best=100, Worst=0",
       ssphp.score.threshold.green="99",
       ssphp.score.threshold.orange="-",
       ssphp.score.threshold.red="-"

| eval ssphp.score.color=case('ssphp.score.score'>'ssphp.score.threshold.green',"green",1==1,"red")


`ssphp_use_case_write`

"""
