[ssphp_use_case_dns_dfe_2-0]
cron_schedule = 55 5 * * *
dispatch.earliest_time = 0
dispatch.latest_time = now
enableSched = 1
search = """
| `ssphp_use_case_dns_002`

| fields ssphp_user_arn, UserName, ssphp_all_policies, acceptable_policy_keys

```| stats dc(ssphp_user_arn) as ssphp_number_users, sum(eval(if(isnull(acceptable_policy_keys),1,0))) as ssphp_number_users_without_policy, sum(eval(if(isnull(acceptable_policy_keys),0,1))) as ssphp_number_users_with_policy

| eval ssphp.score.numerator=ssphp_number_users_with_policy,
       ssphp.score.denominator=ssphp_number_users
| eval ssphp.score.score=round('ssphp.score.numerator'*100/'ssphp.score.denominator')
| fillnull value=0 ssphp.score.score

| fields ssphp.score.score, ssphp.score.numerator, ssphp.score.denominator

`ssphp_use_case_write_null_output_override(0)` ```


| makemv ssphp.score.non_compliant_fields
| eval ssphp.score.non_compliant_fields=if(isnull('acceptable_policy_keys'),
                                           'ssphp.score.non_compliant_fields',
                                           mvappend('ssphp.score.non_compliant_fields',"acceptable_policy_keys"))

| eval ssphp.score.numerator=coalesce(mvcount('ssphp.score.non_compliant_fields'),"0"),
       ssphp.score.denominator="1",
       ssphp.score.score=floor(('ssphp.score.denominator'-'ssphp.score.numerator')*100/'ssphp.score.denominator')

| fields ssphp_user_arn, UserName, ssphp_all_policies, acceptable_policy_keys, ssphp.score.score, ssphp.score.numerator, ssphp.score.denominator, ssphp.score.non_compliant_fields

``` ##################### end dashboard query ##################### ```


| stats count as ssphp.score.denominator, 
        sum(eval(if('ssphp.score.score'=100,0,1))) as ssphp.score.numerator
| eval ssphp.score.score=floor(('ssphp.score.denominator'-'ssphp.score.numerator')*100/'ssphp.score.denominator')

`ssphp_use_case_write_null_output_override(0)`


``` ##################### add metadata ##################### ```
| eval SSPHP_RUN=round(now()),
       ssphp.use_case.id="dns_dfe_2-0",

       ssphp.use_case.version.number="5.0.1",
       ssphp.use_case.version.last_changed_date="2024-04-03",
       ssphp.use_case.version.last_changed_by="Ian Pearl"

| eval ssphp.risk.expectancy="5",
       ssphp.risk.impact="5",
       ssphp.score.ciso_priority="1",
       ssphp.score.threshold.green="99",
       ssphp.score.threshold.orange="-",
       ssphp.score.threshold.red="-"

| eval ssphp.score.scoring_narrative="In order to be compliant, the field values must be as follows :~~
acceptable_policy_keys MUST be null"

| eval ssphp.score.color=case('ssphp.score.score'>'ssphp.score.threshold.green',"green",1==1,"red")


``` metadata that only occurs in our own controls, not in CIS controls where it comes from the benchmark lookup```
| eval ssphp.use_case.title="DNS [DfE 2.0]",
       ssphp.source.foundational_system="DNS",
       ssphp.source.service="DNS",
       ssphp.source.service_name="DNS",
       ssphp.benchmark.origin="DfE",
       ssphp.benchmark.control.title="No Policies",
       ssphp.benchmark.control.description="All accounts with access to the DfE AWS DNS servers have 'acceptable' policies applied",
       ssphp.benchmark.control.rationale="All users should have policies associated with their AWS account that are on the agreed 'Policy List'",
       ssphp.benchmark.control.impact="-",
       ssphp.use_case.savedsearch="ssphp_use_case_dns_dfe_2-0"


`ssphp_use_case_write`

"""