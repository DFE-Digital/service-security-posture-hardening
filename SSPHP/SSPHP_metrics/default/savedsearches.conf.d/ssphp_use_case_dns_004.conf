[ssphp_use_case_dns_004]
cron_schedule = 60 * * * *
dispatch.earliest_time = 0
dispatch.latest_time = now
enableSched = 1
search = """
index=test sourcetype="describe_organization"
    [| search index=test sourcetype="describe_organization" | stats max(SSPHP_RUN) as SSPHP_RUN | return SSPHP_RUN]
    
| rex field=Arn "[^:]*:[^:]*:[^:]*:[^:]*:(?<account_id>[^:]*):"
| eval account_id=coalesce(account_id,AccountId)

| eventstats max(_time) as max_time by account_id
| where _time=max_time

| table _time, account_id, *
| stats dc(account_id) as number_of_accounts, sum(eval(if(InOrganization="false",1,0))) as number_of_accounts_not_in_organization
| eval ssphp.score=round(number_of_accounts_not_in_organization*100/number_of_accounts)
| fields ssphp.score

``` add metadata ```
| eval SSPHP_RUN=round(now()),
       ssphp.use_case.id="dns_004",
       ssphp.use_case.description="This use case tests whether all AWS accounts are part of an 'Organisation'",
       ssphp.use_case.version="1.0.0",
       ssphp.use_case.last_changed.date="2023-07-10",
       ssphp.use_case.last_changed.by="Ian Pearl",
       ssphp.use_case.treshhold.red="50",
       ssphp.use_case.treshhold.orange="70",
       ssphp.use_case.treshhold.green="90",
       ssphp.color=case('ssphp.score'<'ssphp.use_case.treshhold.red',"red",'ssphp.score'>'ssphp.use_case.treshhold.green',"green",1==1,"orange")
       
| makejson SSPHP_RUN, ssphp* output=_raw
| fields _raw

```| spath input=json```
| collect output_format=hec testmode=f addinfo=f index="ssphp_metrics"

"""
