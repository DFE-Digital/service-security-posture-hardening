[ssphp_use_case_aad_002]
definition = """
```index=test sourcetype="users.get"
    [| search index=test sourcetype="users.get"
     | stats max(SSPHP_RUN) as SSPHP_RUN
     | return SSPHP_RUN]
| rename id as user_id, displayName as user_display_name
| eval assignedPlans=mvdedup('assignedPlans{}.service')

| join type=outer user_id 
    [| search index=test sourcetype="role_management_assignments.get"
        [| search index=test sourcetype="role_management_assignments.get" | stats max(SSPHP_RUN) as SSPHP_RUN | return SSPHP_RUN]
     | rename principalId as user_id, roleDefinitionId as role_definition_id

     | join type=outer role_definition_id 
         [| search index=test sourcetype="role_management.definitions.get"
             [| search index=test sourcetype="role_management.definitions.get" | stats max(SSPHP_RUN) as SSPHP_RUN | return SSPHP_RUN]
              | rename id as role_definition_id, displayName as role_display_name
              | table role_definition_id, description, role_display_name, rolePermissions{}.allowedResourceActions{}, inheritsPermissionsFrom{}.id, inheritsPermissionsFrom@odata.context, isBuiltIn, isEnabled, isPrivileged, resourceScopes{}]
    ]
| table user_id, user_display_name, isPrivileged
     
| join type=outer user_id max=0
    [| search index=test sourcetype="SSPHP.conditional_access_policy.affected_users"
         [| search index=test sourcetype="SSPHP.conditional_access_policy.affected_users" | stats max(SSPHP_RUN) as SSPHP_RUN | return SSPHP_RUN]
    | rename affected_users{} as user_id, displayName as policy_display_name
    | fillnull value="none" user_id
    | mvexpand user_id
    | table user_id, capId, policy_display_name]

| fields user_id, user_display_name, capId, policy_display_name, isPrivileged
| stats values(isPrivileged) as isPrivileged, list(capId) as capId, list(policy_display_name) as policy_display_name by user_id, user_display_name
| fillnull value="false" isPrivileged
| search isPrivileged="true" AND capId!="484d95fb-43fe-4daa-95a7-9adbcdbd8595"```


index=test sourcetype="SSPHP.conditional_access_policy.affected_users" 
    [| search index=test sourcetype="SSPHP.conditional_access_policy.affected_users" 
    | stats max(SSPHP_RUN) as SSPHP_RUN 
    | return SSPHP_RUN] 
| rename affected_users{}.id as user_id, affected_users{}.displayName as user_display_name, affected_users{}.isPrivileged as isPrivileged, displayName as policy_display_name 
| fillnull value="none" user_id
| eval user=mvzip(user_id, user_display_name), user=mvzip(user, isPrivileged) 
| fields - user_id, user_display_name, isPrivileged 
| mvexpand user 
| rex field=user "(?<user_id>[^,]+),(?<user_display_name>[^,]+),(?<isPrivileged>[^,]+)" 
| table user_id, user_display_name, capId, policy_display_name, isPrivileged 
| sort 0 user_display_name

"""

iseval = 0