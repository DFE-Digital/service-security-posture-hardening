[ssphp_use_case_m365_001_cis_1-1-3]
cron_schedule = */30 * * * *
dispatch.earliest_time = 0
dispatch.latest_time = now
enableSched = 1
search = """
| `ssphp_use_case_msgraph{{environment}}("/v1.0/identity/conditionalAccess/policies")`

| lookup aad_role_definitions.csv role_id as "conditions.users.includeRoles{}"

| eval test1=if(state="enabled",1,0),
       test2=if('conditions.applications.includeApplications{}'="All",1,0),
       test3=if('sessionControls.signInFrequency.isEnabled'="true",1,0),
       test4=if(('sessionControls.signInFrequency.type'="days" AND 'sessionControls.signInFrequency.value'=1)
             OR ('sessionControls.signInFrequency.type'="hours" AND 'sessionControls.signInFrequency.value'<24),1,0),
       test5=if('sessionControls.persistentBrowser.isEnabled'="true",1,0),
       test6=if('sessionControls.persistentBrowser.mode'="never",1,0),
       test7=if(lower(role)="application administrator" AND lower(role)="authentication administrator" AND lower(role)="billing administrator" AND lower(role)="cloud application administrator" AND lower(role)="conditional access administrator" AND lower(role)="exchange administrator" AND lower(role)="global administrator" AND lower(role)="global reader" AND lower(role)="helpdesk administrator" AND lower(role)="password administrator" AND lower(role)="privileged authentication administrator" AND lower(role)="privileged role administrator" AND lower(role)="security administrator" AND lower(role)="sharepoint administrator" AND lower(role)="user administrator",1,0),
       tests=mvappend('tests',
                      "test1=".'test1',
                      "test2=".'test2',
                      "test3=".'test3',
                      "test4=".'test4',
                      "test5=".'test5',
                      "test6=".'test6',
                      "test7=".'test7'),
        numerator=test1+test2+test3+test4+test5+test6+test7,
        ssphp.score.denominator=7,
        score=floor('numerator'*100/'ssphp.score.denominator')
| stats max(score) as ssphp.score.score, max(numerator) as ssphp.score.numerator, values(ssphp.score.denominator) as ssphp.score.denominator

| fields ssphp.score.score, ssphp.score.numerator, ssphp.score.denominator

`ssphp_use_case_write_null_output_override{{environment}}(0)`


``` ##################### add metadata ##################### ```
| eval SSPHP_RUN=round(now()),
       ssphp.use_case.id="m365_001_cis_1-1-3",

       ssphp.use_case.version.number="2.0.1",
       ssphp.use_case.version.last_changed_date="2024-01-05",
       ssphp.use_case.version.last_changed_by="Ian Pearl",
       
       ssphp.microsoft.description=coalesce('description',"-"),
       ssphp.microsoft.implementation_status=coalesce('implementationStatus',"-")

`ssphp_use_case_add_cis_metadata_m365{{environment}}`

```| eval ssphp.use_case.control=coalesce('ssphp.use_case.control','ssphp.cis_benchmark.control.title',"-"),
       ssphp.use_case.description=coalesce('ssphp.use_case.description','ssphp.cis_benchmark.control.description',"-")```
| eval ssphp.use_case.short_description="-",
       ssphp.risk.expectancy="5",
       ssphp.risk.impact="5",
       ssphp.score.ciso_priority="2",
       ssphp.score.scoring_narrative="Score is 100 if control requirements are confirmed, otherwise 0. Best=100, Worst=0",
       ssphp.score.threshold.green="99",
       ssphp.score.threshold.orange="-",
       ssphp.score.threshold.red="-"

| eval ssphp.score.color=case('ssphp.score.score'>'ssphp.score.threshold.green',"green",1==1,"red")

`ssphp_use_case_write{{environment}}`

"""
