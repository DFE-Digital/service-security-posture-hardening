[ssphp_use_case_rollup]
cron_schedule = */5 * * * *
dispatch.earliest_time = 0
dispatch.latest_time = now
enableSched = 1
search = """
`ssphp_summary_index` (ssphp.use_case.id="*") earliest=-2d@d latest=now NOT ssphp.use_case.id="*_000" ssphp.use_case.doomsday=1
    [| search `ssphp_summary_index` (ssphp.use_case.id="*") earliest=-2d@d latest=now NOT ssphp.use_case.id="*_000"  ssphp.use_case.doomsday=1
     | stats max(SSPHP_RUN) as SSPHP_RUN by ssphp.use_case.id
     | eval search_text="(\"ssphp.use_case.id\"=\"".'ssphp.use_case.id'."\" AND SSPHP_RUN=\"".SSPHP_RUN."\")"
     | stats values(search_text) as search_text
     | eval search_text="(".mvjoin(search_text," OR ").")"
    | return $search_text]

| rex field=ssphp.use_case.id "(?<f1>[^_]*)"
| rex field=ssphp.use_case.id "[^_]*_(?<f2>[^_]*)"
| rex field=ssphp.use_case.id "[^_]*_[^_]*_(?<f3>[^_]*)"
| fields ssphp.use_case.id, ssphp.score.score, f1, f2, f3, _time, SSPHP_RUN
| sort 0 ssphp.use_case.id

| appendpipe 
    [| search f3=*
    | stats avg(ssphp.score.score) as ssphp.score.score by f1, f2
    | eval type="L2",
           ssphp.use_case.id=f1."_".f2."_000"
]
| appendpipe 
    [| search NOT f3=*
    | stats avg(ssphp.score.score) as ssphp.score.score by f1
    | eval type="L1",
           ssphp.use_case.id=f1."_000"
]
| eval ssphp.score.score=floor('ssphp.score.score')
| search type=*
| fields _time, SSPHP_RUN, ssphp.use_case.id, ssphp.score.score,f1, f2
| sort 0 ssphp.use_case.id


``` add metadata ```
| eval SSPHP_RUN=round(now()),
       ssphp.use_case.title=if(isnull(f2),upper('f1'." ROLLUP"),upper('f1'." ".'f2'." ROLLUP")),
       ssphp.use_case.short_description="Application Permissions",
       ssphp.use_case.description="This use case is the rolled up number from all the ".if(isnull(f2),upper('f1'),upper('f1'." ".'f2'))." use cases",
       ssphp.use_case.version.number="2.0.0",
       ssphp.use_case.version.last_changed_date="2023-10-05",
       ssphp.use_case.version.last_changed_by="Ian Pearl",
       ssphp.score.threshold.red="-",
       ssphp.score.threshold.orange="-",
       ssphp.score.threshold.green="99",
       ssphp.score.color=case('ssphp.score.score'>'ssphp.score.threshold.green',"green",1==1,"red"),
       ssphp.score.scoring_narrative="Score is calculated as the average of all the constituent ".if(isnull(f2),upper('f1'),upper('f1'." ".'f2'))." scores. Best=100, Worst=0"
       
| fields - f1, f2, f3

`ssphp_use_case_write`

"""
