[ssphp_check_data_sources]
action.email = 1
action.email.include.trigger_time = 1
action.email.inline = 1
action.email.sendresults = 1
action.email.to = Ian.PEARL@education.gov.uk, alex.kinnane@education.gov.uk
alert.suppress = 0
counttype = number of events
cron_schedule = 0 8 * * *
description = Check that data has come in for every Use Case
disabled = 0
dispatch.earliest_time = -1d
dispatch.latest_time = now
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
enableSched = 1
quantity = 0
relation = greater than
request.ui_dispatch_app = SSPHP_metrics

search = """

| rest /servicesNS/-/-/saved/searches splunk_server=local

| search eai:acl.app="{{app}}{{environment}}" AND ```title="ssphp_use_case_m365_004_cis_4-*" ```(title=ssphp_use_case_azure* OR title=ssphp_use_case_m365* OR title=ssphp_use_case_dns* OR title=ssphp_use_case_aad*) AND title!="ssphp_use_case_dns_003"

| eval search_line_1=replace(replace(mvindex(split('search',"
"),0),"\| ",""),"\`","")
| rex field=search_line_1 "^(?<macro_name>[^\(]*)\(\"(?<macro_param>[^\"]*)\"\)"
| eval macro_name=coalesce('macro_name','search_line_1')  ```##############IP 2024-02-19###########################```

| join type=outer macro_name
    [| rest /servicesNS/-/-/admin/macros count=0 splunk_server=local
     | search eai:acl.app="{{app}}{{environment}}"
     | rex field=title "(?<macro_name>[^\(]*)\("
     | eval macro_name=coalesce('macro_name','title')
     | table macro_name, definition]
     
| fields title, macro_name, macro_param, definition

| eval definition=mvindex(split('definition',"
"),0),
       run_search=coalesce(replace('definition',"\`ssphp_metrics_data_index{{environment}}\`","index=\"ssphp_metrics_data\""),'definition'),  ```##############IP 2024-02-19###########################```
       run_search=coalesce(replace('run_search',"\$target_field\$",'macro_param'),'run_search'),
       run_search=replace('run_search',"search ",""),
       run_search=replace('run_search',"\"","")
| rex field=run_search "index=\s*(?<search_index>[^\s]+)\s.*"
| rex field=run_search "sourcetype=\s*(?<search_sourcetype>[^\s|\)]+)"
| rex field=run_search "source=\s*(?<search_source>[^\s|\)]+)"
| rex field=run_search "controlName=\s*(?<search_controlname>[^\s|\)]+)"

| where isnotnull('search_index') AND isnotnull('search_sourcetype')

| fillnull value="*" search_source, search_controlname
| table title, search_index, search_sourcetype, search_source, search_controlname


| map search="search index=\"$search_index$\" sourcetype=\"$search_sourcetype$\" (source=\"$search_source$\" OR NOT source=\"*\") (controlName=\"$search_controlname$\" OR NOT controlName=\"*\") earliest=-30d@d latest=now
                     | stats count by SSPHP_RUN
                     | eval SSPHP_RUN1=strftime(SSPHP_RUN,\"%Y-%m-%d %H:%M:%S\")
                     | fields count, SSPHP_RUN, SSPHP_RUN1
                     | eval title=$title$,
                            run_details=SSPHP_RUN1.\" = \".count,
                            data_details=mvappend(\"index=$search_index$\",\"sourcetype=$search_sourcetype$\",\"source=$search_source$\",\"controlName=$search_controlname$\")
                     | rex mode=sed field=data_details \"s/=\*/=/g\" 
                     | eventstats max(SSPHP_RUN) as max_SSPHP_RUN, avg(count) as avg_count
                     | stats values(data_details) as data_details, list(run_details) as run_details, values(avg_count) as avg_count by title
                     | eval order=1,
                            status=\"data\"
                     
                     | append [| makeresults 
                               | eval status=\"no data!!\",
                                      title=\"$title$\",
                                      order=\"2\",
                                      data_details=mvappend(\"index=$search_index$\",\"sourcetype=$search_sourcetype$\",\"source=$search_source$\",\"controlName=$search_controlname$\")
                               | rex mode=sed field=data_details \"s/=\*/=/g\" 
                               | table title, data_details, status, order]
                     
                     | sort 1 order"
      maxsearches=999

| eval last_run_date=mvindex(run_details,-1)
| rex field=last_run_date "^(?<last_run_date>\d{4}-\d{2}-\d{2})\s[^=]*=\s(?<last_run_count>\d*)$"
| eval today_date=strftime(now(),"%Y-%m-%d"),
       upper_avg_count=avg_count*10,
       lower_avg_count=avg_count*0.7

| where 'last_run_date'!='today_date' OR 'last_run_count'<'lower_avg_count' OR 'last_run_count'>'upper_avg_count' OR 'last_run_count'=0 OR 'status'="no data!!"


``` sort the lines properly ```
| rex field=title "^ssphp_use_case_(?<fs>[^_]*)_(?<group>\d{3})_(?<source>cis|dfe)_(?<cn1>[\d]+)-(?<cn2>[\d]+)(-)?(?<cn3>[\d]*)$"
| eval cn3=if(cn3="","00",'cn3'),
       cn1="00".'cn1', cn1=substr('cn1',len('cn1')-1,2),
       cn2="00".'cn2', cn2=substr('cn2',len('cn2')-1,2)
| sort 0 fs, group, source, cn1, cn2, cn3

| table title, data_details, status, run_details, avg_count, last_run_count, last_run_date, lower_avg_count, upp_avg_count, today_date

"""