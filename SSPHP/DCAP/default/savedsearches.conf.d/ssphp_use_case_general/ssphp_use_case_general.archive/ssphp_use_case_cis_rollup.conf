[ssphp_use_case_cis_rollup]
cron_schedule = */15 * * * *
dispatch.earliest_time = 0
dispatch.latest_time = now
enableSched = 1
search = """
| inputlookup cis_controls_rollups.csv
| rename use_case as ssphp.use_case.id

| lookup cis_controls_metadata.csv safeguard

| join type=outer ssphp.use_case.id
    [| search `ssphp_summary_index` ssphp.use_case.id="*" earliest=-1d@d latest=now NOT ssphp.use_case.id="*_000"
        [| search `ssphp_summary_index` ssphp.use_case.id="*" earliest=-1d@d latest=now NOT ssphp.use_case.id="*_000"
         | stats max(SSPHP_RUN) as SSPHP_RUN by ssphp.use_case.id
         | eval search_text="(\"ssphp.use_case.id\"=\"".'ssphp.use_case.id'."\" AND SSPHP_RUN=\"".SSPHP_RUN."\")"
         | stats values(search_text) as search_text
         | eval search_text="(".mvjoin(search_text," OR ").")"
         | return $search_text]
         
    | eval weighting='ssphp.risk.expectancy'*'ssphp.risk.impact'*100/25,
           weighted_score='ssphp.score.score'*'weighting'/100
    | fields control, safeguard, title, description, ssphp.use_case.id, ssphp.score.score, ssphp.score.color, weighting, weighted_score, ssphp.cis_benchmark.controls.ig1, ssphp.cis_benchmark.controls.v8]
| eval ssphp.cis_benchmark.controls.v8=split('ssphp.cis_benchmark.controls.v8',"
")
| search ssphp.score.score=* AND (ssphp.cis_benchmark.controls.ig1="TRUE" OR ssphp.use_case.id="dns*" OR ssphp.use_case.id="aad*")
| table foundational_system, control, safeguard, title, description, ssphp.use_case.id, ssphp.score.score, ssphp.score.color, weighting, weighted_score, ssphp.cis_benchmark.controls.ig1, ssphp.cis_benchmark.controls.v8


| appendpipe
    [| stats values(title) as title, values(description) as description, values(ssphp.use_case.id) as use_case, sum(weighted_score) as total_weighted_score, sum(weighting) as total_weightings, list(ssphp.score.score) as scores, list(weighting) as weightings, list(weighted_score) as weighted_scores, avg(ssphp.score.score) as average_score, values(ssphp.score.color) as colors, values(ssphp.cis_benchmark.controls.v8) as ig1_controls by foundational_system, control, safeguard
    | eval ssphp.score.score='total_weighted_score'*100/'total_weightings',
           safeguard=safeguard."_000"]

| appendpipe
    [| search safeguard!="*_000"
     | stats values(title) as title, values(description) as description, values(ssphp.use_case.id) as use_case, sum(weighted_score) as total_weighted_score, sum(weighting) as total_weightings, list(ssphp.score.score) as scores, list(weighting) as weightings, list(weighted_score) as weighted_scores, avg(ssphp.score.score) as average_score, values(ssphp.score.color) as colors, values(ssphp.cis_benchmark.controls.v8) as ig1_controls by foundational_system, control
    | eval control=control."_000"]

| appendpipe
    [| search safeguard!="*_000" AND safeguard!="*_000"
     | stats values(title) as title, values(description) as description, values(ssphp.use_case.id) as use_case, sum(weighted_score) as total_weighted_score, sum(weighting) as total_weightings, list(ssphp.score.score) as scores, list(weighting) as weightings, list(weighted_score) as weighted_scores, avg(ssphp.score.score) as average_score, values(ssphp.score.color) as colors by foundational_system
    | eval foundational_system=foundational_system."_000"]

| appendpipe
    [| search foundational_system!="*_000" AND safeguard!="*_000" AND safeguard!="*_000"
     | stats values(title) as title, values(description) as description, values(ssphp.use_case.id) as use_case, sum(weighted_score) as total_weighted_score, sum(weighting) as total_weightings, list(ssphp.score.score) as scores, list(weighting) as weightings, list(weighted_score) as weighted_scores, avg(ssphp.score.score) as average_score, values(ssphp.score.color) as colors, values(ssphp.cis_benchmark.controls.v8) as ig1_controls
    | eval foundational_system="all_000"]
    
    
| eval ssphp.score.score=floor('total_weighted_score'*100/'total_weightings')
| search (foundational_system="*_000" OR control="*_000" OR safeguard="*_000")


``` add metadata ```
| eval SSPHP_RUN=round(now()),
       ssphp.use_case.id=case(like(foundational_system,"%_000"),'foundational_system',
                              like(control,"%_000"),'foundational_system'."_".control,
                              like(safeguard,"%_000"),'foundational_system'."_".safeguard,
                              1==1,"Whoops"),
       ssphp.use_case.title='title',
       ssphp.use_case.short_description=case(like(foundational_system,"%_000"),"Rollup up score for Founational System ".foundational_system,
                                             like(control,"%_000"),"Rollup up score for Control ".control,
                                             like(control,"%_000"),"Rollup up score for Control ".control,
                                             like(safeguard,"%_000"),"Rollup up score for Safeguard ".safeguard,
                                             1==1,"Whoops"),
       ssphp.use_case.short_description=replace('ssphp.use_case.short_description',"_000",""),
       ssphp.use_case.description='description',
       ssphp.use_case.version.number="3.0.0",
       ssphp.use_case.version.last_changed_date="2023-10-12",
       ssphp.use_case.version.last_changed_by="Ian Pearl",
       ssphp.cis_benchmark.control=replace(control,"_000",""),
       ssphp.cis_benchmark.safeguard=replace(safeguard,"_000",""),
       ssphp.cis_benchmark.controls.v8='ig1_controls',
       ssphp.score.threshold.red="-",
       ssphp.score.threshold.orange="-",
       ssphp.score.threshold.green="99",
       ssphp.score.color=case('ssphp.score.score'>'ssphp.score.threshold.green',"green",1==1,"red"),
       ssphp.score.scoring_narrative="Score is calculated as the average of all the constituent scores : ".mvjoin('use_case',", ").". Best=100, Worst=0"


`ssphp_use_case_write`


"""
