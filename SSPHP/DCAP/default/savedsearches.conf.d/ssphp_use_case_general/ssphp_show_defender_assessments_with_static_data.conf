[ssphp_show_defender_assessments_with_static_data{{environment}}]
cron_schedule = 0 8 * * *
disabled = 0
dispatch.earliest_time = 0
dispatch.latest_time = now

search = """

index="ssphp_metrics_data" sourcetype="azure_resource_graph" type="microsoft.security/assessments*" earliest=-1d@d latest=now 
    NOT (properties.resourceDetails.ResourceType="subscription" OR properties.statusPerInitiative{}.assessmentStatus.code="NotApplicable")
    
    [| search index="ssphp_metrics_data" sourcetype="azure_resource_graph" type="microsoft.security/assessments*" earliest=-1d@d latest=now
         NOT (properties.resourceDetails.ResourceType="subscription" OR properties.statusPerInitiative{}.assessmentStatus.code="NotApplicable")
      | stats max(SSPHP_RUN) as SSPHP_RUN
      | eval SSPHP_RUN=substr('SSPHP_RUN',0,5)."*"
      | return SSPHP_RUN]
      

| eval id=lower('properties.resourceDetails.ResourceId')

``` Add our SSPHP service tags from the YAML ```
`ssphp_add_service_metadata`


``` Only show the Assessments for which the ResouceGroups have YAML files```
| search [| search index="ssphp_metrics_data" sourcetype="metadata_azure" type="AzureResourceGroup" 
                [| search index="ssphp_metrics_data" sourcetype="metadata_azure" type="AzureResourceGroup" 
                 | stats max(SSPHP_RUN) as SSPHP_RUN 
                 | return SSPHP_RUN]
          | rename service.name as ssphp_service_name
          | stats values(ssphp_service_name) as ssphp_service_name
          | eval search_text="(ssphp_service_name=\"".mvjoin('ssphp_service_name',"\" OR ssphp_service_name=\"")."\")"
          | return $search_text]


```Get the Policy Related Info - the CIS benchmark stuff```
| where isnotnull('properties.metadata.policyDefinitionId')
| eval properties.metadata.policyDefinitionId=lower('properties.metadata.policyDefinitionId')
| rex field=properties.metadata.policyDefinitionId "^/providers/microsoft.authorization/policydefinitions/(?<ssphp_policy_id>.*)$"

| join type=outer ssphp_policy_id
    [| search index="ssphp_metrics_data" sourcetype="cis_policy_mapping" earliest=-7d@d latest=now
         [| search index="ssphp_metrics_data" sourcetype="cis_policy_mapping" earliest=-7d@d latest=now
          | stats max(SSPHP_RUN) as SSPHP_RUN
          | return SSPHP_RUN]
     | rename policy_id as ssphp_policy_id
     | table ssphp_policy_id, cis_benchmark{}

     | lookup cis_benchmark_v8_doc_azure.csv ssphp.cis_benchmark.control.number as cis_benchmark{}]

| eval  lf="
",
        ssphp.cis_benchmark.control.description=split('ssphp.cis_benchmark.control.description','lf'),
        ssphp.cis_benchmark.control.group=split('ssphp.cis_benchmark.control.group','lf'),
        ssphp.cis_benchmark.control.impact=split('ssphp.cis_benchmark.control.impact','lf'),
        ssphp.cis_benchmark.control.level=split('ssphp.cis_benchmark.control.level','lf'),
        ssphp.cis_benchmark.control.profile_applicability=split('ssphp.cis_benchmark.control.profile_applicability','lf'),
        ssphp.cis_benchmark.control.rationale=split('ssphp.cis_benchmark.control.rationale','lf'),
        ssphp.cis_benchmark.control.title=split('ssphp.cis_benchmark.control.title','lf'),
        ssphp.cis_benchmark.controls.ig1=split('ssphp.cis_benchmark.controls.ig1','lf'),
        ssphp.cis_benchmark.controls.ig2=split('ssphp.cis_benchmark.controls.ig2','lf'),
        ssphp.cis_benchmark.controls.ig3=split('ssphp.cis_benchmark.controls.ig3','lf'),
        ssphp.cis_benchmark.controls.v8=split('ssphp.cis_benchmark.controls.v8','lf'),
        ssphp.cis_benchmark.document.date=split('ssphp.cis_benchmark.document.date','lf'),
        ssphp.cis_benchmark.document.name=split('ssphp.cis_benchmark.document.name','lf'),
        ssphp.cis_benchmark.document.version=split('ssphp.cis_benchmark.document.version','lf'),
        ssphp.cis_benchmark.version=split('ssphp.cis_benchmark.version','lf'),
        ssphp.metadata.last_updated_by=split('ssphp.metadata.last_updated_by','lf'),
        ssphp.metadata.last_updated_date=split('ssphp.metadata.last_updated_date','lf'),
        ssphp.use_case.foundational_system=split('ssphp.use_case.foundational_system','lf'),
        ssphp.use_case.framework.ig_1=split('ssphp.use_case.framework.ig_1','lf'),
        ssphp.use_case.framework.ig_2=split('ssphp.use_case.framework.ig_2','lf'),
        ssphp.use_case.framework.ig_3=split('ssphp.use_case.framework.ig_3','lf'),
        ssphp.use_case.id=split('ssphp.use_case.id','lf'),
        ssphp.use_case.savedsearch=split('ssphp.use_case.savedsearch','lf'),
        ssphp.use_case.title=split('ssphp.use_case.title','lf')

| eval SSPHP_RUN=now()

| table SSPHP_RUN
``` Assessment Fields ```
        properties.metadata.displayName
        properties.status.code
        properties.metadata.severity
        properties.metadata.categories{}
        properties.metadata.description
        properties.metadata.remediationDescription
        properties.metadata.tactics{}
        properties.metadata.techniques{}
        properties.metadata.threats{}
        properties.status.firstEvaluationDate
        properties.status.statusChangeDate

``` Resource Fields ```
        ```resourceId, ```
        tenantId
        subscriptionId
        resourceGroup
        properties.resourceDetails.ResourceName
        properties.resourceDetails.ResourceType
        ```ssphp_id```

``` Policy Fields ```
        ```properties.metadata.policyDefinitionId, ```
        ssphp_policy_id
        cis_benchmark{}

        ``` Service Fields ```
        ssphp_service_id
        ssphp_service_name
        ssphp_service_risk_profile
        ssphp_service_display_name
        ssphp_service_division
        ssphp_service_group
        ssphp_service_portfolio
        ssphp_tags

``` CIS Benchmark Fields ```
        ssphp.cis_benchmark.control.description
        ssphp.cis_benchmark.control.group
        ssphp.cis_benchmark.control.impact
        ssphp.cis_benchmark.control.level
        ssphp.cis_benchmark.control.profile_applicability
        ssphp.cis_benchmark.control.rationale
        ssphp.cis_benchmark.control.title
        ssphp.cis_benchmark.controls.ig1
        ssphp.cis_benchmark.controls.ig2
        ssphp.cis_benchmark.controls.ig3
        ssphp.cis_benchmark.controls.v8
        ssphp.cis_benchmark.document.date
        ssphp.cis_benchmark.document.name
        ssphp.cis_benchmark.document.version
        ssphp.cis_benchmark.version
        ssphp.metadata.last_updated_by
        ssphp.metadata.last_updated_date
        ssphp.use_case.foundational_system
        ssphp.use_case.framework.ig_1
        ssphp.use_case.framework.ig_2
        ssphp.use_case.framework.ig_3
        ssphp.use_case.id
        ssphp.use_case.savedsearch
        ssphp.use_case.title
        
```| where NOT (mvdedup('ssphp.use_case.framework.ig_1')="-" OR isnull('ssphp.use_case.framework.ig_1'))```   ``` IG1 ```
```| where 'properties.status.code'="Unhealthy"```
```| where 'ssphp_service_id'="S194"```


``` TO USE THE OUTPUT FROM THIS SAVEDSEARCH
| loadjob savedsearch="nobody:{{app}}{{environment}}:ssphp_show_defender_assessments_with_static_data{{environment}}"
```

"""