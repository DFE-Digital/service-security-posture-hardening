[ssphp_use_case_github_001_cis_1-1-3{{environment}}]
cron_schedule = 55 5 * * *
dispatch.earliest_time = 0
dispatch.latest_time = now
enableSched = 1
search = """

| `ssphp_use_case_github{{environment}}("*/branches/*/protection")`

| rename required_pull_request_reviews.required_approving_review_count as required_approving_review_count
| fields full_repo_name, url, repo, ssphp_http_status, required_approving_review_count

`ssphp_use_case_add_service_metadata_github{{environment}}` 

| fillnull value=0 required_approving_review_count
| makemv ssphp.score.non_compliant_fields
| eval ssphp.score.non_compliant_fields=if(('ssphp_http_status'!="200" OR
                                                 'required_approving_review_count'<2 OR
                                                 isnull('ssphp_http_status') OR
                                                 isnull('required_approving_review_count')),
                                            mvappend('ssphp.score.non_compliant_fields',"required_approving_review_count"),
                                            'ssphp.score.non_compliant_fields')

| eval ssphp.score.numerator=coalesce(mvcount('ssphp.score.non_compliant_fields'),"0"),
       ssphp.score.denominator="1",
       ssphp.score.score=floor(('ssphp.score.denominator'-'ssphp.score.numerator')*100/'ssphp.score.denominator')

| rename service.name as ssphp.source.service
| fields ssphp.source.service, service.display_name, full_repo_name, ssphp_http_status, required_approving_review_count, ssphp.score.non_compliant_fields, ssphp.score.score


``` ##################### end dashboard query ##################### ```
| stats count as ssphp.score.denominator,
        sum(eval(if('ssphp.score.score'<100,1,0))) as ssphp.score.numerator, 
        values(service.display_name) as service.display_name 
        by ssphp.source.service
| eval ssphp.score.score=if('ssphp.score.numerator'>0,"0","100")
       

``` ##################### add metadata ##################### ```
| eval SSPHP_RUN=round(now())

|eval  ssphp.use_case.id="github_001_cis_1-1-3",
       ssphp.use_case.title="Github [CIS 1.1.3]",
       ssphp.use_case.category="SDLC",
       ssphp.use_case.version.number="1.0.7",
       ssphp.use_case.version.last_changed_date="2024-04-23",
       ssphp.use_case.version.last_changed_by="Sam Pritchard",
       ssphp.use_case.savedsearch="ssphp_use_case_github_001_cis_1-1-3{{environment}}"

| eval ssphp.risk.expectancy="5",
       ssphp.risk.impact="5"

| eval ssphp.score.ciso_priority="1",
       ssphp.score.threshold.green="99",
       ssphp.score.threshold.orange="-",
       ssphp.score.threshold.red="-",
       ssphp.score.color=case('ssphp.score.score'>'ssphp.score.threshold.green',"green",1==1,"red"),
       ssphp.score.scoring_narrative="In order to be compliant, repositories must have branch protection on and the required approver count to be 2 or more."

| eval ssphp.source.service_name='service.display_name',
       ssphp.source.foundational_system="GITHUB",
       ssphp.source.foundational_system_name="SDLC"


| search ssphp.source.service!="-"

`ssphp_use_case_add_cis_metadata_github{{environment}}`

`ssphp_use_case_write{{environment}}`

"""