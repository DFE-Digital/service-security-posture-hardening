[ssphp_use_case_dns_001_cis_1-12{{environment}}]
cron_schedule = 10 5 * * *
dispatch.earliest_time = 0
dispatch.latest_time = now
enableSched = 1
search = """
| `ssphp_use_case_aws{{environment}}("iam_GetCredentialReport")`

| fields arn, password_enabled, password_last_used, password_last_changed, access_key_1_active, access_key_1_last_used_date, access_key_1_last_rotated, access_key_2_active, access_key_2_last_used_date, access_key_2_last_rotated

| makemv ssphp.score.non_compliant_fields

| eval date_now_epoch=round(now())

| where password_enabled="true" OR access_key_1_active="true" OR access_key_2_active="true"

```Deal with Passwords```
| eval password_last_used_epoch=round(strptime('password_last_used',"%Y-%m-%dT%H:%M:%S+00:00")),
       password_last_changed_epoch=round(strptime('password_last_changed',"%Y-%m-%dT%H:%M:%S+00:00")),
       password_date_epoch=coalesce('password_last_used_epoch','password_last_changed_epoch'),
       password_days=floor(('date_now_epoch'-'password_date_epoch')/60/60/24),
       password_compliant=case(password_enabled="false",1,password_enabled="true" AND password_days<=45,1,1==1,0),
       ssphp.score.non_compliant_fields=if('password_compliant'=1, 'ssphp.score.non_compliant_fields', mvappend('ssphp.score.non_compliant_fields',"password_enabled","password_last_used","password_last_changed","password_days"))

```Deal with Access Key 1```
| eval access_key_1_last_used_date_epoch=round(strptime('access_key_1_last_used_date',"%Y-%m-%dT%H:%M:%S+00:00")),
       access_key_1_last_rotated_epoch=round(strptime('access_key_1_last_rotated',"%Y-%m-%dT%H:%M:%S+00:00")),
       access_key_1_date_epoch=coalesce('access_key_1_last_used_date_epoch','access_key_1_last_rotated_epoch'),
       access_key_1_days=floor(('date_now_epoch'-'access_key_1_date_epoch')/60/60/24),
       access_key_1_compliant=case(access_key_1_active="false",1,access_key_1_active="true" AND access_key_1_days<=45,1,1==1,0),
       ssphp.score.non_compliant_fields=if('access_key_1_compliant'=1, 'ssphp.score.non_compliant_fields', mvappend('ssphp.score.non_compliant_fields',"access_key_1_active","access_key_1_last_used_date","access_key_1_last_rotated","access_key_1_days"))

```Deal with Access Key 2```
| eval access_key_2_last_used_date_epoch=round(strptime('access_key_2_last_used_date',"%Y-%m-%dT%H:%M:%S+00:00")),
       access_key_2_last_rotated_epoch=round(strptime('access_key_2_last_rotated',"%Y-%m-%dT%H:%M:%S+00:00")),
       access_key_2_date_epoch=coalesce('access_key_2_last_used_date_epoch','access_key_1_last_rotated_epoch'),
       access_key_2_days=floor(('date_now_epoch'-'access_key_2_date_epoch')/60/60/24),
       access_key_2_compliant=case(access_key_2_active="false",1,access_key_2_active="true" AND access_key_2_days<=45,1,1==1,0),
       ssphp.score.non_compliant_fields=if('access_key_2_compliant'=1, 'ssphp.score.non_compliant_fields', mvappend('ssphp.score.non_compliant_fields',"access_key_2_active","access_key_2_last_used_date","access_key_2_last_rotated","access_key_2_days"))
       
| eval ssphp.score.numerator='password_compliant'+'access_key_1_compliant'+'access_key_2_compliant',
       ssphp.score.denominator=3,
       ssphp.score.score=floor('ssphp.score.numerator'*100/'ssphp.score.denominator')

| fields arn,
        password_enabled, password_last_used, password_last_changed, password_days, ```password_compliant,```
        access_key_1_active, access_key_1_last_used_date, access_key_1_last_rotated, access_key_1_days, ```access_key_1_compliant,```
        access_key_2_active, access_key_2_last_used_date, access_key_2_last_rotated, access_key_2_days, ```access_key_2_compliant,```
        ssphp.score.score, ssphp.score.numerator, ssphp.score.denominator,
        ssphp.score.non_compliant_fields

``` ##################### end dashboard query ##################### ```


| stats count as ssphp.score.denominator, 
        sum(eval(if('ssphp.score.score'=100,0,1))) as ssphp.score.numerator
| eval ssphp.score.score=floor(('ssphp.score.denominator'-'ssphp.score.numerator')*100/'ssphp.score.denominator')

`ssphp_use_case_write_null_output_override{{environment}}(0)`


``` ##################### add metadata ##################### ```
| eval SSPHP_RUN=round(now()),
       ssphp.use_case.id="dns_001_cis_1-12",

       ssphp.use_case.version.number="2.0.1",
       ssphp.use_case.version.last_changed_date="2024-04-03",
       ssphp.use_case.version.last_changed_by="Ian Pearl",
       
       ssphp.microsoft.description=coalesce('description',"-"),
       ssphp.microsoft.implementation_status=coalesce('implementationStatus',"-")

`ssphp_use_case_add_cis_metadata_dns{{environment}}`

| eval ssphp.risk.expectancy="5",
       ssphp.risk.impact="5",
       ssphp.score.ciso_priority="2",
       ssphp.score.threshold.green="99",
       ssphp.score.threshold.orange="-",
       ssphp.score.threshold.red="-"

| eval ssphp.source.service="DNS",
       ssphp.source.service_name="DNS",
       ssphp.use_case.savedsearch="ssphp_use_case_dns_001_cis_1-12{{environment}}"


| eval ssphp.score.scoring_narrative="In order to be compliant, every password or access key that is enabled must have been either used or been rotated within the past 45 days"

| eval ssphp.score.color=case('ssphp.score.score'>'ssphp.score.threshold.green',"green",1==1,"red")


`ssphp_use_case_write{{environment}}`

"""
