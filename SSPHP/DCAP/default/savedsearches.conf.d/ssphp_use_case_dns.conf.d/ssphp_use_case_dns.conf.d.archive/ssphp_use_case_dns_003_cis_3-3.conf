[ssphp_use_case_dns_003_cis_3-3]
cron_schedule = */30 * * * *
dispatch.earliest_time = 0
dispatch.latest_time = now
enableSched = 1
search = """
| `ssphp_use_case_aws{{environment}}("s3_GetBucketPolicy")`

| spath path=Statement{} output=statements
| fields BucketName, statements
| mvexpand statements
| spath input=statements

| eval principals=mvappend('Principal', 'Principal.AWS', 'Principal.AWS{}'),
       conditions=mvappend('Condition.StringEquals.aws:PrincipalOrgID', 'Condition.StringEqualsIgnoreCase.aws:PrincipalOrgID')
       
| join type=outer BucketName 
    [| `ssphp_use_case_aws{{environment}}("s3_GetBucketAcl")`

     | fields BucketName, TrailArn, Grants{}.Grantee.Uri, Grants{}.Permission

     | eval is_bad_acl=if(match('Grants{}.Grantee.Uri',"^http://acs.amazonaws.com/groups/global/AllUsers$") OR match('Grants{}.Grantee.Uri',"^http://acs.amazonaws.com/groups/global/AuthenticatedUsers$"),1,0)
     | fields BucketName, is_bad_acl]

| stats values(BucketName) as all_buckets, values(eval(if((Effect="Allow" AND match('principals',"^[\s\S]*\*[\s\S]*$") AND isnull(conditions)) OR is_bad_acl=1,BucketName,null()))) as bad_buckets

| eval ssphp.score.denominator=mvcount('all_buckets'),
       ssphp.score.numerator='ssphp.score.denominator'-mvcount('bad_buckets'),
       ssphp.score.score=floor('ssphp.score.numerator'*100/'ssphp.score.denominator')
       
| fillnull value=0 ssphp.score.score, ssphp.score.numerator, ssphp.score.denominator
       
| fields ssphp.score.score, ssphp.score.numerator, ssphp.score.denominator

`ssphp_use_case_write_null_output_override{{environment}}(0)`


``` ##################### add metadata ##################### ```
| eval SSPHP_RUN=round(now()),
       ssphp.use_case.id="dns_003_cis_3-3",

       ssphp.use_case.version.number="1.0.1",
       ssphp.use_case.version.last_changed_date="2024-01-09",
       ssphp.use_case.version.last_changed_by="Ian Pearl",
       
       ssphp.microsoft.description=coalesce('description',"-"),
       ssphp.microsoft.implementation_status=coalesce('implementationStatus',"-")

`ssphp_use_case_add_cis_metadata_dns{{environment}}`

| eval ssphp.risk.expectancy="5",
       ssphp.risk.impact="5",
       ssphp.score.ciso_priority="1",
       ssphp.score.scoring_narrative="Score is 100 if control requirements are confirmed, otherwise 0. Best=100, Worst=0",
       ssphp.score.threshold.green="99",
       ssphp.score.threshold.orange="-",
       ssphp.score.threshold.red="-"

| eval ssphp.score.color=case('ssphp.score.score'>'ssphp.score.threshold.green',"green",1==1,"red")


`ssphp_use_case_write{{environment}}`

"""
