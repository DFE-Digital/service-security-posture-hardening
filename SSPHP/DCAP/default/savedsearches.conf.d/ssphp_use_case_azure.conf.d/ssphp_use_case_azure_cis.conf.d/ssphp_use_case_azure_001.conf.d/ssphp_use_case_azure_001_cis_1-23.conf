[ssphp_use_case_azure_001_cis_1-23{{environment}}]
cron_schedule = 10 6 * * *
dispatch.earliest_time = 0
dispatch.latest_time = now
enableSched = 1
search = """
| `ssphp_use_case_azure_rest("SSPHP.azure.role_definitions")`

| fields properties.type, properties.assignableScopes{}, properties.permissions{}.actions{}

```| eval ssphp.score.numerator=if('properties.type'="CustomRole",1,0),
       ssphp.score.numerator=if('properties.assignableScopes{}'="/" OR match('properties.assignableScopes{}',"^\/subscriptions\/[0-9a-f]+-[0-9a-f]+-[0-9a-f]+-[0-9a-f]+-[0-9a-f]+$"),'ssphp.score.numerator'+1,'ssphp.score.numerator'),
       ssphp.score.numerator=if(match('properties.permissions{}.actions{}',"^\*$"),'ssphp.score.numerator'+1,'ssphp.score.numerator'),
       ssphp.score.denominator="3"
| stats count as ssphp.score.denominator, sum(eval(if('ssphp.score.numerator'=3,1,0))) as ssphp.score.numerator
| eval ssphp.score.score=floor(100-('ssphp.score.numerator'*100/'ssphp.score.denominator'))

| fields ssphp.score.score, ssphp.score.numerator, ssphp.score.denominator

`ssphp_use_case_write_null_output_override(0)` ```


| makemv ssphp.score.non_compliant_fields
| eval ssphp.score.non_compliant_fields=if('properties.type'="CustomRole",
                                           'ssphp.score.non_compliant_fields',
                                           mvappend('ssphp.score.non_compliant_fields',"properties.type")),
       ssphp.score.non_compliant_fields=if('properties.assignableScopes{}'="/" OR match('properties.assignableScopes{}',"^\/subscriptions\/[0-9a-f]+-[0-9a-f]+-[0-9a-f]+-[0-9a-f]+-[0-9a-f]+$"),
                                           'ssphp.score.non_compliant_fields',
                                           mvappend('ssphp.score.non_compliant_fields',"properties.assignableScopes{}")),
       ssphp.score.non_compliant_fields=if(match('properties.permissions{}.actions{}',"^\*$"),
                                           'ssphp.score.non_compliant_fields',
                                           mvappend('ssphp.score.non_compliant_fields',"properties.permissions{}.actions{}"))


| eval ssphp.score.numerator=coalesce(mvcount('ssphp.score.non_compliant_fields'),"0"),
       ssphp.score.denominator="3",
       ssphp.score.score=floor(('ssphp.score.denominator'-'ssphp.score.numerator')*100/'ssphp.score.denominator')

| fields properties.type, properties.assignableScopes{}, properties.permissions{}.actions{}, ssphp.score.score, ssphp.score.numerator, ssphp.score.denominator, ssphp.score.non_compliant_fields

``` ##################### end dashboard query ##################### ```


| stats max(ssphp.score.score) as ssphp.score.score, min(ssphp.score.numerator) as ssphp.score.numerator, max(ssphp.score.denominator) as ssphp.score.denominator

`ssphp_use_case_write_null_output_override(0)`


``` ##################### add metadata ##################### ```
| eval SSPHP_RUN=round(now()),
       ssphp.use_case.id="azure_001_cis_1-23",

       ssphp.use_case.version.number="3.0.1",
       ssphp.use_case.version.last_changed_date="2024-04-03",
       ssphp.use_case.version.last_changed_by="Ian Pearl",
       
       ssphp.microsoft.description=coalesce('description',"-"),
       ssphp.microsoft.implementation_status=coalesce('implementationStatus',"-")

`ssphp_use_case_add_cis_metadata_azure`

| eval ssphp.risk.expectancy="5",
       ssphp.risk.impact="5",
       ssphp.score.ciso_priority="1",
       ssphp.score.threshold.green="99",
       ssphp.score.threshold.orange="-",
       ssphp.score.threshold.red="-"

| eval ssphp.source.service="AZURE",
       ssphp.source.service_name="AZURE",
       ssphp.use_case.savedsearch="ssphp_use_case_azure_001_cis_1-23{{environment}}"


| eval ssphp.score.scoring_narrative="In order to be compliant, the field values must all be as follows :~~
properties.type = 'CustomRole'~~
properties.assignableScopes{} = '/' OR be a subscription GUID~~
properties.permissions{}.actions{} = '*'"

| eval ssphp.score.color=case('ssphp.score.score'>'ssphp.score.threshold.green',"green",1==1,"red")


`ssphp_use_case_write`

"""
