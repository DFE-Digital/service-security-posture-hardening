[ssphp_use_case_cis_rollup_m365(5)]
definition = """

`ssphp_summary_index{{environment}}` ssphp.use_case.id="m365*" ssphp.use_case.id!="*_000" earliest=-1d@d latest=now
                      ssphp.cis_benchmark.control.level="$level$" 
                      ssphp.cis_benchmark.controls.ig1="$ig1$"
                      ssphp.cis_benchmark.controls.ig2="$ig2$"
                      ssphp.cis_benchmark.controls.ig3="$ig3$"
    [| search `ssphp_summary_index{{environment}}` ssphp.use_case.id="m365*" ssphp.use_case.id!="*_000" earliest=-1d@d latest=now
      | stats max(SSPHP_RUN) as SSPHP_RUN by ssphp.use_case.id
      | eval search_text="(\"ssphp.use_case.id\"=\"".'ssphp.use_case.id'."\" AND SSPHP_RUN=\"".SSPHP_RUN."\")"
      | stats values(search_text) as search_text
      | eval search_text="(".mvjoin(search_text," OR ").")"
      | return $search_text]
      
| fields ssphp.*


``` Eliminate all the Use Cases which have a current status set to "exclude" ```
| join type=outer ssphp.use_case.id
    [| search `ssphp_summary_index{{environment}}` ssphp.type="exclusion" earliest=0 latest=now
     | sort 0 - SSPHP_RUN
     | eval ssphp.dfe_benchmark.exclusion.status=case('ssphp.dfe_benchmark.exclusion.status'="TRUE","exclude",
                                                      'ssphp.dfe_benchmark.exclusion.status'="FALSE","include",
                                                      1==1,'ssphp.dfe_benchmark.exclusion.status'),
       ssphp.dfe_benchmark.exclusion.updated=strftime(SSPHP_RUN,"%Y-%m-%d %H:%M:%S")
     | stats list(ssphp.dfe_benchmark.exclusion.*) as *, max(ssphp.dfe_benchmark.exclusion.updated) as last_updated by ssphp.use_case.id
     | eval current_status=mvindex(status,mvfind(updated,'last_updated'))
     | sort 0 ssphp.use_case.id
     | fields ssphp.use_case.id, current_status]

| fillnull value="include" current_status
| search current_status="$exclude_status$"
| fields ssphp.*


| eval weighting='ssphp.risk.expectancy'*'ssphp.risk.impact'*100/25,
       weighted_score='ssphp.score.score'*'weighting'/100
       
| fields ssphp.use_case.id, ssphp.score.score, ssphp.score.color, weighting, weighted_score
| rex field=ssphp.use_case.id "^(?<grouping>m365_[^_]*)_.*"


| appendpipe 
    [| stats sum(weighted_score) as total_weighted_score,
             sum(weighting) as total_weightings,
             list(ssphp.use_case.id) as ssphp.use_cases.id,
             list(ssphp.score.score) as ssphp.use_cases.score,
             list(ssphp.score.color) as ssphp.use_cases.color
             by grouping
     | eval ssphp.use_case.id=grouping."_000",
            ssphp.score.score=floor('total_weighted_score'*100/'total_weightings'),
            ssphp.use_case.title="Rollup Metrics for ".upper(grouping)]
            
| appendpipe 
    [| stats sum(weighted_score) as total_weighted_score,
             sum(weighting) as total_weightings,
             list(ssphp.use_case.id) as ssphp.use_cases.id,
             list(ssphp.score.score) as ssphp.use_cases.score,
             list(ssphp.score.color) as ssphp.use_cases.color
     | eval ssphp.use_case.id="m365_000",
            ssphp.score.score=floor('total_weighted_score'*100/'total_weightings'),
            ssphp.use_case.title="Rollup Metrics for M365"]
            
| search ssphp.use_case.id="*_000"

| rename total_weighted_score as ssphp.score.numerator,
         total_weightings as ssphp.score.denominator

| eval ssphp.use_cases=mvzip(mvzip('ssphp.use_cases.id','ssphp.use_cases.score',"="),'ssphp.use_cases.color',"|")

| fields ssphp.use_case.id, ssphp.score.score, ssphp.score.numerator, ssphp.score.denominator, ssphp.use_cases, ssphp.use_case.title

"""

args = level,exclude_status,ig1,ig2,ig3
iseval = 0
