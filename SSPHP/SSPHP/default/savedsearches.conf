#####################################################################################################################################################
####################################################### GLOBAL ######################################################################################
#####################################################################################################################################################

[default]
action.cryptolert.param.debug = 1
action.email = 0
action.email.show_password = 1
action.rss = 0
action.summary_index = 0
alert.track = 0
action.webhook.enable_allowlist = 1
action.email.useNSSubject = 1
auto_summarize = 0
counttype = always
disabled = 0
dispatchAs = owner
dispatch.max_count = 500000
dispatch.time_format = %FT%T.%Q%:z
enableSched = 0
is_visible = 1
max_concurrent = 1
run_on_startup = 0
request.ui_dispatch_app = SSPHP
request.ui_dispatch_view = search
schedule_as = auto
schedule_priority = default
schedule_window = auto
workload_pool = standard_perf




#####################################################################################################################################################
####################################################### AZURE #######################################################################################
#####################################################################################################################################################

[ssphp_create_resource_service_map_csv]
cron_schedule = 15 * * * *
dispatch.earliest_time = 0
dispatch.latest_time = now
enableSched = 1
search = """
`azure_index` sourcetype="azure:resource:group"

| dedup name

| rename name as ssphp_resource_group, location as ssphp_location, "tags.Parent Business" as ssphp_parent_business, tags.Portfolio as ssphp_portfolio, tags.Product as ssphp_product, tags.Service as ssphp_service, "tags.Service Line" as ssphp_service_line, "tags.Service Offering" as ssphp_service_offering, tags.costcenter as ssphp_cost_centre, tags.environment as ssphp_environment
| eval id=lower(id), ssphp_resource_group=lower(ssphp_resource_group)
| rex field=id "^\/subscriptions\/(?<ssphp_subscription>[^\/]+)"
| rex field=ssphp_resource_group "^(?<ssphp_business_service_index>s\d{3})(?<ssphp_environment>p|d|t)[^-]+-(?<ssphp_service_team>[\s\S]*)$"
| eval ssphp_environment=case(ssphp_environment="t","Test",ssphp_environment="d","Development",ssphp_environment="p","Production",1==1,"Unknown")
| fields ssphp_subscription, ssphp_resource_group, ssphp_business_service_index, ssphp_environment, ssphp_service_team, ssphp_location, ssphp_parent_business, ssphp_portfolio, ssphp_product, ssphp_service, ssphp_service_line, ssphp_service_offering

| join type=outer ssphp_subscription
    [search `azure_index` sourcetype="azure:subscriptions"
    | dedup subscriptionId

    | rename tenantId as ssphp_tenant, subscriptionId aS ssphp_subscription, displayName as ssphp_subscription_display_name
    | fields ssphp_subscription, ssphp_tenant, ssphp_subscription_display_name]

| lookup ssphp_business_service_index.csv "Service ID" as ssphp_business_service_index OUTPUT "Cost Centre" as ssphp_cost_centre, "DevOps Site" as ssphp_devops_site, SRO as ssphp_sro, "Service Name" as ssphp_service_name, "Tech Directorate Architect Partner" as ssphp_tech_dir_arch_partner, "Tech Directorate Service Management Contact" as ssphp_tech_dir_serv_mgmt_contact, "Technical Contact Email" as ssphp_tech_contact_email

`ssphp_service_id_logic`

| eval ssphp_tenant_name=case(ssphp_tenant="9c7d9dd3-840c-4b3f-818e-552865082e16","CIP",ssphp_tenant="fad277c9-c60a-4da1-b5f3-b3b8b34a82f9","T1",1==1,"SFA : ".substr(ssphp_tenant,0,8))

| fillnull value="Unknown"

```=========================================================================================================```

| foreach * [eval "<<FIELD>>_normalised"=lower('<<FIELD>>')]

| foreach *_normalised [eval "<<FIELD>>"=replace('<<FIELD>>'," \(pp\)",""),
                             "<<FIELD>>"=replace('<<FIELD>>'," \(crm\)","")
                        | rex field="<<FIELD>>" mode=sed "s/[^a-zA-Z0-9 ]//g"
                        ]

``` parent business outliers```
| eval ssphp_parent_business_normalised=case(ssphp_parent_business_normalised="funding and allocation","funding and allocations",
                                             ssphp_parent_business_normalised="systems for nondepartmental public bodie","systems for nondepartmental public bodies",
                                             ssphp_parent_business_normalised="schools  school performance","schools and school performance",
                                             1==1,ssphp_parent_business_normalised)

``` service outliers```
| eval ssphp_service_normalised=case(match(ssphp_service_normalised,"archived system(s|shared)*"),"archived systems",
                                     match(ssphp_service_normalised,"business intelligence*"),"business intelligence",
                                     match(ssphp_service_normalised,"corporate services*"),"corporate services",
                                     ssphp_service_normalised="archiving system","archiving service",
                                     ssphp_service_normalised="schools  school performance","schools and school performance",
                                     ssphp_service_normalised="dfe sign in","dfe signin",
                                     match(ssphp_service_normalised,"software distribution and patch management*"),"software distribution and patch management",
                                     1==1,ssphp_service_normalised)

| eval sspsp_business=mvsort(mvdedup(coalesce(ssphp_portfolio_normalised, ssphp_parent_business_normalised)))
| fillnull value="-"
| eval ssphp_unit=mvsort(mvdedup(mvappend(ssphp_portfolio_normalised, ssphp_parent_business_normalised, ssphp_service_normalised, ssphp_service_line_normalised, ssphp_service_offering_normalised, ssphp_product_normalised)))
| eval ssphp_unit=mvjoin(ssphp_unit,"~~")

| eval L1=case(like(ssphp_unit,"%education and skills funding agency%"),"education and skills funding agency",
               like(ssphp_unit,"%data directorate%"),"data directorate",
               like(ssphp_unit,"%early years and schools group%"),"early years and schools group",
               like(ssphp_unit,"%schools and school performance%"),"schools and school performance",
               like(ssphp_unit,"%analyse schools performance%"),"schools and school performance",
               like(ssphp_unit,"%school services%"),"school services",
               like(ssphp_unit,"%get information about schools%"),"school services",
               like(ssphp_unit,"%teacher services%"),"teacher services",
               like(ssphp_unit,"%systems for nondepartmental public bodies%"),"systems for nondepartmental public bodies",
               like(ssphp_unit,"%teacher misconduct%"),"teacher misconduct",
               like(ssphp_unit,"%digital and technology%"),"digital and technology",
               like(ssphp_unit,"%social care mobility and disadvantage group%"),"social care mobility and disadvantage group",
               like(ssphp_unit,"%social workforce%"),"social care mobility and disadvantage group",
               like(ssphp_unit,"%data collections%"),"data directorate",
               like(ssphp_unit,"%institute data service%"),"data directorate",
               like(ssphp_unit,"%data archiving platform%"),"data directorate",
               like(ssphp_unit,"%operations group%"),"operations group",
               like(ssphp_unit,"%dfe infrastructure%"),"DfE infrastructure",
               like(ssphp_unit,"%infrastructure and platforms%"),"DfE infrastructure",
               like(ssphp_unit,"%further education%"),"further education",
               like(ssphp_unit,"%childrens care%"),"childrens care",
               like(ssphp_unit,"%business intelligence%"),"data directorate",
               like(ssphp_unit,"%it for the it department%"),"IT for the IT department",
               like(ssphp_unit,"%capital group%"),"capital group",
               like(ssphp_unit,"%childrens social care%"),"childrens care",
               like(ssphp_unit,"%lrs%"),"LRS",
               like(ssphp_unit,"%submit learner data%"),"LRS",
               ssphp_unit="unknown","NO AZURE DATA AVAILABLE",
               like(ssphp_unit,"%vulnerability test environment%"),"digital and technology",
               1==1,"-")
| eval ssphp_unit=replace(ssphp_unit,'L1',"")
| table L1, ssphp_unit, *

| eval L2=case(like(ssphp_unit,"%ciso%"),"CISO",
               like(ssphp_unit,"%technology services%"),"technology services",
               like(ssphp_unit,"%statistics as a service%"),"statistics as a service",
               like(ssphp_unit,"%schools and school performance%"),"schools and school performance",
               like(ssphp_unit,"%infrastructure and platforms%"),"infrastructure and platforms",
               like(ssphp_unit,"%shared it core services%"),"shared IT core services",
               like(ssphp_unit,"%data operations%"),"data operations",
               like(ssphp_unit,"%commercial operations%"),"commercial operations",
               like(ssphp_unit,"%national careers service%"),"national careers service",
               like(ssphp_unit,"%data collections%"),"data collections",
               like(ssphp_unit,"%teacher services%"),"teacher services",
               like(ssphp_unit,"%get into teaching%"),"teacher services",
               like(ssphp_unit,"%business intelligence%"),"business intelligence",
               like(ssphp_unit,"%childrens commissioners office website%"),"childrens commissioners office website",
               like(ssphp_unit,"%complete conversions transfers and changes%"),"complete conversions transfers and changes",
               like(ssphp_unit,"%childrens social care%"),"childrens social care",
               like(ssphp_unit,"%social workforce%"),"social workforce",
               like(ssphp_unit,"%analyse schools performance%"),"analyse schools performance",

               like(ssphp_unit,"%teacher training and qualifications%"),"teacher training and qualifications",
               like(ssphp_unit,"%apprenticeships%"),"apprenticeships",
               like(ssphp_unit,"%academies and free schools%"),"academies and free schools",
               like(ssphp_unit,"%academies and maintained schools%"),"academies and free schools",
               like(ssphp_unit,"%data science%"),"data science",
               like(ssphp_unit,"%funding and allocations%"),"funding and allocations",
               like(ssphp_unit,"%pupil exams and testing%"),"pupil exams and testing",
               like(ssphp_unit,"%childrens care%"),"childrens care",
               like(ssphp_unit,"%learner data%"),"learner data",
               like(ssphp_unit,"%customer experience digital and data%"),"customer experience digital and data",
               like(ssphp_unit,"%strategic data collection%"),"strategic data collection",
               like(ssphp_unit,"%organisational portal%"),"organisational portal",
               like(ssphp_unit,"%get help buying for schools%"),"get help buying for schools",
               like(ssphp_unit,"%getting help buying for schools%"),"get help buying for schools",
               like(ssphp_unit,"%growing up well%"),"growing up well",

               like(ssphp_unit,"%get information about schools%"),"get information about schools",
               like(ssphp_unit,"%capital crm application insights%"),"capital crm application insights",
               like(ssphp_unit,"%national tutoring programme%"),"national tutoring programme",
               like(ssphp_unit,"%plan technology for your school%"),"plan technology for your school",
               like(ssphp_unit,"%end user computing%"),"end user computing",
               like(ssphp_unit,"%design operations%"),"design operations",

               like(ssphp_unit,"%corporate services%"),"corporate services",
               like(ssphp_unit,"%cloud%"),"cloud",
               like(ssphp_unit,"%vulnerability test environment%"),"vulnerability test environment",
               like(ssphp_unit,"%openinnovation%"),"openinnovation",
               like(ssphp_unit,"%authentication services%"),"authentication services",
               like(ssphp_unit,"%institute data service%"),"institute data service",
               like(ssphp_unit,"%data archiving platform%"),"data archiving platform",
               like(ssphp_unit,"%dfe internal firewall%"),"dfe internal firewall",

               1==1,"NO AZURE DATA AVAILABLE")

| eval ssphp_unit=replace(ssphp_unit,'L2',"")

| eval L1_display_name='L1', L2_display_name='L2'

| lookup ssphp_business_service_index.csv "Service ID" as ssphp_business_service_index OUTPUT "Service Name" as L2_canon
| eval L2_display_name=coalesce('L2_canon', 'L2_display_name')

| rex field=L1_display_name mode=sed "s/^/ / s/ [aA]/ A/g s/ [bB]/ B/g s/ [cC]/ C/g s/ [dD]/ D/g s/ [eE]/ E/g s/ [fF]/ F/g s/ [gG]/ G/g s/ [hH]/ H/g s/ [iI]/ I/g s/ [jJ]/ J/g s/ [kK]/ K/g s/ [lL]/ L/g s/ [mM]/ M/g s/ [nN]/ N/g s/ [oO]/ O/g s/ [pP]/ P/g s/ [qQ]/ Q/g s/ [rR]/ R/g s/ [sS]/ S/g s/ [tT]/ T/g s/ [uU]/ U/g s/ [vV]/ V/g s/ [wW]/ W/g s/ [xX]/ X/g s/ [yY]/ Y/g s/ [zZ]/ Z/g s/^.//"
| rex field=L2_display_name mode=sed "s/^/ / s/ [aA]/ A/g s/ [bB]/ B/g s/ [cC]/ C/g s/ [dD]/ D/g s/ [eE]/ E/g s/ [fF]/ F/g s/ [gG]/ G/g s/ [hH]/ H/g s/ [iI]/ I/g s/ [jJ]/ J/g s/ [kK]/ K/g s/ [lL]/ L/g s/ [mM]/ M/g s/ [nN]/ N/g s/ [oO]/ O/g s/ [pP]/ P/g s/ [qQ]/ Q/g s/ [rR]/ R/g s/ [sS]/ S/g s/ [tT]/ T/g s/ [uU]/ U/g s/ [vV]/ V/g s/ [wW]/ W/g s/ [xX]/ X/g s/ [yY]/ Y/g s/ [zZ]/ Z/g s/^.//"
| eval L1_display_name=replace(L1_display_name," And"," and"),
       L1_display_name=replace(L1_display_name," A "," a "),
       L1_display_name=replace(L1_display_name," The "," the "),
       L1_display_name=replace(L1_display_name," To "," to "),
       L1_display_name=replace(L1_display_name," As "," as "),
       L1_display_name=replace(L1_display_name," For "," for "),
       L1_display_name=replace(L1_display_name,"  "," "),
       L1_display_name=replace(L1_display_name,"'",""),
       L2_display_name=replace(L2_display_name," And"," and"),
       L2_display_name=replace(L2_display_name," A "," a "),
       L2_display_name=replace(L2_display_name," The "," the "),
       L2_display_name=replace(L2_display_name," To "," to "),
       L2_display_name=replace(L2_display_name," As "," as "),
       L2_display_name=replace(L2_display_name," For "," for "),
       L2_display_name=replace(L2_display_name,"'",""),
       L2_display_name=replace(L2_display_name," -"," "),
       L2_display_name=replace(L2_display_name,"  "," "),
       L1_display_name=trim(L1_display_name), L2_display_name=trim(L2_display_name)

| rex field=L2_display_name "(?<L2_display_name>[^(]*)(")
| eval L2_display_name=if(L2_display_name="ContinuingProfessionalDevelopment","Continuing Professional Development",L2_display_name)

```| search ssphp_business_service_index="s184"```
| rename L1* as ssphp_level_1*, L2* as ssphp_level_2*
| eval ssphp_level_1=trim(ssphp_level_1), ssphp_level_1_display_name=trim(ssphp_level_1_display_name), ssphp_level_2=trim(ssphp_level_2), ssphp_level_2_display_name=trim(ssphp_level_2_display_name)

| table ssphp_tenant, ssphp_tenant_name, ssphp_subscription, ssphp_subscription_display_name, ssphp_resource_group, ssphp_business_service_index, ssphp_level_1, ssphp_level_1_display_name, ssphp_level_2, ssphp_level_2_display_name, ssphp_service_name, ssphp_environment, ssphp_service_team, ssphp_location, ssphp_parent_business, ssphp_portfolio, ssphp_product, ssphp_service, ssphp_service_line, ssphp_service_offering, ssphp_cost_centre, ssphp_devops_site, ssphp_sro, ssphp_tech_dir_arch_partner, ssphp_tech_dir_serv_mgmt_contact, ssphp_tech_contact_email
| outputlookup createinapp=t append=f ssphp_resource_service_map.csv
"""


######################################################################################################################################################


[ssphp_create_base_findings_summary_latest_run_times_csv]
dispatch.earliest_time = -0
dispatch.latest_time = now
search = """
| tstats summariesonly=false count FROM datamodel=SSPHP.findings by findings.ssphp_norm_use_case, findings.SSPHP_RUN
| rename findings.* as *
| table SSPHP_RUN, ssphp_norm_use_case
| outputlookup createinapp=t append=t ssphp_findings_summary_latest_run_times.csv
"""

[ssphp_create_base_azure_resource_list_csv]
dispatch.earliest_time = -30d@d
dispatch.latest_time = now
search = """
index="eventhub" sourcetype="mscs:azure:eventhub"

| eval resource_id=mvdedup(coalesce(resourceId,ResourceId,id,Id))
| search resource_id="*/RESOURCEGROUPS/*"
| dedup resource_id
| table resource_id
| rename resource_id as _raw
| extract pairdelim="/" kvdelim="/"
| eval ssphp_resource_group=coalesce(resourceGroups,resourcegroups,RESOURCEGROUPS),
       VIRTUALMACHINES=coalesce(VIRTUALMACHINES,virtualMachines,virtualmachines),
       ssphp_subscription=coalesce(subscriptions, SUBSCRIPTIONS)

| fields - _raw, activityLogAlerts, providers, PROVIDERS, resourceGroups, resourcegroups, assessments, subassessments, virtualMachines, virtualmachines, RESOURCEGROUPS, _kv, SUBSCRIPTIONS, subscriptions

| rename * as zzz_*, zzz_ssphp_* as ssphp_*
| foreach zzz_* [eval ssphp_resource=mvappend(ssphp_resource,if(isnotnull('<<FIELD>>'),"<<FIELD>>"." = ".'<<FIELD>>',null()))]
| fields ssphp_resource_group, ssphp_subscription, ssphp_resource
| mvexpand ssphp_resource
| eval ssphp_resource=substr(ssphp_resource,5)

| dedup ssphp_resource_group, ssphp_subscription, ssphp_resource

| outputlookup createinapp=t append=f ssphp_azure_resource_list.csv
"""

#####################################################################################################################################################

[ssphp_create_incremental_azure_resource_list_csv]
cron_schedule = */30 * * * *
dispatch.earliest_time = -60m@m
dispatch.latest_time = now
enableSched = 1
search = """
| inputlookup ssphp_azure_resource_list.csv

| append
    [search index="eventhub" sourcetype="mscs:azure:eventhub" earliest=-1h@h latest=now

| eval resource_id=mvdedup(coalesce(resourceId,ResourceId,id,Id))
| search resource_id="*/RESOURCEGROUPS/*"
| dedup resource_id
| table resource_id
| rename resource_id as _raw
| extract pairdelim="/" kvdelim="/"
| eval ssphp_resource_group=coalesce(resourceGroups,resourcegroups,RESOURCEGROUPS),
       VIRTUALMACHINES=coalesce(VIRTUALMACHINES,virtualMachines,virtualmachines),
       ssphp_subscription=coalesce(subscriptions, SUBSCRIPTIONS)

| fields - _raw, activityLogAlerts, providers, PROVIDERS, resourceGroups, resourcegroups, assessments, subassessments, virtualMachines, virtualmachines, RESOURCEGROUPS, _kv, SUBSCRIPTIONS, subscriptions

| rename * as zzz_*, zzz_ssphp_* as ssphp_*
| foreach zzz_* [eval ssphp_resource=mvappend(ssphp_resource,if(isnotnull('<<FIELD>>'),"<<FIELD>>"." = ".'<<FIELD>>',null()))]
| fields ssphp_resource_group, ssphp_subscription, ssphp_resource
| mvexpand ssphp_resource
| eval ssphp_resource=substr(ssphp_resource,5)]

| dedup ssphp_resource_group, ssphp_subscription, ssphp_resource

| outputlookup createinapp=t append=f ssphp_azure_resource_list.csv
"""



#####################################################################################################################################################
####################################################### GITHUB ######################################################################################
#####################################################################################################################################################

[ssphp_create_github_public_repo_list_csv]
cron_schedule = 0 2 * * *
dispatch.earliest_time = -7d@d
dispatch.latest_time = now
enableSched = 1
search = """
`github_index` sourcetype=github_repo_json private=false archived=false
| stats values(full_name) as full_name
| mvexpand full_name
| rex field=full_name "^(?<ssphp_organisation>[^\/]*)\/(?<ssphp_repo>.*)"
| table full_name, ssphp_organisation, ssphp_repo
| outputlookup createinapp=true append=f ssphp_github_public_repo_list.csv


[ssphp_create_github_repo_service_map_csv]
cron_schedule = */30 * * * *
dispatch.earliest_time = 0
dispatch.latest_time = now
enableSched = 1
search = `github_index`

| eval ssphp_org='organization.login',
       ssphp_repo='repository.name'```,
       ssphp_repo='repository.full_name' ```
| dedup ssphp_org, ssphp_repo

``` mark RSD repos ```
| eval ownership=case(ssphp_org="DFE-Digital" AND ssphp_repo="terraform-azurerm-key-vault-tfvars","Schools and School Performance~~~Regional Service Delivery~~~Terraform Key Vault module",
                      ssphp_org="DFE-Digital" AND ssphp_repo="terraform-azurerm-container-apps-hosting","Schools and School Performance~~~Regional Service Delivery~~~Terraform Container Apps module",
                      ssphp_org="DFE-Digital" AND ssphp_repo="API-SIP-SharePointOnline","Schools and School Performance~~~Regional Service Delivery~~~SharePoint API",
                      ssphp_org="DFE-Digital" AND ssphp_repo="prepare-academy-transfers","Schools and School Performance~~~Regional Service Delivery~~~Prepare Academy Transfers",
                      ssphp_org="DFE-Digital" AND ssphp_repo="prepare-academy-conversions","Schools and School Performance~~~Regional Service Delivery~~~Prepare Academy Conversions",
                      ssphp_org="DFE-Digital" AND ssphp_repo="amsd-casework","Schools and School Performance~~~Regional Service Delivery~~~Concerns Casework",
                      ssphp_org="DFE-Digital" AND ssphp_repo="dfe-complete-conversions-transfers-and-changes","Schools and School Performance~~~Regional Service Delivery~~~Complete, Conversions, Transfers and Changes",
                      ssphp_org="DFE-Digital" AND ssphp_repo="Dfe.Academies.External","Schools and School Performance~~~Regional Service Delivery~~~Apply to Become",
                      ssphp_org="DFE-Digital" AND ssphp_repo="trams-data-api","Schools and School Performance~~~Regional Service Delivery~~~Academies API",

                      1==1,"unknown~~~unknown~~~unknown")

| rex field=ownership "(?<ssphp_level_1_display_name>[^~]*)~~~(?<ssphp_level_2_display_name>[^~]*)~~~(?<ssphp_service_team>[^~]*)"

| table ssphp_level_1_display_name, ssphp_level_2_display_name, ssphp_org, ssphp_repo, ssphp_service_team
| sort 0 ssphp_level_1_display_name, ssphp_level_2_display_name, ssphp_org, ssphp_repo, ssphp_service_team

| outputlookup createinapp=t append=f ssphp_github_repo_service_map.csv
"""


#####################################################################################################################################################
####################################################### QUALYS ######################################################################################
#####################################################################################################################################################

[ssphp_create_map_ip_to_azure_rg_csv]
cron_schedule = 30 2 * * *
dispatch.earliest_time = -30d@d
dispatch.latest_time = now
enableSched = 1
search = """
index=eventhub properties.primaryIPv4Address=* operationName="NetworkSecurityGroup*"
| rex field=resourceId "\/SUBSCRIPTIONS\/(?<ssphp_subscription>[^\/]*)/RESOURCEGROUPS/(?<ssphp_resource_group>[^\/]*)/"
| fields "properties.primaryIPv4Address", ssphp_subscription, ssphp_resource_group
| rename "properties.primaryIPv4Address" as IP
| stats values(ssphp_subscription) as ssphp_subscription, values(ssphp_resource_group) as ssphp_resource_group by IP
| outputlookup createinapp=t append=f ssphp_map_ip_to_azure_rg.csv
"""

#####################################################################################################################################################


[ssphp_create_qualys_service_list_csv]
dispatch.earliest_time = -30d@d
dispatch.latest_time = now
search = """
eventtype=qualys_vm_detection_event
| fillnull value=- PROTOCOL DNS
| dedup 1 HOST_ID, QID, PROTOCOL, STATUS keepempty=true sortby -_time
| search STATUS != "FIXED"
| stats list(QID) as QID by HOST_ID, IP, DNS, OS

| lookup qualys_kb_lookup QID OUTPUT TITLE SEVERITY
| fields HOST_ID, IP, DNS, OS, QID, TITLE, SEVERITY
\
| lookup ssphp_map_ip_to_azure_rg.csv IP

| eval ssphp_resource_group=lower(ssphp_resource_group)
| lookup ssphp_resource_service_map.csv ssphp_resource_group

`ssphp_service_id_logic`

| eval SEVERITY=sum(SEVERITY)
| sort - SEVERITY
| table HOST_ID, IP, DNS, OS, QID, TITLE, SEVERITY, ssphp_portfolio, ssphp_service, ssphp_product, ssphp_tenant_name, ssphp_subscription_display_name, ssphp_resource_group, ssphp_tech_contact_email
| stats count by ssphp_service
| outputlookup createinapp=t append=f ssphp_qualys_service_list.csv
"""


#####################################################################################################################################################
####################################################### WRITE FINDINGS USE CASES ####################################################################
#####################################################################################################################################################

[ssphp_write_findings_summary__azure_findings]
cron_schedule = 30 * * * *
description = Defender detected a Finding in Azure
dispatch.earliest_time = 0
dispatch.latest_time = now
enableSched = 1
search = """`azure_index` sourcetype="azure:security:finding"
    [| search `azure_index` sourcetype="azure:security:finding" earliest=-7d@d latest=now
    | stats max(SSPHP_RUN) as SSPHP_RUN
    |  eval earliest_time=SSPHP_RUN-600, latest_time=SSPHP_RUN+1200, search_text="SSPHP_RUN=".SSPHP_RUN." earliest=".earliest_time." latest=".latest_time
    | return $search_text]
    ssphp_level_1_display_name="*" AND ssphp_level_2_display_name="*"

| eval ssphp_tech_contact_email=split(ssphp_tech_contact_email,"; ")
| rename SSPHP_RUN as ssphp_original_SSPHP_RUN

| fields SSPHP_RUN, ssphp_*

| eval ssphp_norm_time=mvappend("Creation Time = ".'ssphp_creation_time',"Last Changed Time = ".'ssphp_last_changed_time'),
       ssphp_norm_sort_time=round(strptime('ssphp_creation_time',"%Y-%m-%d %H:%M:%S")),
       ssphp_norm_tech_source="Azure",
       ssphp_norm_use_case="findings",
       ssphp_norm_resource_parent=mvappend("Tenant = ".'ssphp_tenant_name',"Subscription = ".'ssphp_subscription',"Resource Group = ".'ssphp_resource_group'),
       ssphp_norm_resource='ssphp_resources_affected',
       ssphp_norm_title='ssphp_policy_name',
       ssphp_norm_description='ssphp_policy_description',
       ssphp_norm_remediation='ssphp_remediation',
       ssphp_norm_severity='ssphp_severity',
       ssphp_norm_impact=mvappend("Impact = ".'ssphp_impact',"Tactics = ".'ssphp_tactics',"Techniques = ".'ssphp_techniques',"Threats = ".'ssphp_threats'),
       ssphp_norm_status='ssphp_status',
       ssphp_norm_ownership=mvappend("DfE Group = ".'ssphp_level_1_display_name',"DfE Service = ".'ssphp_level_2_display_name'),
       ssphp_norm_contact=mvappend("Service Team = ".'ssphp_service_team',"Tech Contact Email = ".'ssphp_tech_contact_email'),
       ssphp_norm_link="unknown",
       ssphp_norm_original_events='ssphp_event_uid',
       SSPHP_RUN=now()

`ssphp_write_summary_findings_data`
"""

#####################################################################################################################################################

[ssphp_write_findings_summary__azure_alerts]
cron_schedule = 30 * * * *
description = Defender detected an Alert in Azure
dispatch.earliest_time = 0
dispatch.latest_time = now
enableSched = 1
search = """
`azure_index` sourcetype="azure:security:alert"
    [| search `azure_index` sourcetype="azure:security:alert" earliest=-7d@d latest=now
    | stats max(SSPHP_RUN) as SSPHP_RUN
    |  eval earliest_time=SSPHP_RUN-600, latest_time=SSPHP_RUN+1200, search_text="SSPHP_RUN=".SSPHP_RUN." earliest=".earliest_time." latest=".latest_time
    | return $search_text]

| rex field=ssphp_resource_id "resource(G|g)roups\/(?<ssphp_resource_group>[^\/]+)\/"
| fillnull value="-"

| lookup ssphp_resource_service_map ssphp_resource_group AS ssphp_resource_group OUTPUT ssphp_level_1_display_name as ssphp_level_1_display_name ssphp_level_2_display_name as ssphp_level_2_display_name ssphp_business_service_index AS ssphp_business_service_index ssphp_environment AS ssphp_environment ssphp_location AS ssphp_location ssphp_parent_business AS ssphp_parent_business ssphp_portfolio AS ssphp_portfolio ssphp_product AS ssphp_product ssphp_service AS ssphp_service ssphp_service_line AS ssphp_service_line ssphp_service_name AS ssphp_service_name ssphp_service_offering AS ssphp_service_offering ssphp_service_team AS ssphp_service_team ssphp_tech_contact_email AS ssphp_tech_contact_email ssphp_tech_dir_arch_partner AS ssphp_tech_dir_arch_partner ssphp_tenant AS ssphp_tenant ssphp_tenant_name AS ssphp_tenant_name ssphp_subscription as ssphp_subscription
| search ssphp_level_1_display_name="*" AND ssphp_level_2_display_name="*"

| eval ssphp_tech_contact_email=split(ssphp_tech_contact_email,"; ")
| rename SSPHP_RUN as ssphp_original_SSPHP_RUN

| eval ssphp_norm_time=mvappend("Alert Event Time = ".strftime(_time,"%Y-%m-%d %H:%M:%S"),"Creation Time = ".'ssphp_creation_time',"Start Time = ".'ssphp_start_time'),
       ssphp_norm_sort_time=round(strptime('ssphp_creation_time',"%Y-%m-%d %H:%M:%S")),
       ssphp_norm_tech_source="Azure",
       ssphp_norm_use_case="alerts",
       ssphp_norm_resource_parent=mvappend("Tenant = ".'ssphp_tenant_name',"Subscription = ".'ssphp_subscription',"Resource Group = ".'ssphp_resource_group'),
       ssphp_norm_resource=mvappend('ssphp_resources_affected','ssphp_alerts_meta_entities'),
       ssphp_norm_title='ssphp_alert_name',
       ssphp_norm_description='ssphp_alert_description',
       ssphp_norm_remediation="unknown",
       ssphp_norm_severity='ssphp_severity',
       ssphp_norm_impact="unknown",
       ssphp_norm_status='ssphp_status',
       ssphp_norm_ownership=mvappend("DfE Group = ".'ssphp_level_1_display_name',"DfE Service = ".'ssphp_level_2_display_name'),
       ssphp_norm_contact=mvappend("Service Team = ".'ssphp_service_team',"Tech Contact Email = ".'ssphp_tech_contact_email'),
       ssphp_norm_link="unknown",
       ssphp_norm_original_events='ssphp_event_uid',
       SSPHP_RUN=now()

| fields SSPHP_RUN, ssphp_norm_*, ssphp_*

`ssphp_write_summary_findings_data`
"""

#####################################################################################################################################################

[ssphp_write_findings_summary__github_cve]
cron_schedule = 30 * * * *
description = A CVE was detected in a Repo
dispatch.earliest_time = 0
dispatch.latest_time = now
enableSched = 1
search = """`github_index` alert.security_advisory.cve_id="*"

| eval ssphp_action='action',
       ssphp_created_at=strftime(strptime('alert.created_at',"%Y-%m-%dT%H:%M:%SZ"),"%Y-%m-%d %H:%M:%S"),
       ssphp_details=mvappend("CVE ID = ".'alert.security_advisory.cve_id',"Description = ".'alert.security_advisory.description',"Ecosystem = ".'alert.security_vulnerability.package.ecosystem',"Package = ".'alert.security_vulnerability.package.name'),
       ssphp_severity='alert.security_advisory.severity',
       ssphp_repository='repository.full_name',
       ssphp_state='alert.state',
       ssphp_url='alert.security_advisory.references{}.url',
       ssphp_original_event=_time."~~~".md5(_raw)

| lookup ssphp_github_repo_service_map.csv ssphp_org as "organization.login", ssphp_repo as "repository.name" OUTPUT ssphp_level_1_display_name, ssphp_level_2_display_name, ssphp_service_team
| fillnull value="unknown" ssphp_level_1_display_name, ssphp_level_2_display_name, ssphp_service_team

``` Normalised field data ```
| eval ssphp_norm_time="Creation Time = ".'ssphp_created_at',
       ssphp_norm_sort_time=round(strptime('ssphp_created_at',"%Y-%m-%d %H:%M:%S")),
       ssphp_norm_tech_source="Github",
       ssphp_norm_use_case="cve",
       ssphp_norm_resource_parent="Organisation = ".'organization.login',
       ssphp_norm_resource="Repo = ".'repository.name',
       ssphp_norm_title="Known CVE Reported in Github Repo",
       ssphp_norm_description='ssphp_details',
       ssphp_norm_remediation="unknown",
       ssphp_norm_severity=upper(substr(ssphp_severity,1,1)).substr(ssphp_severity,2),
       ssphp_norm_impact="unknown",
       ssphp_norm_status='ssphp_state',
       ssphp_norm_ownership=mvappend("DfE Group = ".ssphp_level_1_display_name,"DfE Service = ".ssphp_level_2_display_name),
       ssphp_norm_contact=case(isnotnull(ssphp_level_1_display_name),"Service Team = ".ssphp_service_team,1==1,"unknown"),
       ssphp_norm_link="unknown",
       ssphp_norm_original_events='ssphp_original_event',
       SSPHP_RUN=now()

| lookup ssphp_github_public_repo_list.csv ssphp_organisation as organization.login, ssphp_repo as repository.name OUTPUT full_name
| eval ssphp_norm_resource=case(isnull(full_name),ssphp_norm_resource." (private)",1==1,ssphp_norm_resource." (public)")

| table SSPHP_RUN, ssphp_norm_*, ssphp_*

`ssphp_write_summary_findings_data`
"""

#####################################################################################################################################################

[ssphp_write_findings_summary__github_change_branch_protection_rules]
cron_schedule = 30 * * * *
description = Branch Protection Rules were changed for a Repo
dispatch.earliest_time = 0
dispatch.latest_time = now
enableSched = 1
search = """
`github_index` rule.name=*

| eval ssphp_action='action',
       ssphp_created_at='last_updated',
       ssphp_details=mvappend("Rule = ".'rule.name', "Name Changed From = ".'changes.name.from', "Merge Queue Enforcement Level From = ".'changes.merge_queue_enforcement_level.from', "Deployment Changes Required Enforcement Level = ".'changes.required_deployments_enforcement_level.from'),
       ssphp_severity='alert.security_advisory.severity',
       ssphp_repository='repository.full_name',
       ssphp_state='alert.state',
       ssphp_url='alert.security_advisory.references{}.url',
       ssphp_original_event=_time."~~~".md5(_raw)

| lookup ssphp_github_repo_service_map.csv ssphp_org as "organization.login", ssphp_repo as "repository.name" OUTPUT ssphp_level_1_display_name, ssphp_level_2_display_name, ssphp_service_team
| fillnull value="unknown" ssphp_level_1_display_name, ssphp_level_2_display_name, ssphp_service_team

``` Normalised field data ```
| eval ssphp_norm_time="Last Updated = ".'ssphp_created_at',
       ssphp_norm_sort_time=round(strptime('ssphp_created_at',"%Y-%m-%d %H:%M:%S")),
       ssphp_norm_tech_source="Github",
       ssphp_norm_use_case="Change Branch Protection Rules",
       ssphp_norm_resource_parent="Organisation = ".'organization.login',
       ssphp_norm_resource="Repo = ".'repository.name',
       ssphp_norm_title="Branch Protection Rules have been changed for a Github Repo",
       ssphp_norm_description='ssphp_details',
       ssphp_norm_remediation="unknown",
       ssphp_norm_severity="medium",
       ssphp_norm_impact="unknown",
       ssphp_norm_status='ssphp_state',
       ssphp_norm_ownership=mvappend("DfE Group = ".ssphp_level_1_display_name,"DfE Service = ".ssphp_level_2_display_name),
       ssphp_norm_contact=case(isnotnull(ssphp_level_1_display_name),"Service Team = ".ssphp_service_team,1==1,"unknown"),
       ssphp_norm_link="unknown",
       ssphp_norm_original_events='ssphp_original_event',
       SSPHP_RUN=now()

| lookup ssphp_github_public_repo_list.csv ssphp_organisation as organization.login, ssphp_repo as repository.name OUTPUT full_name
| eval ssphp_norm_resource=case(isnull(full_name),ssphp_norm_resource." (private)",1==1,ssphp_norm_resource." (public)")

``` Work up the details field ```
| rename rule.name as rule_name

| foreach changes.*.from
    [eval <<FIELD>>="To : ".'<<FIELD>>'.", From : ".'rule.<<MATCHSTR>>']
| rename changes.*.from as t_*

| foreach t_*
    [eval f="<<FIELD>>",
          f=replace(f,"^t_",""),
          f=replace(f,"_"," ")
     | rex field=f mode=sed "s/^/ / s/ [aA]/ A/g s/ [bB]/ B/g s/ [cC]/ C/g s/ [dD]/ D/g s/ [eE]/ E/g s/ [fF]/ F/g s/ [gG]/ G/g s/ [hH]/ H/g s/ [iI]/ I/g s/ [jJ]/ J/g s/ [kK]/ K/g s/ [lL]/ L/g s/ [mM]/ M/g s/ [nN]/ N/g s/ [oO]/ O/g s/ [pP]/ P/g s/ [qQ]/ Q/g s/ [rR]/ R/g s/ [sS]/ S/g s/ [tT]/ T/g s/ [uU]/ U/g s/ [vV]/ V/g s/ [wW]/ W/g s/ [xX]/ X/g s/ [yY]/ Y/g s/ [zZ]/ Z/g s/^.//"
     | eval all_changes=if("<<FIELD>>"!="rule_name",mvappend(all_changes,f." = ".'<<FIELD>>'),all_changes)]
| where isnotnull(all_changes)
| eval all_changes=mvappend("Rule = ".'rule_name', all_changes)
| rename all_changes as ssphp_norm_description
| fields ssphp_norm_*, ssphp_*, *
| table SSPHP_RUN, ssphp_norm_*, ssphp_*

`ssphp_write_summary_findings_data`
"""

#####################################################################################################################################################

[ssphp_write_findings_summary__github_codeql]
cron_schedule = 30 * * * *
description = CodeQL detected a vulnerability in a Repo
dispatch.earliest_time = 0
dispatch.latest_time = now
enableSched = 1
search = """
`github_index` alert.tool.name="CodeQL"
| sort 0 - _time
| eval ssphp_event_time=strftime(_time,"%Y-%m-%d %H:%M:%S"),
       ssphp_original_event=_time."~~~".md5(_raw)

| stats list(action) as actions, values(*) as * by alert.html_url
| fields - action
| where mvindex(actions,0)!="fixed"

| eval ssphp_action='actions',
       ssphp_created_at=strftime(strptime('alert.created_at',"%Y-%m-%dT%H:%M:%SZ"),"%Y-%m-%d %H:%M:%S"),
       ssphp_details=mvappend("Category = ".'alert.most_recent_instance.category',
                              "Location Path = ".'alert.most_recent_instance.location.path',
                              "Message Text = ".'alert.most_recent_instance.message.text',
                              "Commit Branch = ".'commit_branch',
                              "Commit SHA = ".'alert.most_recent_instance.commit_sha',
                              "Push Time = ".'repository.pushed_at'),
       ssphp_severity='alert.rule.severity',
       ssphp_repository='repository.full_name',
       ssphp_state='alert.state',
       ssphp_url='alert.html_url',
       SSPHP_RUN=now()


| lookup ssphp_github_repo_service_map.csv ssphp_org as "organization.login", ssphp_repo as "repository.name" OUTPUT ssphp_level_1_display_name, ssphp_level_2_display_name, ssphp_service_team
| fillnull value="unknown" ssphp_level_1_display_name, ssphp_level_2_display_name, ssphp_service_team

``` Normalised field data ```
| eval ssphp_norm_time="Creation Time = ".'ssphp_created_at',
       ssphp_norm_sort_time=round(strptime('ssphp_created_at',"%Y-%m-%d %H:%M:%S")),
       ssphp_norm_tech_source="Github",
       ssphp_norm_use_case="CodeQL",
       ssphp_norm_resource_parent="Organisation = ".'organization.login',
       ssphp_norm_resource="Repo = ".'repository.name',
       ssphp_norm_title="CodeQL has identified Code Vulnerabilities in a Repo",
       ssphp_norm_description='ssphp_details',
       ssphp_norm_remediation="unknown",
       ssphp_norm_severity=upper(substr(ssphp_severity,1,1)).substr(ssphp_severity,2),
       ssphp_norm_impact="unknown",
       ssphp_norm_status='ssphp_state',
       ssphp_norm_ownership=mvappend("DfE Group = ".ssphp_level_1_display_name,"DfE Service = ".ssphp_level_2_display_name),
       ssphp_norm_contact=case(isnotnull(ssphp_level_1_display_name),"Service Team = ".ssphp_service_team,1==1,"unknown"),
       ssphp_norm_link="unknown",
       ssphp_norm_original_events='ssphp_original_event',
       SSPHP_RUN=now()

| lookup ssphp_github_public_repo_list.csv ssphp_organisation as organization.login, ssphp_repo as repository.name OUTPUT full_name
| eval ssphp_norm_resource=case(isnull(full_name),ssphp_norm_resource." (private)",1==1,ssphp_norm_resource." (public)")

| table SSPHP_RUN, ssphp_norm_*, ssphp_*

`ssphp_write_summary_findings_data`
"""

#####################################################################################################################################################

[ssphp_write_findings_summary__github_repo_made_public]
cron_schedule = 30 * * * *
description = A Github Repo was made Public
dispatch.earliest_time = 0
dispatch.latest_time = now
enableSched = 1
search = """
`github_index` action="publicized"

| eval ssphp_action='action',
       ssphp_created_at='last_updated',
       ssphp_details=mvappend("User Login = ".'sender.login', "User URL = ".'sender.url'),
       ssphp_severity="high",
       ssphp_repository='repository.full_name',
       ssphp_state='alert.state',
       ssphp_url='alert.security_advisory.references{}.url',
       ssphp_original_event=_time."~~~".md5(_raw)

| lookup ssphp_github_repo_service_map.csv ssphp_org as "organization.login", ssphp_repo as "repository.name" OUTPUT ssphp_level_1_display_name, ssphp_level_2_display_name, ssphp_service_team
| fillnull value="unknown" ssphp_level_1_display_name, ssphp_level_2_display_name, ssphp_service_team

``` Normalised field data ```
| eval ssphp_norm_time="Creation Time = ".'ssphp_created_at',
       ssphp_norm_sort_time=round(strptime('ssphp_created_at',"%Y-%m-%d %H:%M:%S")),
       ssphp_norm_tech_source="Github",
       ssphp_norm_use_case="Repo Made Public",
       ssphp_norm_resource_parent="Organisation = ".'organization.login',
       ssphp_norm_resource="Repo = ".'repository.name',
       ssphp_norm_title="Github Repo as been made Public",
       ssphp_norm_description='ssphp_details',
       ssphp_norm_remediation="unknown",
       ssphp_norm_severity=upper(substr(ssphp_severity,1,1)).substr(ssphp_severity,2),
       ssphp_norm_impact="unknown",
       ssphp_norm_status=mvappend("Action=".'ssphp_action',"State=".'ssphp_state'),
       ssphp_norm_ownership=mvappend("DfE Group = ".ssphp_level_1_display_name,"DfE Service = ".ssphp_level_2_display_name),
       ssphp_norm_contact=case(isnotnull(ssphp_level_1_display_name),"Service Team = ".ssphp_service_team,1==1,"unknown"),
       ssphp_norm_link="unknown",
       ssphp_norm_original_events='ssphp_original_event',
       SSPHP_RUN=now()

| lookup ssphp_github_public_repo_list.csv ssphp_organisation as organization.login, ssphp_repo as repository.name OUTPUT full_name
| eval ssphp_norm_resource=case(isnull(full_name),ssphp_norm_resource." (private)",1==1,ssphp_norm_resource." (public)")

| table SSPHP_RUN, ssphp_norm_*, ssphp_*

`ssphp_write_summary_findings_data`
"""

#####################################################################################################################################################

[ssphp_write_findings_summary__github_secret]
cron_schedule = 30 * * * *
description = A secret was detected in a Repo
dispatch.earliest_time = 0
dispatch.latest_time = now
enableSched = 1
search = """
`github_index` action=* alert.secret_type=* location.type=*

| eval ssphp_action='action',
       ssphp_created_at=strftime(strptime('alert.created_at',"%Y-%m-%dT%H:%M:%SZ"),"%Y-%m-%d %H:%M:%S"),
       ssphp_details=mvappend("Secret Type = ".'alert.secret_type', "Location Path = ".'location.details.path', "Push Protection Bypassed? = ".'alert.push_protection_bypassed', "Alert Resolved At = ".'alert.resolved_at', "Alert Resolved By = ".'alert.resolved_by', "Commit URL = ".'location.details.commit_url'),
       ssphp_severity='severity',
       ssphp_repository='repository.full_name',
       ssphp_state='alert.state',
       ssphp_url='alert.security_advisory.references{}.url',
       ssphp_original_event=_time."~~~".md5(_raw)

| lookup ssphp_github_repo_service_map.csv ssphp_org as "organization.login", ssphp_repo as "repository.name" OUTPUT ssphp_level_1_display_name, ssphp_level_2_display_name, ssphp_service_team
| fillnull value="unknown" ssphp_level_1_display_name, ssphp_level_2_display_name, ssphp_service_team

``` Normalised field data ```
| eval ssphp_norm_time="Creation Time = ".'ssphp_created_at',
       ssphp_norm_sort_time=round(strptime('ssphp_created_at',"%Y-%m-%d %H:%M:%S")),
       ssphp_norm_tech_source="Github",
       ssphp_norm_use_case="Secret",
       ssphp_norm_resource_parent="Organisation = ".'organization.login',
       ssphp_norm_resource="Repo = ".'repository.name',
       ssphp_norm_title="A Secret has been committed into a Github Repo",
       ssphp_norm_description='ssphp_details',
       ssphp_norm_remediation="unknown",
       ssphp_norm_severity=upper(substr(ssphp_severity,1,1)).substr(ssphp_severity,2),
       ssphp_norm_impact="unknown",
       ssphp_norm_status='ssphp_state',
       ssphp_norm_ownership=mvappend("DfE Group = ".ssphp_level_1_display_name,"DfE Service = ".ssphp_level_2_display_name),
       ssphp_norm_contact=case(isnotnull(ssphp_level_1_display_name),"Service Team = ".ssphp_service_team,1==1,"unknown"),
       ssphp_norm_link="unknown",
       ssphp_norm_original_events='ssphp_original_event',
       SSPHP_RUN=now()

| lookup ssphp_github_public_repo_list.csv ssphp_organisation as organization.login, ssphp_repo as repository.name OUTPUT full_name
| eval ssphp_norm_resource=case(isnull(full_name),ssphp_norm_resource." (private)",1==1,ssphp_norm_resource." (public)")

| table SSPHP_RUN, ssphp_norm_*, ssphp_*

`ssphp_write_summary_findings_data`
"""

#####################################################################################################################################################

[ssphp_write_findings_summary__qualys_vm_vulnerabilities]
cron_schedule = 30 * * * *
description = Write Qualys Vulnerabilities to Summary Index
dispatch.earliest_time = 0
dispatch.latest_time = now
enableSched = 1
search = """
eventtype=qualys_vm_detection_event STATUS != "FIXED"

| eventstats max(_time) as last_event_time by HOST_ID, QID
| where _time=last_event_time
| fields - last_event_time

| eval b='_time'
| lookup qualys_kb_lookup QID
| eval _time='b'

| fields CATEGORY, CONSEQUENCE, CVE, DIAGNOSIS, DNS, FIRST_FOUND_DATETIME, HOSTNAME, HOST_ID, IP, LAST_*, NETBIOS, OS, PROTOCOL, QID, RESULTS, SEVERITY, SOLUTION, STATUS, THREAT_INTEL_VALUES, TITLE, TYPE, _time, _raw

| lookup ssphp_map_ip_to_azure_rg.csv IP
| fillnull value="unknown" ssphp_resource_group, ssphp_subscription


| eval ssphp_resource_group=lower(ssphp_resource_group)
| lookup ssphp_resource_service_map.csv ssphp_resource_group

```==================== Normalised field data ======================================```

| eval ssphp_norm_original_events=_time."~~~".md5(_raw),
       ssphp_norm_time=mvappend("Last Fixed = ".strftime(strptime(LAST_FIXED_DATETIME,"%Y-%m-%dT%H:%M:%SZ"),"%Y-%m-%d %H:%M:%S"),
                                "Last Found = ".strftime(strptime(LAST_FOUND_DATETIME,"%Y-%m-%dT%H:%M:%SZ"),"%Y-%m-%d %H:%M:%S"),
                                "Last Scan = ".strftime(strptime(LAST_SCAN_DATETIME,"%Y-%m-%dT%H:%M:%SZ"),"%Y-%m-%d %H:%M:%S"),
                                "Last Test = ".strftime(strptime(LAST_TEST_DATETIME,"%Y-%m-%dT%H:%M:%SZ"),"%Y-%m-%d %H:%M:%S"),
                                "Last Update = ".strftime(strptime(LAST_UPDATE_DATETIME,"%Y-%m-%dT%H:%M:%SZ"),"%Y-%m-%d %H:%M:%S"),
                                "Last VM Scanned = ".strftime(strptime(LAST_VM_SCANNED_DATE,"%Y-%m-%dT%H:%M:%SZ"),"%Y-%m-%d %H:%M:%S"),
                                "First Found = ".strftime(strptime(FIRST_FOUND_DATETIME,"%Y-%m-%dT%H:%M:%SZ"),"%Y-%m-%d %H:%M:%S")),
       ssphp_norm_sort_time=round(strptime(FIRST_FOUND_DATETIME,"%Y-%m-%dT%H:%M:%SZ")),
       ssphp_norm_tech_source="Qualys",
       ssphp_norm_use_case="VM Vulerabilities",
       ssphp_norm_resource_parent=mvappend("Tenant = ".'ssphp_tenant_name',"Subscription = ".'ssphp_subscription',"Resource Group = ".'ssphp_resource_group'),
       ssphp_norm_resource=mvappend("Host Name = ".'HOSTNAME',
                                    "Host ID = ".'HOST_ID',
                                    "IP = ".'IP',
                                    "Protocol = ".'PROTOCOL',
                                    "OS = ".'OS',
                                    "NetBios = ".'NETBIOS'),
       ssphp_norm_title=mvappend("Title = ".'TITLE',"QID = ".'QID'),
       ssphp_norm_description=mvappend("Consequence = ".replace(CONSEQUENCE,"\<(BR|P|UL|\/A)\>",""),
                                       "Diagnosis = ".replace(DIAGNOSIS,"\<(BR|P|UL|\/A)\>",""),
                                       "Results = ".replace(RESULTS,"\<(BR|P|UL|\/A)\>","")),
       ssphp_norm_remediation=replace(SOLUTION,"\<(BR|P|UL|\/A)\>",""),
       ssphp_norm_severity=case('SEVERITY'=1,"Critical",'SEVERITY'=2,"High",'SEVERITY'=3,"Medium",'SEVERITY'=4,"Medium",'SEVERITY'=5,"Low",1==1,"unknown"),
       ssphp_norm_impact=if(isnotnull(THREAT_INTEL_VALUES) AND NOT THREAT_INTEL_VALUES="","Threat Intel = ".'THREAT_INTEL_VALUES',"unknown"),
       ssphp_norm_status='STATUS',
       ssphp_norm_ownership=mvappend("DfE Group = ".ssphp_level_1_display_name,"DfE Service = ".ssphp_level_2_display_name),
       ssphp_norm_contact=case(isnotnull(ssphp_level_1_display_name),"Service Team = ".ssphp_service_team,1==1,"unknown"),
       ssphp_norm_link="unknown",
       SSPHP_RUN=now()

| table SSPHP_RUN, ssphp_norm_*

`ssphp_write_summary_findings_data`
"""

#####################################################################################################################################################
