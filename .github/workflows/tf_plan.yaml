---
name: Data Ingester Azure Terraform Plan

on:
  pull_request:
    paths:
      - 'data_ingester/**'
      - '!data_ingester/terraform/infrastructure_for_test/**'
      - '.github/workflows/tf_plan.yaml'
  workflow_dispatch:

jobs:
  plan:

    runs-on: ubuntu-latest

    permissions:
      contents: read
      pull-requests: write

    steps:
      - name: checkout
        uses: actions/checkout@v4

      - uses: awalsh128/cache-apt-pkgs-action@v1
        with:
          packages: musl-tools
          version: 1.0

      - name: toolchain
        id: toolchain
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: nightly-2024-09-04
          targets: x86_64-unknown-linux-musl
          components: rust-src, clippy

      - name: cargo audit
        run: cargo install cargo-audit; cd data_ingester/data_ingester_workspace; cargo audit

      - name: Cache build artifacts
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            ${{ github.workspace }}/data_ingester/data_ingester_workspace/target
          key: cache-rust-target-${{ steps.toolchain.outputs.name}}-${{ hashFiles('data_ingester/data_ingester_workspace/Cargo.lock') }}

      - name: cargo build
        run: cd data_ingester/data_ingester_workspace; cargo build --release --target=x86_64-unknown-linux-musl

      - name: cp bin
        run: cp data_ingester/data_ingester_workspace/target/x86_64-unknown-linux-musl/release/data_ingester_axum_entrypoint data_ingester/data_ingester_workspace/data_ingester_axum_entrypoint/function_zip

      - name: Deploy terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.9.5

      - name: Terraform version
        run: terraform -version

        # Terraform
      - name: Run terraform plan
        id: plan
        env:
          ARM_ACCESS_KEY: ${{ secrets.ARM_ACCESS_KEY }}
          ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
          ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
          ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
        run: |
          cd data_ingester/terraform/red
          terraform init -upgrade
          echo 'plan<<EOF' >> $GITHUB_OUTPUT
          terraform plan -no-color -out=tfplan >> $GITHUB_OUTPUT
          echo 'EOF' >> $GITHUB_OUTPUT

      - name: Get PR ID
        id: pr-id
        shell: bash
        run: |
          PR_NUMBER=$(echo ${{ github.ref }} | awk 'BEGIN { FS = "/" } ; { print $3 }')
          echo "PR_NUMBER=$PR_NUMBER" >> $GITHUB_OUTPUT

      - name: Comment Plan
        uses: peter-evans/create-or-update-comment@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          issue-number: ${{ steps.pr-id.outputs.PR_NUMBER }}
          reactions: 'rocket'
          body: |
            Terraform Plan:

            ```
            ${{ steps.plan.outputs.plan }}
            ```